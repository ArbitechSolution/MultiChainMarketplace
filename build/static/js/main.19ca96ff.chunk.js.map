{"version":3,"sources":["pages/NftDetails.jsx","components/layouts/nfts/NftItems.jsx","pages/CollectionDetails.jsx","pages/Nfts.jsx","pages/MyNfts.jsx","pages/Collections.jsx","pages/MyCollections.jsx","pages/AuctionDetails.jsx","pages/index.js","App.js","ScrollToTop.jsx","index.js","config/constants.js","utils/utils.jsx","pages/CreateCollection.jsx","pages/CreateNFT.jsx","pages/FreeMint.jsx","components/footer/Footer.jsx","components/header/Header.jsx","pages/menu.js","pages/menuChains.js","components/header/DarkMode.jsx","assets/images/logo/logo.svg"],"names":["NftDetails","nftid","useParams","useState","currentAccount","setCurrentAccount","chainId","setChainId","web3Api","setWeb3Api","nftContract","setNftContract","setColData","show","setShow","buyPrice","setBuyPrice","aucBuyPrice","setAucBuyPrice","aucOwner","setAucOwner","openBid","setOpenBid","nOwner","setNOwner","aucTime","hour","setHour","days","setDays","saleval","setSaleVal","auctionval","setAuctionValue","nftData","setNftData","btnName","setBtnName","mybalance","setMybalance","listPrice","setListPrice","navigate","useNavigate","useEffect","a","fetch","nftContratFile","json","convertNftContratFileToJson","nFTAbi","eth","Contract","NFTAddr","getBalance","balance","utils","fromWei","saleNft","auctionDetail","timer","nftInfo","owner","getCollectionDetails","id","methods","collectiondetails","call","then","data","catch","listofsalenft","from","result","Number","buyFixedNft","collectionid","tokenid","amount","getGasPrice","gasPriceNumber","amountIn","toBN","fromExponential","parseFloat","Math","pow","buynft","send","value","gasPrice","recipt","err","auctiondetail","aucde","val","length","userid","removeAuction","removesfromauction","console","log","window","location","reload","removeSale","cancelfixedsale","originalowner","buyAuctionNft","buyauction","timing","day","floor","hr","claimAuctionNft","claim","fixedSale","price","priceIn","fixedsales","status","alert","nftinformation","auction","endday","endhours","startauction","burnMain","colId","burnorinalnft","className","Header","setAccount","_account","VIDEO_TYPE","includes","JSON","parse","alt","muted","autoPlay","loop","src","getCanonicalPath","IPFS_BASE_URL","IMAGE_TYPE","AUDIO_TYPE","style","width","CHAIN_INFO","nativeCurrency","symbol","toLowerCase","borderRadius","onClick","d","h","m","onSubmit","e","preventDefault","type","placeholder","step","min","onBlur","target","required","fontSize","textTransform","onChange","marginTop","DevWallet","Footer","NFTs","props","allNftData","setAllNftData","nftcnt","setNftcnt","getNftsIndexFromCol","_colId","_nftContract","collectionnft","colItemIndex","i","getNftDetails","nftDetail","getPriceFromListSale","nftPrice","makeAllNftData","old","map","item","idx","to","color","height","display","justifyContent","marginBottom","CollectionDetails","searchWord","colData","totalSupply","setTotalSupply","saleNFT","setSaleNFT","ownersData","setOwnersData","owners","getNftsInCol","getSaleNft","push","deleteCollection","getAccounts","accounts","usrWallet","deletecollection","filter","href","name","checked","NftItems","curTab","setCurTab","allFixedSale","setAllFixedSale","colllist","setcolllist","totalcolection","getTotalNftCount","tokenidmint","totalNftCnt","collectionform","getAllNFTsByCol","totalnft","nftcount","getAllNFTs","index","collectionstored","nftId","getNftInfo","saveAllFixedSaleList","MyNFTs","arr","setArr","setprice","pricearr","setpricearr","allp","setallp","setallprice","setalldata","newlist","balanceOf","bal","parseInt","getMyNfts","_balance","tokenOfOwnerByIndex","saveFixedSaleList","localStorage","setItem","stringify","saleNftPrie","getallprice","pist","getItem","fees","getalllist","Collections","colList","setColList","allColData","setAllColData","colcnt","setColCnt","getAllCollections","_details","makeAllColList","MyCollections","setColcnt","getMyCollections","totalcollectiondetails","AuctionDetails","setBalance","setAucStat","setAucTime","setNewBidPrice","timer1","auctionState","nftauctionend","minutesout","routes","path","component","CreateCollection","CreateNFT","Nfts","MyNfts","FreeMint","App","onUpdate","scrollTo","exact","element","ScrollToTop","pathname","useLocation","ReactDOM","render","document","getElementById","CHAIN_ZKMAIN","CHAIN_ZKTEST","CHAIN_BSC","CHAIN_ARBI_ONE","CHAIN_BSC_TEST","CHAIN_ARBI_TEST","chainName","decimals","rpcUrls","blockExplorerUrls","chainSavedId","provider","Provider","gasPriceInUnits","ethers","formatUnits","web3","Web3","providers","HttpProvider","_path","tempStr","substring","indexOf","replace","auth","Buffer","projectId","toString","ipfsClient","create","host","port","protocol","headers","authorization","timeout","setImage","buffer","setBuffer","displayImage","setDisplayImage","collectionName","displayName","websiteUrl","collectionDescription","marketFee","setData","setDataType","underminting","setUnderminting","errText","setErrText","submit","_event","add","uploadResult","createCollection","checkDuplicatedImage","_imgPath","stopduplicate","createcollection","paddingBottom","files","file","FileReader","onload","readyState","reader","readAsArrayBuffer","onloadend","readAsDataURL","position","bottom","image","nftName","ownerName","description","numMint","dataType","setError","mintMulti","setMintMulti","clickedMultiYN","checkSubmitValidation","validPrice","validCopies","mintMultiple","mintNft","duplicatedImage","des","mintfee","nftIndex","parseUnits","nftImage","copies","_times","mintfeeTotal","createMulti","txHash","setTxHash","mintResult","setMintResult","selectImage","freemintimageurl","method","response","blob","File","error","transactionHash","objectFit","setIsVisible","toggleVisibility","pageYOffset","addEventListener","removeEventListener","logodark","logofooter","title","link","action","acceptCharset","icon","web3Modal","selectedAccount","chainIdSaved","menus","links","namesub","sub","DarkMode","body","darkTheme","classList","init","undefined","rpcOption","providerOptions","walletconnect","package","WalletConnectProvider","options","network","rpc","Web3Modal","cacheProvider","w3m","fetchAccountData","web3Provider","Web3Provider","signer","getSigner","getAddress","refreshAccountData","ethereum","connect","on","networkId","clearCachedProvider","modalShow","setModalShow","acc","setacc","accountid","setaccountid","setWeb3","setProviderEvent","getAccount","request","params","code","web3_2","cachedProvider","headerRef","useRef","isSticky","header","querySelector","scrollTop","scrollY","remove","menuLeft","btnToggle","activeIndex","setActiveIndex","ref","rel","srcSet","logodark2x","logoheader","logoheader2x","current","toggle","handleOnClick","submenu","_chainId","changeChain","substr","onConnect","Modal","onHide","closeButton","disconnet"],"mappings":"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","file":"static/js/main.19ca96ff.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useParams, useNavigate } from 'react-router-dom';\nimport fromExponential from 'from-exponential';\n\nimport Header from '../components/header/Header';\nimport Footer from '../components/footer/Footer';\nimport { NFTAddr, DevWallet, IPFS_BASE_URL, VIDEO_TYPE, IMAGE_TYPE, AUDIO_TYPE, CHAIN_INFO } from '../config/constants'\nimport { getCanonicalPath, getGasPrice } from '../utils/utils';\n\nconst NftDetails = () => {\n    const { nftid } = useParams()\n\n    const [currentAccount, setCurrentAccount] = useState(null);\n    const [chainId, setChainId] = useState();\n    const setAccount = (_account) => {\n        setCurrentAccount(_account);\n    }\n    const [web3Api, setWeb3Api] = useState(null);\n    const [nftContract, setNftContract] = useState();\n    const [colData, setColData] = useState();\n    const [show, setShow] = useState();\n    const [buyPrice, setBuyPrice] = useState();\n    const [aucBuyPrice, setAucBuyPrice] = useState();\n    const [aucOwner, setAucOwner] = useState();\n    const [aucStat, setAucStat] = useState();\n    const [openBid, setOpenBid] = useState();\n    const [nOwner, setNOwner] = useState();\n    const [aucTime, setAucTime] = useState();\n    const [hour, setHour] = useState()\n    const [days, setDays] = useState()\n    const [saleval, setSaleVal] = useState()\n    const [auctionval, setAuctionValue] = useState()\n    const [nftData, setNftData] = useState();\n    const [btnName, setBtnName] = useState();\n    const [mybalance, setMybalance] = useState();\n    const [listPrice, setListPrice] = useState(0);\n    const [takerFee, setTakerFee] = useState();\n    const [royalty, setRoyalty] = useState();\n    const [totalFee, setTotalFee] = useState();\n\n    const navigate = useNavigate();\n\n    useEffect(async () => {\n        if (chainId && web3Api && currentAccount) {\n            const nftContratFile = await fetch(\"/abis/ZkSeaNFT.json\");\n            const convertNftContratFileToJson = await nftContratFile.json();\n            const nFTAbi = convertNftContratFileToJson;\n\n            let nftContract = new web3Api.eth.Contract(nFTAbi, NFTAddr[chainId]);\n            setNftContract(nftContract);\n\n            const balance = await web3Api.eth.getBalance(currentAccount);\n            setMybalance(web3Api.utils.fromWei(balance, 'ether'));            \n        }\n    }, [chainId, web3Api, currentAccount])\n\n    useEffect(async () => {\n        if (web3Api && nftContract) {\n            if (nftid) {\n                saleNft(nftid)\n                auctionDetail(nftid)\n                timer(nftid)\n                nftInfo(nftid)\n                // auctionState(nftid)\n                owner(nftid)\n            }\n        }\n    }, [web3Api, nftContract])\n\n    const getCollectionDetails = async (id) => {\n        if (web3Api) {\n            nftContract.methods.collectiondetails(id).call()\n                .then((data) => {\n                    setColData(data)\n                }).catch()\n        }\n    }\n\n    const saleNft = async (id) => {\n        if (web3Api) {\n            nftContract.methods.listofsalenft(id).call({ from: currentAccount })\n                .then((result) => {\n                    setBuyPrice((Number(result[3])) / 1000000000000000000);\n                    setAucBuyPrice(((Number(result[2])) / 1000000000000000000));\n                    if (((Number(result[2])) / 1000000000000000000) > 0) {\n                        setListPrice((Number(result[2])) / 1000000000000000000);\n                    } else {\n                        setListPrice((Number(result[3])) / 1000000000000000000);\n                    }                    \n                })\n                .catch()\n        }\n    }\n\n    const buyFixedNft = async (collectionid, tokenid, amount) => {\n        if (web3Api) {\n            setShow(true);\n            setBtnName(\"buynft\");\n            const gasPriceNumber = await getGasPrice();\n            let amountIn = web3Api.utils.toBN(fromExponential(((parseFloat(amount)) * Math.pow(10, 18))));\n\n            nftContract.methods.buynft(collectionid, tokenid).send({ from: currentAccount, value: amountIn, gasPrice: gasPriceNumber})\n                .then((recipt) => {\n                    setShow(false);\n                    navigate(\"/my-nfts\");\n                })\n                .catch((err) => {\n                    setShow(false)\n                })\n        }\n    }\n\n    const auctionDetail = async (id) => {\n        if (web3Api) {\n            nftContract.methods.auctiondetail(id).call({ from: currentAccount })\n                .then((value) => {\n                    var aucde = {\n                        id: value[1],\n                        val: (Number(value[0]))?.length > 21 ? Number(value[0]) / 1000000000000000000000000000000000000 : Number(value[0]) / 1000000000000000000,\n                        userid: id\n                    }\n                    setAucOwner(aucde)\n                }).catch()\n\n        }\n    }\n\n    const auctionState = async (tokenid) => {\n        if (web3Api) {\n            nftContract.methods.nftauctionend(tokenid).call({ from: currentAccount })\n                .then((result) => {\n                    setAucStat(result)\n                })\n                .catch((err) => {\n                    console.log(err);\n                })\n        }\n    }\n\n    const removeAuction = async (tokenid) => {\n        if (web3Api) {\n            setShow(true)\n            setBtnName(\"cancelauc\");\n\n            const gasPriceNumber = await getGasPrice();\n\n            nftContract.methods.removesfromauction(tokenid).send({ from: currentAccount, gasPrice: gasPriceNumber })\n            .then((result) => {\n                console.log(result);\n                setShow(false);\n                window.location.reload();\n            })\n            .catch((err) => {\n                setShow(false)\n            })\n        }\n    }\n\n    const removeSale = async (collectionid, tokenid) => {\n        if (web3Api) {\n            setShow(true)\n            setBtnName(\"cancelsale\");\n\n            const gasPriceNumber = await getGasPrice();\n\n            nftContract.methods.cancelfixedsale(tokenid).send({ from: currentAccount, gasPrice: gasPriceNumber})\n            .then((result) => {\n                console.log(result);\n                window.location.reload();\n            })\n            .catch((err) => {\n                setShow(false)\n            })\n\n        }\n    }\n\n    const owner = async (tokenid) => {\n        if (web3Api) {\n            nftContract.methods.originalowner(tokenid).call({ from: currentAccount })\n            .then((result) => {\n                setNOwner(result)\n            })\n            .catch()\n        }\n    }\n\n    const buyAuctionNft = async (tokenid) => {\n\n        if (Number(aucBuyPrice) * 1000000000000000000 * 1.02 / 1000000000000000000 > (Number(mybalance) + 0.003)) return false;\n\n        if (web3Api) {\n            setShow(true)\n            setBtnName(\"buyauc\");\n\n            const gasPriceNumber = await getGasPrice();\n            let amountIn = web3Api.utils.toBN(fromExponential(((parseFloat(aucBuyPrice)) * Math.pow(10, 18))));            \n\n            nftContract.methods.buyauction(tokenid).send({ from: currentAccount, value: amountIn, gasPrice: gasPriceNumber })\n                .then((recipt) => {\n                    setShow(false);\n                    window.location.reload();\n                })\n                .catch((err) => {\n                    setShow(false)\n                })\n        }\n    }\n\n    const timer = async (id) => {\n        if (web3Api) {\n            nftContract.methods.timing(id).call({ from: currentAccount })\n                .then((result) => {\n                    var day = Math.floor(result / 86400)\n                    var hr = Math.floor((result - day * 86400) / 3600)\n                    var minutesout = Math.floor((result - day * 86400 - hr * 3600) / 60);\n                }).catch()\n        }\n    }\n\n    const timer1 = async (id) => {\n        if (web3Api) {\n            nftContract.methods.timing(id).call({ from: currentAccount })\n            .then((result) => {\n                var day = Math.floor(result / 86400)\n                var hr = Math.floor((result - day * 86400) / 3600)\n                var minutesout = Math.floor((result - day * 86400 - hr * 3600) / 60);\n                setAucTime({ id: id, d: day, h: hr, m: minutesout })\n            }).catch()\n        }\n    }\n\n    const claimAuctionNft = async (collectionid, tokenid) => {\n        if (web3Api) {\n            setShow(true)\n            setBtnName(\"claimauc\");\n            const gasPriceNumber = await getGasPrice();\n\n            nftContract.methods.claim(collectionid, tokenid).send({ from: currentAccount, gasPrice: gasPriceNumber })\n            .then((recipt) => {\n                setShow(false)\n                navigate(\"/my-collections\")\n            })\n            .catch((err) => {\n                setShow(false)\n            })\n        }\n    }\n\n    const fixedSale = async (tokenid, price) => {\n        setShow(true)\n        setBtnName(\"fixedsale\");\n        if (web3Api) {\n\n            const gasPriceNumber = await getGasPrice();\n            let priceIn = web3Api.utils.toBN(fromExponential(((parseFloat(price)) * Math.pow(10, 18))));   \n\n            nftContract.methods.fixedsales(tokenid, priceIn).send({ from: currentAccount, gasPrice: gasPriceNumber})\n            .then((result) => {\n                if (result.status === true) {\n                    setShow(false);\n                    navigate(\"/my-collections\")\n                } else {\n                    alert('failed');\n                }\n            })\n            .catch((err) => {\n                setShow(false);\n            })\n        }\n    }\n\n    const nftInfo = async (id) => {\n        if (web3Api) {\n            nftContract.methods.nftinformation(id).call({ from: currentAccount })\n                .then((result) => {\n                    setNftData(result);\n                    getCollectionDetails(result[7]);\n                }).catch()\n\n        }\n    }\n\n    const auction = async (tokenid, price, endday, endhours) => {\n        if (web3Api) {\n            setShow(true)\n            setBtnName(\"auc\");\n            const gasPriceNumber = await getGasPrice();\n            let priceIn = web3Api.utils.toBN(fromExponential(((parseFloat(price)) * Math.pow(10, 18))));\n\n            nftContract.methods.startauction(tokenid, priceIn, endday, endhours).send({ from: currentAccount, gasPrice: gasPriceNumber})\n            .then((recipt) => {\n                if (recipt.status === true) {\n                    setShow(false)\n                    navigate(\"/my-collections\")\n                } else {\n                    alert('failed')\n                }\n            })\n            .catch(err => {\n                setShow(false)\n            })\n        }\n    }\n\n    const burnMain = async (tokenid) => {\n        setShow(true)\n        setBtnName(\"burn\");\n        if (web3Api) {\n            const gasPriceNumber = await getGasPrice();\n\n            const colId = nftData[7];\n            nftContract.methods.burnorinalnft(colId, tokenid).send({ from: currentAccount, gasPrice: gasPriceNumber})\n            .then((result) => {\n                console.log(result);\n                setShow(false)\n                navigate(\"/my-nfts\")\n            })\n            .catch((err) => {\n                setShow(false)\n                console.log(err);\n            })\n        }\n    }\n\n    return (\n        <div className='item-details'>\n            <Header setAccount={setAccount} setWeb3Api={setWeb3Api} setChainId={setChainId}/>\n            <section className=\"first-section productDetails\">\n                <div className=\"autoContainer\">\n                    <div className=\"productDetails__inner\">\n                        <div className=\"productDetails__inner-image\">\n                            {nftData && (VIDEO_TYPE.includes(JSON.parse(nftData[5])[1]) ?\n                                <video alt=\"\" muted autoPlay loop>\n                                    <source src={getCanonicalPath(IPFS_BASE_URL + nftData[6])} />\n                                </video> \n                                : IMAGE_TYPE.includes(JSON.parse(nftData[5])[1]) ?\n                                <img src={getCanonicalPath(IPFS_BASE_URL + nftData[6])} alt=\"\"/>\n                                : AUDIO_TYPE.includes(JSON.parse(nftData[5])[1]) ?\n                                <audio style={{ width: '90%' }} src={getCanonicalPath(IPFS_BASE_URL + nftData[6])} />\n                                : null)\n                            }\n                        </div>\n                        <div className=\"productDetails__inner-info\">\n                            <h2>\n                                {nftData && nftData[1]}\n                            </h2>\n                            <div className=\"productDetails__inner-info-tools\">\n                                <h5>\n                                    <p>\n                                        {nftData && nftData[3]}\n                                    </p>\n                                    <div>\n                                        <span>\n                                            <img src=\"/assets/images/zk/share.svg\" alt=\"\" />\n                                        </span>\n                                        <small>\n                                            Share\n                                        </small>\n                                    </div>\n                                </h5>\n                                <button className=\"refresh\">\n                                    <img src=\"/assets/images/zk/refreshGradient.svg\" alt=\"\" />\n                                </button>\n                            </div>\n                            <div className=\"productDetails__inner-info-text\">\n                                <h5>\n                                    {aucBuyPrice > 0 ? \"Auction Min Price\" : \"List Price\"}\n                                </h5>\n                                <p>\n                                    <span>\n                                        <img src=\"/assets/images/zk/eth.svg\" alt=\"\" />\n                                    </span>\n                                    {listPrice} {chainId && CHAIN_INFO[chainId].nativeCurrency.symbol}\n                                </p>\n                            </div>\n                            <div className=\"productDetails__inner-info-text\">\n                                <h5>\n                                    Taker Fee\n                                </h5>\n                                <p>\n                                    (1.5%)\n                                    <span>\n                                        <img src=\"/assets/images/zk/eth.svg\" alt=\"\" />\n                                    </span>\n                                    {Number(listPrice) * 1000000000000000000 * 0.015 / 1000000000000000000} {chainId && CHAIN_INFO[chainId].nativeCurrency.symbol}\n                                </p>\n                            </div>\n                            <div className=\"productDetails__inner-info-text\">\n                                <h5>\n                                    Royalty\n                                </h5>\n                                <p>\n                                    Full (5%)\n                                    <span>\n                                        <img src=\"/assets/images/zk/eth.svg\" alt=\"\" />\n                                    </span>\n                                    {Number(listPrice) * 1000000000000000000 * 0.05 / 1000000000000000000} {chainId && CHAIN_INFO[chainId].nativeCurrency.symbol}\n                                </p>\n                            </div>\n                            <div className=\"productDetails__inner-info-total\">\n                                <h5>\n                                    Total\n                                </h5>\n                                <p>\n                                    <span>\n                                        <img src=\"/assets/images/zk/eth.svg\" alt=\"\" />\n                                    </span>\n                                    {Number(listPrice) * 1000000000000000000 * 1.02 / 1000000000000000000} {chainId && CHAIN_INFO[chainId].nativeCurrency.symbol}\n                                </p>\n                            </div>\n                            <div className=\"productDetails__inner-info-pay\">\n                                <div className=\"productDetails__inner-info-pay-text\">\n                                    <span>\n                                        <img src=\"/assets/images/zk/eth.svg\" alt=\"\" />\n                                    </span>\n                                    <h5>\n                                        Pay in {chainId && CHAIN_INFO[chainId].nativeCurrency.symbol}\n                                    </h5>\n                                </div>\n                                <p>\n                                    Connect supported wallet • Fastest\n                                </p>\n                                <div className=\"arrow\">\n                                    <img src=\"/assets/images/zk/arrow-down.svg\" alt=\"\" />\n                                </div>\n                            </div>\n                            {(aucBuyPrice > 0 ? Number(aucBuyPrice) * 1000000000000000000 * 1.02 / 1000000000000000000 : Number(listPrice) * 1000000000000000000 * 1.02 / 1000000000000000000) > (Number(mybalance) + 0.003) &&\n                                <p>\n                                    <span>\n                                        <img src=\"/assets/images/zk/infoYellow.svg\" alt=\"\" />\n                                    </span>\n                                    Not enough funds in your wallet\n                                </p>\n                            }\n                            <br/>\n                            {/* <div className=\"productDetails__inner-info-text\">\n                                <h6>\n                                    Add funds with:\n                                </h6>\n                                <p>\n                                    <span>\n                                        <img src=\"/assets/images/zk/stripe.svg\" alt=\"\" />\n                                    </span>\n                                    Stripe\n                                </p>\n                            </div> */}\n                            {/* {nOwner?.toLowerCase() !== currentAccount?.toLowerCase() && \n                                <div className=\"productDetails__inner-info-text\">\n                                    <button className=\"button--primary\" style={{width:\"100%\", borderRadius:8}} onClick={() => navigate('/bid/' + nftData[0])} >Make Offer</button>\n                                </div>\n                            }   */}\n                            {buyPrice > 0 && nOwner?.toLowerCase() === currentAccount?.toLowerCase() ? null :\n                                buyPrice > 0 ? \n                                <div className=\"productDetails__inner-info-text\">\n                                    <button className=\"button--primary\" style={{width:\"100%\", borderRadius:8}} onClick={() => buyFixedNft(nftData[7], nftData[0], buyPrice)} >Buy now {btnName==\"buynft\" && show && <i className='fas fa-spinner fa-pulse fa-1x ml-3'></i>}</button>\n                                </div>\n                                 : null\n                            }                          \n\n                            {aucTime?.d === 0 && aucTime?.h === 0 && aucTime?.m === 0 && aucOwner?.id.toLowerCase() === currentAccount?.toLowerCase() ?\n                                (aucBuyPrice > 0 && aucOwner?.val >= aucBuyPrice) ? \n                                <div className=\"productDetails__inner-info-text\">\n                                    <button style={{width:\"100%\", borderRadius:8}}  className=\"button--primary\" onClick={() => claimAuctionNft(nftData[7], nftData[0])}  >CLAIM {btnName==\"claimauc\" && show && <i className='fas fa-spinner fa-pulse fa-1x ml-3'></i>}</button>\n                                </div>\n                                 : \n                                Number(aucBuyPrice) > 0 && Number(aucBuyPrice) > aucOwner?.val && nOwner?.toLowerCase() === currentAccount?.toLowerCase() ? \n                                <div className=\"productDetails__inner-info-text\">\n                                    <button style={{width:\"100%\", borderRadius:8}}  className=\"button--primary\" onClick={() => removeAuction(nftData[0])} >Cancel Auction {btnName==\"cancelauc\" && show && <i className='fas fa-spinner fa-pulse fa-1x ml-3'></i>}</button>\n                                </div>\n                                 : null\n                                : null\n                            }\n\n                            {aucTime?.d === 0 && aucTime?.h === 0 && aucTime?.m === 0 && Number(aucBuyPrice) > 0 && Number(aucBuyPrice) > aucOwner?.val && nOwner?.toLowerCase() === currentAccount?.toLowerCase() ? \n                                <div className=\"productDetails__inner-info-text\">\n                                    <button style={{width:\"100%\", borderRadius:8}}  className=\"button--primary\" onClick={() => removeAuction(nftData[0])} >Cancel Auction {btnName==\"cancelauc\" && show && <i className='fas fa-spinner fa-pulse fa-1x ml-3'></i>}</button>\n                                </div>: null\n                            }\n\n                            {\n                                nOwner?.toLowerCase() === currentAccount?.toLowerCase() ? null :\n                                    openBid ? null :\n                                    aucBuyPrice > 0 ?\n                                    aucTime?.d === 0 && aucTime?.h === 0 && aucTime?.m === 0 ? null :\n                                    <div className=\"productDetails__inner-info-text\">\n                                        <button style={{width:\"100%\", borderRadius:8}} className=\"button--primary\"  onClick={() => setOpenBid(true)} >BID</button>\n                                    </div>\n                                    : null\n                            }\n\n                            <form onSubmit={(e) => { e.preventDefault() ; buyAuctionNft(nftData[0]); }}>\n                                {openBid ?\n                                    <div className=\"productDetails__inner-info-text\">\n                                        <input type=\"Number\" placeholder=\"Enter bid value\" step=\"any\" min={aucBuyPrice > aucOwner?.val ? aucBuyPrice : aucOwner?.val} onBlur={(e) => setAucBuyPrice(Number(e.target.value))} required /> \n                                    </div>: null\n                                }\n                                {openBid ?\n                                    aucBuyPrice > 0 ?\n                                    <div className=\"productDetails__inner-info-text\">\n                                        <button style={{width:\"100%\", borderRadius:8}} className=\"button--primary\" >BID {btnName==\"buyauc\" && show && <i className='fas fa-spinner fa-pulse fa-1x ml-3'></i>}</button>\n                                    </div> : null\n                                    : null\n                                }                                  \n                            </form>\n                            \n                            {\n                                nftData && nftData[8].toLowerCase() === currentAccount?.toLowerCase() ?\n                                <form onSubmit={(e) => {\n                                    e.preventDefault();\n                                    auction(nftData[0], auctionval, days, hour)\n                                }}>\n                                    <div className=\"productDetails__inner-info-text\">\n                                        <h3 style={{ fontSize: '25px', textTransform: 'capitalize' }}>Auction</h3>\n                                    </div>\n                                    <div className=\"productDetails__inner-info-text\">\n                                        <input type=\"Number\" placeholder=\"Enter Min Bid Value in ETH\" step=\"any\" min={aucBuyPrice > aucOwner?.val ? aucBuyPrice : aucOwner?.val} onChange={(e) => {setAuctionValue(e.target.value); setListPrice(Number(e.target.value))}} required />\n                                    </div>\n                                    <div className=\"productDetails__inner-info-text\">\n                                        <input type=\"Number\" placeholder=\"Enter Days\" min=\"0\" onChange={(e) => setDays(e.target.value)} required />\n                                    </div>\n                                    <div className=\"productDetails__inner-info-text\">\n                                        <input type=\"Number\" placeholder=\"Enter Hours\" min=\"0\" onChange={(e) => setHour(e.target.value)} required />\n                                    </div>\n                                    <button style={{width:\"100%\", borderRadius:8}} className=\"button--primary\" >Auction{btnName==\"auc\" && show && <i className='fas fa-spinner fa-pulse fa-1x ml-3'></i>}</button>\n                                </form> : null\n                            }\n\n                            {\n                                nftData && nftData[8].toLowerCase() === currentAccount?.toLowerCase() ?\n                                <form onSubmit={(e) => {\n                                        e.preventDefault()\n                                        fixedSale(nftData[0], saleval)\n\n                                    }} style={{marginTop:8}}>\n                                    <div className=\"productDetails__inner-info-text\">\n                                        <h3 style={{ fontSize: '25px', textTransform: 'capitalize' }}>Set Sale Price</h3>\n                                    </div>\n                                    <div className=\"productDetails__inner-info-text\">\n                                        <input type=\"Number\" placeholder=\"Enter Sale Price in ETH\" step=\"any\" min={aucBuyPrice > aucOwner?.val ? aucBuyPrice : aucOwner?.val} onChange={(e) => setSaleVal(e.target.value)} required />\n                                    </div>\n                                    <div className=\"productDetails__inner-info-text\">\n                                        <button className=\"button--primary\" style={{width:\"100%\", borderRadius:8}}  >Set Sale Price {btnName==\"fixedsale\" && show && <i className='fas fa-spinner fa-pulse fa-1x ml-3'></i>}</button>  \n                                    </div>\n                                </form>: null\n                            }\n                            \n                            {\n                                buyPrice > 0 && nOwner?.toLowerCase() === currentAccount?.toLowerCase() ? \n                                <div className=\"productDetails__inner-info-text\">\n                                    <button className=\"button--primary\" style={{width:\"100%\", borderRadius:8}} onClick={() => removeSale(nftData[7], nftData[0])} >Cancel Sale {btnName==\"cancelsale\" && show && <i className='fas fa-spinner fa-pulse fa-1x ml-3'></i>}</button> \n                                </div>                                \n                                : null\n                            }\n\n                            {\n                                DevWallet.toLowerCase() == currentAccount?.toLowerCase() ?\n                                <div className=\"productDetails__inner-info-text\">\n                                    <button className=\"button--primary\" style={{width:\"100%\", borderRadius:8}} onClick={() => burnMain(nftid)} >Burn NFT {btnName==\"burn\" && show && <i className='fas fa-spinner fa-pulse fa-1x ml-3'></i>}</button>\n                                </div>\n                                : null\n                            }\n\n                        </div>\n                    </div>\n                </div>\n            </section>\n            {/* <section className=\"tab\">\n                <div className=\"autoContainer\">\n                    <div className=\"tab__inner\">\n                    <div className=\"tab__inner-column\">\n                        <div className=\"tabItem\">\n                        <div className=\"tabItem__buttons\">\n                            <div className=\"tabItem__buttons-body tabBtn wow fadeInUp\" data-tab=\"#tab-1\" data-wow-duration=\".3s\"\n                            data-wow-delay=\".1s\">\n                            <span className=\"icon\">\n                                <img src=\"/assets/images/zk/pulse.svg\" alt=\"\" />\n                            </span>\n                            <h5>\n                                Price history\n                            </h5>\n                            <span className=\"icon arrow\">\n                                <img src=\"/assets/images/zk/arrow-down.svg\" alt=\"\" />\n                            </span>\n                            </div>\n                            <div className=\"tabItem__buttons-body tabBtn wow fadeInUp\" data-tab=\"#tab-2\" data-wow-duration=\".3s\"\n                            data-wow-delay=\".14s\">\n                            <span className=\"icon\">\n                                <img src=\"/assets/images/zk/flash.svg\" alt=\"\" />\n                            </span>\n                            <h5>\n                                No offer yet\n                            </h5>\n                            <span className=\"icon arrow\">\n                                <img src=\"/assets/images/zk/arrow-down.svg\" alt=\"\" />\n                            </span>\n                            </div>\n                            <div className=\"tabItem__buttons-body tabBtn wow fadeInUp\" data-tab=\"#tab-3\" data-wow-duration=\".3s\"\n                            data-wow-delay=\".17s\">\n                            <span className=\"icon\">\n                                <img src=\"/assets/images/zk/pulse.svg\" alt=\"\" />\n                            </span>\n                            <h5>\n                                Activities\n                            </h5>\n                            <span className=\"icon arrow\">\n                                <img src=\"/assets/images/zk/arrow-down.svg\" alt=\"\" />\n                            </span>\n                            </div>\n                        </div>\n                        <div className=\"tabItem__contents\">\n                            <div className=\"tabItem__contents-item tabEvent\" id=\"tab-1\">\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Mint Address\n                                </h6>\n                                <div className=\"tabItem__contents-item-text\">\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/solanafm.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/selonasarch.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/eth.svg\" alt=\"\" />\n                                </span>\n                                <p>\n                                    JBscG ... xgc\n                                </p>\n                                </div>\n                            </div>\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Token Address\n                                </h6>\n                                <div className=\"tabItem__contents-item-text\">\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/solanafm.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/selonasarch.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/eth.svg\" alt=\"\" />\n                                </span>\n                                <p>\n                                    9p2yG ... zdf\n                                </p>\n                                </div>\n                            </div>\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Owner\n                                </h6>\n                                <div className=\"tabItem__contents-item-text\">\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/solanafm.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/selonasarch.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/eth.svg\" alt=\"\" />\n                                </span>\n                                <p>\n                                    Nsge5 ... g6n\n                                </p>\n                                </div>\n                            </div>\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Creator Royalties\n                                </h6>\n                                <p>\n                                5%\n                                </p>\n                            </div>\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Taker Fee\n                                </h6>\n                                <p>\n                                1.5%\n                                </p>\n                            </div>\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Listing/Bidding/Cancel\n                                </h6>\n                                <p>\n                                Free\n                                </p>\n                            </div>\n                            </div>\n                            <div className=\"tabItem__contents-item tabEvent\" id=\"tab-2\">\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Mint Address\n                                </h6>\n                                <div className=\"tabItem__contents-item-text\">\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/solanafm.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/selonasarch.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/eth.svg\" alt=\"\" />\n                                </span>\n                                <p>\n                                    JBscG ... xgc\n                                </p>\n                                </div>\n                            </div>\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Token Address\n                                </h6>\n                                <div className=\"tabItem__contents-item-text\">\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/solanafm.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/selonasarch.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/eth.svg\" alt=\"\" />\n                                </span>\n                                <p>\n                                    9p2yG ... zdf\n                                </p>\n                                </div>\n                            </div>\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Owner\n                                </h6>\n                                <div className=\"tabItem__contents-item-text\">\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/solanafm.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/selonasarch.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/eth.svg\" alt=\"\" />\n                                </span>\n                                <p>\n                                    Nsge5 ... g6n\n                                </p>\n                                </div>\n                            </div>\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Creator Royalties\n                                </h6>\n                                <p>\n                                5%\n                                </p>\n                            </div>\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Taker Fee\n                                </h6>\n                                <p>\n                                1.5%\n                                </p>\n                            </div>\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Listing/Bidding/Cancel\n                                </h6>\n                                <p>\n                                Free\n                                </p>\n                            </div>\n                            </div>\n                            <div className=\"tabItem__contents-item tabEvent\" id=\"tab-3\">\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Mint Address\n                                </h6>\n                                <div className=\"tabItem__contents-item-text\">\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/solanafm.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/selonasarch.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/eth.svg\" alt=\"\" />\n                                </span>\n                                <p>\n                                    JBscG ... xgc\n                                </p>\n                                </div>\n                            </div>\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Token Address\n                                </h6>\n                                <div className=\"tabItem__contents-item-text\">\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/solanafm.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/selonasarch.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/eth.svg\" alt=\"\" />\n                                </span>\n                                <p>\n                                    9p2yG ... zdf\n                                </p>\n                                </div>\n                            </div>\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Owner\n                                </h6>\n                                <div className=\"tabItem__contents-item-text\">\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/solanafm.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/selonasarch.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/eth.svg\" alt=\"\" />\n                                </span>\n                                <p>\n                                    Nsge5 ... g6n\n                                </p>\n                                </div>\n                            </div>\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Creator Royalties\n                                </h6>\n                                <p>\n                                5%\n                                </p>\n                            </div>\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Taker Fee\n                                </h6>\n                                <p>\n                                1.5%\n                                </p>\n                            </div>\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Listing/Bidding/Cancel\n                                </h6>\n                                <p>\n                                Free\n                                </p>\n                            </div>\n                            </div>\n                        </div>\n                        </div>\n                    </div>\n                    <div className=\"tab__inner-column\">\n                        <div className=\"tabItem\">\n                        <div className=\"tabItem__buttons\">\n                            <div className=\"tabItem__buttons-body tabBtn wow fadeInUp\" data-tab=\"#tab-4\" data-wow-duration=\".3s\"\n                            data-wow-delay=\".2s\">\n                            <span className=\"icon\">\n                                <img src=\"/assets/images/zk/user.svg\" alt=\"\" />\n                            </span>\n                            <h5>\n                                Price historyAbout Doodle Soda\n                            </h5>\n                            <span className=\"icon arrow\">\n                                <img src=\"/assets/images/zk/arrow-down.svg\" alt=\"\" />\n                            </span>\n                            </div>\n                            <div className=\"tabItem__buttons-body tabBtn wow fadeInUp\" data-tab=\"#tab-5\" data-wow-duration=\".3s\"\n                            data-wow-delay=\".24s\">\n                            <span className=\"icon\">\n                                <img src=\"/assets/images/zk/shield.svg\" alt=\"\" />\n                            </span>\n                            <h5>\n                                Attributes\n                            </h5>\n                            <span className=\"icon arrow\">\n                                <img src=\"/assets/images/zk/arrow-down.svg\" alt=\"\" />\n                            </span>\n                            </div>\n                            <div className=\"tabItem__buttons-body tabBtn wow fadeInUp active\" data-tab=\"#tab-6\" data-wow-duration=\".3s\"\n                            data-wow-delay=\".27s\">\n                            <span className=\"icon\">\n                                <img src=\"/assets/images/zk/details.svg\" alt=\"\" />\n                            </span>\n                            <h5>\n                                Details\n                            </h5>\n                            <span className=\"icon arrow\">\n                                <img src=\"/assets/images/zk/arrow-down.svg\" alt=\"\" />\n                            </span>\n                            </div>\n                        </div>\n                        <div className=\"tabItem__contents\">\n                            <div className=\"tabItem__contents-item tabEvent\" id=\"tab-4\">\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Mint Address\n                                </h6>\n                                <div className=\"tabItem__contents-item-text\">\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/solanafm.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/selonasarch.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/eth.svg\" alt=\"\" />\n                                </span>\n                                <p>\n                                    JBscG ... xgc\n                                </p>\n                                </div>\n                            </div>\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Token Address\n                                </h6>\n                                <div className=\"tabItem__contents-item-text\">\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/solanafm.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/selonasarch.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/eth.svg\" alt=\"\" />\n                                </span>\n                                <p>\n                                    9p2yG ... zdf\n                                </p>\n                                </div>\n                            </div>\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Owner\n                                </h6>\n                                <div className=\"tabItem__contents-item-text\">\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/solanafm.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/selonasarch.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/eth.svg\" alt=\"\" />\n                                </span>\n                                <p>\n                                    Nsge5 ... g6n\n                                </p>\n                                </div>\n                            </div>\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Creator Royalties\n                                </h6>\n                                <p>\n                                5%\n                                </p>\n                            </div>\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Taker Fee\n                                </h6>\n                                <p>\n                                1.5%\n                                </p>\n                            </div>\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Listing/Bidding/Cancel\n                                </h6>\n                                <p>\n                                Free\n                                </p>\n                            </div>\n                            </div>\n                            <div className=\"tabItem__contents-item tabEvent\" id=\"tab-5\">\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Mint Address\n                                </h6>\n                                <div className=\"tabItem__contents-item-text\">\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/solanafm.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/selonasarch.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/eth.svg\" alt=\"\" />\n                                </span>\n                                <p>\n                                    JBscG ... xgc\n                                </p>\n                                </div>\n                            </div>\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Token Address\n                                </h6>\n                                <div className=\"tabItem__contents-item-text\">\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/solanafm.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/selonasarch.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/eth.svg\" alt=\"\" />\n                                </span>\n                                <p>\n                                    9p2yG ... zdf\n                                </p>\n                                </div>\n                            </div>\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Owner\n                                </h6>\n                                <div className=\"tabItem__contents-item-text\">\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/solanafm.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/selonasarch.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/eth.svg\" alt=\"\" />\n                                </span>\n                                <p>\n                                    Nsge5 ... g6n\n                                </p>\n                                </div>\n                            </div>\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Creator Royalties\n                                </h6>\n                                <p>\n                                5%\n                                </p>\n                            </div>\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Taker Fee\n                                </h6>\n                                <p>\n                                1.5%\n                                </p>\n                            </div>\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Listing/Bidding/Cancel\n                                </h6>\n                                <p>\n                                Free\n                                </p>\n                            </div>\n                            </div>\n                            <div className=\"tabItem__contents-item tabEvent active\" id=\"tab-6\">\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Mint Address\n                                </h6>\n                                <div className=\"tabItem__contents-item-text\">\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/solanafm.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/selonasarch.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/eth.svg\" alt=\"\" />\n                                </span>\n                                <p>\n                                    JBscG ... xgc\n                                </p>\n                                </div>\n                            </div>\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Token Address\n                                </h6>\n                                <div className=\"tabItem__contents-item-text\">\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/solanafm.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/selonasarch.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/eth.svg\" alt=\"\" />\n                                </span>\n                                <p>\n                                    9p2yG ... zdf\n                                </p>\n                                </div>\n                            </div>\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Owner\n                                </h6>\n                                <div className=\"tabItem__contents-item-text\">\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/solanafm.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/selonasarch.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/eth.svg\" alt=\"\" />\n                                </span>\n                                <p>\n                                    Nsge5 ... g6n\n                                </p>\n                                </div>\n                            </div>\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Creator Royalties\n                                </h6>\n                                <p>\n                                5%\n                                </p>\n                            </div>\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Taker Fee\n                                </h6>\n                                <p>\n                                1.5%\n                                </p>\n                            </div>\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Listing/Bidding/Cancel\n                                </h6>\n                                <p>\n                                Free\n                                </p>\n                            </div>\n                            </div>\n                        </div>\n                        </div>\n                    </div>\n                    </div>\n                </div>\n                </section> */}\n            <Footer />\n        </div>\n    );\n}\n\nexport default NftDetails;\n","import React , { useState , useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport {NFTAddr, DevWallet, IPFS_BASE_URL} from '../../../config/constants'\nimport { getCanonicalPath } from '../../../utils/utils';\n\nconst NFTs = props => {\n\n    const [web3Api, setWeb3Api] = useState(null);\n    const [allNftData, setAllNftData] = useState([]);\n    const [saleNFT, setSaleNFT] = useState([]);\n    const [show, setShow] = useState(false);\n    const [nftContract, setNftContract] = useState(); \n    const [nftcnt, setNftcnt] = useState(-1);\n    \n    useEffect(async () => {\n        if(props.chainId, props.web3Api){\n\n            const nftContratFile = await fetch(\"/abis/ZkSeaNFT.json\");\n            const convertNftContratFileToJson = await nftContratFile.json();\n            const nFTAbi = convertNftContratFileToJson;\n\n            let nftContract = new props.web3Api.eth.Contract(nFTAbi, NFTAddr[props.chainId]);\n            setNftContract(nftContract);\n            getNftsIndexFromCol(props.colId, nftContract);\n        }\n    }, [props.chainId, props.web3Api])\n\n    const getNftsIndexFromCol = async (_colId, _nftContract) => {\n        if (props.web3Api) {\n            _nftContract.methods.collectionnft(_colId).call()\n            .then((colItemIndex) => {\n                for (let i = 0; i < colItemIndex?.length; i++) {\n                    getNftDetails(colItemIndex[i], _nftContract);                    \n                }\n            }).catch()\n        }\n    }\n\n    const getNftDetails = async (id, _nftContract) => {\n        if (props.web3Api) {\n            _nftContract.methods.nftinformation(id).call()\n            .then( async (nftDetail) => {               \n                const nftPrice = await getPriceFromListSale(id, _nftContract);\n                makeAllNftData({...nftDetail, 12:JSON.parse(nftDetail[5])[1], 13: props.web3Api.utils.fromWei(nftPrice, 'ether') });\n            }).catch()\n        }\n    }\n\n    const makeAllNftData = (data) => {\n        setNftcnt(1);\n        setAllNftData((old) => [\n            ...old, data\n        ])\n    } \n    \n    const getPriceFromListSale = async (id, _nftContract) => {\n        if (props.web3Api) {\n           const result = await _nftContract.methods.listofsalenft(id).call(); \n           return result[3];\n\n        }\n    }\n\n    return (\n        <div className=\"grid__inner\">\n            { \n                allNftData.length > 0 ? allNftData.map((item, idx) => {\n                    return(\n                        <Link to={`/nft/${item[0]}`} className=\"cartProduct\" key={idx}>\n                            <div className=\"cartProduct__image\">\n                                <img src={getCanonicalPath(IPFS_BASE_URL + item[6])} alt=\"\" />\n                            </div>\n                            <div className=\"cartProduct__info\">\n                            <h6>\n                                <span style={{color:\"white\"}}>{item[1]}</span>\n                                <small>\n                                {item[3]}\n                                </small>\n                            </h6>\n                            <div className=\"cartProduct__info-text\">\n                                <div className=\"cartProduct__info-text-icons\">\n                                <span>\n                                    <img src=\"/assets/images/zk/eth.svg\" alt=\"\" />\n                                </span>\n                                <p>\n                                    {item[13]}\n                                </p>\n                                <span>\n                                    <img src=\"/assets/images/zk/info-circle.svg\" alt=\"\" />\n                                </span>\n                                <span>\n                                    <img src=\"/assets/images/zk/crown.svg\" alt=\"\" />\n                                </span>\n                                </div>\n                                <Link className=\"button--border\" to={\"/nft/\" + item[0]}>\n                                    <span>\n                                        Details\n                                    </span>\n                                </Link>\n                            </div>\n                            </div>\n                        </Link>\n                        \n                    )\n                })\n                :\n                nftcnt == -1 ?  <div style={{width:\"100%\", height:\"100%\", display:\"flex\", justifyContent:\"center\", marginTop:50, marginBottom:50}}><span style={{color:\"grey\", fontSize: 32}}>Loading ... </span></div> \n                :\n                nftcnt > 0 ? <div style={{width:\"100%\", height:\"100%\", display:\"flex\", justifyContent:\"center\", marginTop:50, marginBottom:50}}><span style={{color:\"grey\", fontSize: 32}}>Loading ... </span></div> \n                :\n                <div style={{width:\"100%\", height:\"100%\", display:\"flex\", justifyContent:\"center\", marginTop:50, marginBottom:50}}><span style={{color:\"grey\", fontSize: 32}}>No Items</span></div> \n            }\n        </div>\n    );\n}\n\nexport default NFTs;\n","import React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport 'react-tabs/style/react-tabs.css';\n\nimport Header from '../components/header/Header';\nimport Footer from '../components/footer/Footer';\nimport NftItems from '../components/layouts/nfts/NftItems';\nimport {NFTAddr, DevWallet, IPFS_BASE_URL} from '../config/constants'\nimport { getCanonicalPath, getGasPrice } from '../utils/utils';\n\nconst CollectionDetails = () => {\n    const { colId } = useParams();\n    const [chainId, setChainId] = useState();\n    const [currentAccount, setCurrentAccount] = useState(null);    \n    const setAccount = (_account) => {\n        setCurrentAccount(_account);\n    }\n    const [web3Api, setWeb3Api] = useState(null);    \n    const [searchWord, setSearchWord] = useState(\"\");    \n    const [nftContract, setNftContract] = useState(); \n    const [colData, setColData] = useState(); \n    const [show, setShow] = useState(); \n    const [totalSupply, setTotalSupply] = useState(0);\n    const [allNftData, setAllNftData] = useState([]);\n    const [saleNFT, setSaleNFT] = useState([]);\n    const [ownersData, setOwnersData] = useState([]);\n    let owners = [];\n    const navigate = useNavigate();\n\n    useEffect(async () => {\n        if (chainId && web3Api) {\n            const nftContratFile = await fetch(\"/abis/ZkSeaNFT.json\");\n            const convertNftContratFileToJson = await nftContratFile.json();\n            const nFTAbi = convertNftContratFileToJson;\n\n            let nftContract = new web3Api.eth.Contract(nFTAbi, NFTAddr[chainId]);\n            setNftContract(nftContract);\n            getCollectionDetails(colId, nftContract);\n            getNftsInCol(colId, nftContract);\n            getSaleNft(0, nftContract);\n        }\n    }, [chainId, web3Api])\n\n    const getNftsInCol = async (_colId, _nftContract) => {\n        if (web3Api) {\n            _nftContract.methods.collectionnft(_colId).call()\n            .then((colItemIndex) => {\n                setTotalSupply(colItemIndex.length);\n                for (let i = 0; i < colItemIndex?.length; i++) {\n                    getNftDetails(colItemIndex[i], _nftContract)\n                }\n            }).catch()\n        }\n    }\n\n    const getNftDetails = async (id, _nftContract) => {\n        if (web3Api) {\n            _nftContract.methods.nftinformation(id).call()\n            .then((nftDetail) => {\n                makeAllNftData({...nftDetail, 12:JSON.parse(nftDetail[5])[1] })\n            }).catch()\n        }\n    }\n\n    const getSaleNft = async (id, _nftContract) => {\n        if (web3Api) {\n            _nftContract.methods.listofsalenft(id).call()\n            .then((result) => {\n                setSaleNFT(result[0]);\n            }).catch()\n        }\n    }\n\n    const makeAllNftData = (data) => {\n        if (!owners.includes(data[8])) {\n            owners.push(data[8]);\n            setOwnersData(owners);\n        }\n\n        setAllNftData((old) => [\n            ...old, data\n        ])\n    } \n\n    const getCollectionDetails = async (id, _nftContract) => {\n        if (web3Api) {\n            _nftContract.methods.collectiondetails(id).call()\n            .then((data) => {\n                setColData(data)\n            }).catch()\n        }\n    }\n\n    const deleteCollection = async (id) => {\n        if (web3Api) {\n            setShow(true)\n            const accounts = await web3Api.eth.getAccounts();\n            let usrWallet = accounts[0];\n\n            const gasPriceNumber = await getGasPrice();\n\n            nftContract.methods.deletecollection(id).send({ from: usrWallet , gasPrice: gasPriceNumber})\n            .then((result) => {\n                console.log(result);\n                // history.push('/mycollection');\n                setShow(false)\n            }).catch((err) => {\n                console.log()\n                setShow(false)\n            })\n        }\n    }\n\n    return (\n        <div className='item-details'>\n            <Header setAccount={setAccount} setWeb3Api={setWeb3Api} setChainId={setChainId}/>\n            <section className=\"first-section productInfo\">\n                <div className=\"autoContainer\">\n                    <div className=\"productInfo__inner\">\n                    <div className=\"productInfo__inner-image\">\n                        <div className=\"ratioImage\">\n                            <img src={colData && (getCanonicalPath(IPFS_BASE_URL + colData[6]))} alt=\"\" />\n                        </div>\n                    </div>\n                    <div className=\"productInfo__inner-details\">\n                        <div className=\"productInfo__inner-details-text\">\n                        <h2>\n                            {colData && colData[2]}\n                        </h2>\n                        <p>\n                            By:\n                            <span>\n                            {colData && colData[3]}\n                            </span>\n                        </p>\n                        </div>\n                        <div className=\"productInfo__inner-details-wrapper\">\n                            <div className=\"productInfo__inner-details-items\">\n                                <div className=\"productInfoItem\">\n                                <h6>\n                                    FLOOR\n                                </h6>\n                                <p>\n                                    <span>\n                                    <img src=\"/assets/images/zk/eth.svg\" alt=\"\" />\n                                    </span>\n                                    _ _\n                                </p>\n                                </div>\n                                <div className=\"productInfoItem\">\n                                <h6>\n                                    TOTAL VOL\n                                </h6>\n                                <p>\n                                    <span>\n                                    <img src=\"/assets/images/zk/eth.svg\" alt=\"\" />\n                                    </span>\n                                    _ _\n                                </p>\n                                </div>\n                                <div className=\"productInfoItem\">\n                                <h6>\n                                    AVG. SALE 24H\n                                </h6>\n                                <p>\n                                    <span>\n                                    <img src=\"/assets/images/zk/eth.svg\" alt=\"\" />\n                                    </span>\n                                    _ _\n                                </p>\n                                </div>\n                                <div className=\"productInfoItem\">\n                                <h6>\n                                    OWNERS\n                                    <span>\n                                    <img src=\"/assets/images/zk/info-circle.svg\" alt=\"\" />\n                                    </span>\n                                </h6>\n                                <p>\n                                    {ownersData.length}\n                                </p>\n                                </div>\n                                <div className=\"productInfoItem\">\n                                <h6>\n                                    LISTED\n                                </h6>\n                                <p>\n                                    {allNftData.filter((item) => {\n                                        return saleNFT.includes(item[0]);\n                                    }).length}\n                                </p>\n                                </div>\n                                <div className=\"productInfoItem\">\n                                <h6>\n                                    TOTAL SUPPLY\n                                    <span>\n                                    <img src=\"/assets/images/zk/info-circle.svg\" alt=\"\" />\n                                    </span>\n                                </h6>\n                                <p>\n                                    {totalSupply}\n                                </p>\n                                </div>                            \n                            </div>\n                            <div className=\"productInfo__inner-details-social\">\n                                <div className=\"productInfoSocials\">\n                                <a href=\"https://discord.gg/YUBcETkpAT\" className=\"button--social\" target='_blank'>\n                                    <span>\n                                        <img src=\"/assets/images/zk/discord.svg\" alt=\"\" />\n                                    </span>\n                                </a>\n                                <a href=\"https://twitter.com/zkzerosea\" className=\"button--social\" target='_blank'>\n                                    <span>\n                                        <img src=\"/assets/images/zk/twitter.svg\" alt=\"\" />\n                                    </span>\n                                </a>\n                                <a href=\"#\" className=\"button--social\" target='_blank'>\n                                    <span>\n                                        <img src=\"/assets/images/zk/globus.svg\" alt=\"\" />\n                                    </span>\n                                </a>\n                                <a href=\"#\" className=\"productInfoSocials__button\">\n                                    <span>\n                                    <img src=\"/assets/images/zk/telescope.svg\" alt=\"\" />\n                                    </span>\n                                    <p>\n                                    Watch\n                                    </p>\n                                </a>\n                                <a href=\"#\" className=\"button--social\">\n                                    <svg>\n                                    <span>more</span>\n                                    </svg>\n                                </a>\n                                </div>\n                                <h6>\n                                {colData && colData[5]}\n                                </h6>\n                                <h6>\n                                <span>\n                                    <img src=\"/assets/images/zk/crown.svg\" alt=\"\" />\n                                </span>\n                                <p>\n                                    Royalties enforced.\n                                </p>\n                                </h6>\n                            </div>                                                        \n                        </div>\n                        <div className=\"productInfo__inner-details-items\">\n                            <button onClick={() => {navigate(\"/mint/\" + colData[0]);}} className=\"button--primary\" style={{borderRadius:8, width:\"100%\", marginTop:5}}>Create a new NFT</button>                            \n                        </div>   \n                        {(currentAccount == DevWallet) &&\n                            <div className=\"productInfo__inner-details-items\">\n                                <button onClick={() => {deleteCollection(colId);}} className=\"button--primary\" style={{borderRadius:8, width:\"100%\", marginTop:5}}>Delete Collection</button>                            \n                            </div> \n                        }                     \n                    </div>\n                    </div>\n                </div>\n                </section>\n                <section className=\"controls\">\n                <div className=\"autoContainer\">\n                    <div className=\"controls__inner\">\n                    <div className=\"controls__inner-tabs\">\n                        <span className=\"controls__inner-tabs-button active\">\n                        Items\n                        </span>\n                        <span className=\"controls__inner-tabs-button\">\n                        Activity\n                        </span>\n                        <span className=\"controls__inner-tabs-button\">\n                        Analytics\n                        </span>\n                        <span className=\"controls__inner-tabs-button\">\n                        Announcements\n                        </span>\n                    </div>\n                    <div className=\"controls__inner-tools\">\n                        <div className=\"controls__inner-tools-search\">\n                        <span className=\"button--tool\">\n                            <img src=\"/assets/images/zk/filter.svg\" alt=\"\" />\n                        </span>\n                        <span className=\"button--tool\">\n                            <img src=\"/assets/images/zk/refresh.svg\" alt=\"\" />                           \n                        </span>\n                        <div className=\"input input--search\">\n                            <input type=\"text\" placeholder=\"Search items\"/>\n                            <span>\n                                <img src=\"/assets/images/zk/search.svg\" alt=\"\" />\n                            </span>\n                        </div>\n                        </div>\n                        <div className=\"controls__inner-tools-filter\">\n                        <div className=\"dropdown bg\">\n                            <div className=\"dropdown__button \">\n                            Price: Low to High\n                            <span className=\"arrow\">\n                                <img src=\"/assets/images/zk/arrow-down.svg\" alt=\"\" />\n                            </span>\n                            </div>\n                            <div className=\"dropdown__content\">\n                            <div className=\"dropdown__content-item\">\n                                <div className=\"input--radio\">\n                                <input type=\"radio\" value=\"price-1\" name=\"dropdown-1\" checked onChange={(e)=>{}}/>\n                                <label className=\"tick\" >\n                                    <span className=\"checkbox__text\">\n                                    <img src=\"/assets/images/zk/tick-circle.svg\" alt=\"\" />\n                                    </span>\n                                    <p>\n                                    Price: Low to High\n                                    </p>\n                                </label>\n                                </div>\n                                <div className=\"input--radio\">\n                                <input type=\"radio\" value=\"price-2\" name=\"dropdown-1\" />\n                                <label className=\"tick\" >\n                                    <span className=\"checkbox__text\">\n                                    <img src=\"/assets/images/zk/tick-circle.svg\" alt=\"\" />\n                                    </span>\n                                    <p>\n                                    Price: Low to High\n                                    </p>\n                                </label>\n                                </div>\n                                <div className=\"input--radio\">\n                                <input type=\"radio\" value=\"price-3\" name=\"dropdown-1\" />\n                                <label className=\"tick\" >\n                                    <span className=\"checkbox__text\">\n                                    <img src=\"/assets/images/zk/tick-circle.svg\" alt=\"\" />\n                                    </span>\n                                    <p>\n                                    Price: Low to High\n                                    </p>\n                                </label>\n                                </div>\n                            </div>\n                            </div>\n                        </div>\n                        <div className=\"dropdown bg\">\n                            <div className=\"dropdown__button\">\n                            Price: Low to High\n                            <span className=\"arrow\">\n                                <img src=\"/assets/images/zk/arrow-down.svg\" alt=\"\" />\n                            </span>\n                            </div>\n                            <div className=\"dropdown__content\">\n                            <div className=\"dropdown__content-item\">\n                                <div className=\"input--radio\">\n                                <input type=\"radio\" value=\"price-4\" name=\"dropdown-2\" checked onChange={() => {}}/>\n                                <label className=\"tick\" >\n                                    <span className=\"checkbox__text\">\n                                    <img src=\"/assets/images/zk/tick-circle.svg\" alt=\"\" />\n                                    </span>\n                                    <p>\n                                    Price: Low to High\n                                    </p>\n                                </label>\n                                </div>\n                                <div className=\"input--radio\">\n                                <input type=\"radio\" value=\"price-5\" name=\"dropdown-2\" />\n                                <label className=\"tick\" >\n                                    <span className=\"checkbox__text\">\n                                    <img src=\"/assets/images/zk/tick-circle.svg\" alt=\"\" />\n                                    </span>\n                                    <p>\n                                    Price: Low to High\n                                    </p>\n                                </label>\n                                </div>\n                                <div className=\"input--radio\">\n                                <input type=\"radio\" value=\"price-6\" name=\"dropdown-2\" />\n                                <label className=\"tick\" >\n                                    <span className=\"checkbox__text\">\n                                    <img src=\"/assets/images/zk/tick-circle.svg\" alt=\"\" />\n                                    </span>\n                                    <p>\n                                    Price: Low to High\n                                    </p>\n                                </label>\n                                </div>\n\n                            </div>\n                            </div>\n                        </div>\n                        <span className=\"button--tool filter active\">\n                            <img src=\"/assets/images/zk/filterIcon1.svg\" alt=\"\" />\n                        </span>\n                        \n                        <span className=\"button--tool filter active\">\n                            <img src=\"/assets/images/zk/filterIcon2.svg\" alt=\"\" />\n                        </span>\n                        </div>\n                    </div>\n                    </div>\n                </div>\n                </section>\n                <section className=\"grid\">\n                <div className=\"autoContainer\">\n                    <NftItems colId={colId} web3Api={web3Api} searchWord={searchWord} chainId={chainId}></NftItems>\n                </div>\n                </section>            \n            <Footer />\n        </div>\n    );\n}\n\nexport default CollectionDetails;\n","import React , { useState , useEffect } from 'react';\n\nimport Header from '../components/header/Header';\nimport Footer from '../components/footer/Footer';\nimport { NFTAddr, IPFS_BASE_URL, VIDEO_TYPE, IMAGE_TYPE, AUDIO_TYPE} from '../config/constants'\nimport { Link , useNavigate} from 'react-router-dom';\nimport { getCanonicalPath } from '../utils/utils';\n\nconst NFTs = () => {\n    const [currentAccount, setCurrentAccount] = useState(null);   \n    const [chainId, setChainId] = useState(); \n    const setAccount = (_account) => {\n        setCurrentAccount(_account);\n    }\n\n    const [web3Api, setWeb3Api] = useState(null);\n    const [curTab, setCurTab] = useState(\"nft\"); \n    const [nftContract, setNftContract] = useState(); \n\n    const [saleList, setSaleList] = useState([]);\n    const [aucList, setAucList] = useState([]);\n    const [arr, setArr] = useState([]);\n    const [price, setprice] = useState([]);\n    const [pricearr, setpricearr] = useState();\n    const [allFixedSale, setAllFixedSale] = useState([]);\n    const [allp, setallp] = useState([]);\n    const [allprice, setallprice] = useState();\n    const [colllist, setcolllist] = useState();\n    const [alldata, setalldata] = useState([]);\n    const [newlist, setnewlist] = useState([]);\n    const [nftcnt, setNftcnt] = useState(-1);\n\n    const navigate = useNavigate();\n    \n    useEffect(async () => {\n        if (chainId && web3Api && currentAccount) {\n            const nftContratFile = await fetch(\"/abis/ZkSeaNFT.json\");\n            const convertNftContratFileToJson = await nftContratFile.json();\n            const nFTAbi = convertNftContratFileToJson;\n    \n            let nftContract = new web3Api.eth.Contract(nFTAbi, NFTAddr[chainId]);\n            setNftContract(nftContract);\n        }        \n    }, [chainId, web3Api, currentAccount])\n\n    useEffect(async () => {\n        if (nftContract) {\n            totalcolection();\n            getTotalNftCount();\n        }\n    }, [nftContract])\n\n    // const saleNft = async (id) => {\n    //     if (web3Api) {\n    //         nftContract.methods.listofsalenft(id).call({ from: currentAccount })\n    //             .then((result) => {\n    //                 setSaleList(result[0]);\n    //                 setAucList(result[1]);\n    //                 var listlen = result[0]?.length\n    //                 for (let i = 0; i < listlen; i++) {\n    //                     const ll = result[0][i];\n    //                     if (ll == \"0\") continue;\n    //                     getNftInfo(ll);\n    //                 }\n    //             })\n    //             .catch()\n    //     }\n    // }\n\n    // const getNftInfo = async (id) => {\n    //     // console.log(id)\n    //     if (web3Api) {\n    //         await nftContract.methods.nftinformation(id).call({ from: currentAccount })\n    //         .then((result) => {\n    //             saveAllFixedSaleList({ ...result, 12: JSON.parse(result[5])[1] })\n    //             localStorage.setItem(`buylist${id}`, JSON.stringify(result))\n    //             setArr(id)\n    //             getListOfSaleNft(result[0])\n    //         }).catch()\n    //     }\n    // }\n\n    // const saveAllFixedSaleList = (data) => {\n    //     setAllFixedSale((old) => [\n    //         ...old, data\n    //     ])\n    // }    \n\n    // const getListOfSaleNft = async (id) => {\n    //     if (web3Api) {\n    //         nftContract.methods.listofsalenft(id).call({ from: currentAccount })\n    //         .then((result) => {\n    //             const val = {\n    //                 id: id, value: result[3]\n    //             }\n    //             localStorage.setItem(`normasale${id}`, (result[3]))\n    //             setpricearr(id)\n    //             getallprice(val)\n    //         })\n    //         .catch()\n    //     }\n    // }\n\n    // const getallprice = (data) => {\n    //     if (data.id === \"0\") {\n\n    //     } else {\n    //         setallp((old) => [\n    //             ...old, data\n    //         ])\n    //         setallprice(allp)\n    //     }\n    // }\n\n    // useEffect(() => {\n    //     newlist.map((val, i) => {\n    //         const pist = localStorage.getItem(`normalsale${val}`)\n    //         setprice((old) => {\n    //             return [...old, pist]\n    //         })\n    //     })\n    // }, [arr, pricearr]);\n\n    // const buyNft = (collectionid, tokenid) => {\n    //     buyfixednft(collectionid, tokenid);\n    // }\n\n    // const buyfixednft = async (collectionid, tokenid) => {\n\n    //     let amount = Number((allp.find(p => p.id === tokenid ? allp : null)).value)\n    //     let ckamout = amount / 1000000000000000000\n    //     // console.log(collectionid, tokenid, ckamout) \n\n    //     if (web3Api && ckamout) {\n    //         const accounts = await web3Api.eth.getAccounts();\n    //         setShow(true)\n    //         settokenid(accounts)\n\n    //         let amountIn = web3Api.utils.toBN(fromExponential((ckamout) * Math.pow(10, 18)));\n    //         let address = '0x0000000000000000000000000000000000000000'\n    //         const gasPriceNumber = await getGasPriceZk();\n\n    //         nftContract.methods.buynft(collectionid, tokenid, address).send({ from: currentAccount, value: amountIn , gasPrice: gasPriceNumber})\n    //             .then((recipt) => {\n    //                 setShow(false)\n    //                 // history.push('/mycollection')\n    //             })\n    //             .catch((err) => {\n    //                 setShow(false)\n    //                 settokenid('')\n    //             })\n    //     }\n    // }\n\n    const getTotalNftCount = async () => {\n        if (web3Api) {\n            const totalNftCnt = await nftContract.methods.tokenidmint().call();\n            setNftcnt(Number(totalNftCnt));\n        }\n    }\n    \n    const totalcolection = async () => {\n        if (web3Api) {\n            nftContract.methods.collectionform().call({ from: currentAccount })\n            .then((length) => {\n                setcolllist(length)\n            })\n            .catch()\n        }\n    }\n\n    useEffect(() => {\n        for (let i = 1; i <= colllist; i++) {\n            // collectiondetails(i);\n            getAllNFTsByCol(i);\n        }\n    }, [colllist]);\n\n    // const collectiondetails = async (id) => {\n    //     if (web3Api) {\n    //         nftContract.methods.collectiondetails(id).call({ from: currentAccount })\n    //             .then((fees) => {\n    //                 getalllist(fees)\n    //             }).catch()\n    //     }\n    // }\n\n    // const getalllist = (data) => {\n    //     setalldata((old) => [\n    //         ...old, data\n    //     ])\n    // }\n\n    const getAllNFTsByCol = async (id) => {\n        if (web3Api) {\n            nftContract.methods.totalnft(id).call()\n            .then((nftcount) => {\n                for (let i = 0; i < nftcount; i++) {\n                    // collectiondetails(i);\n                    getAllNFTs(id, i);\n                }\n            }).catch()\n        }\n    }\n\n    const getAllNFTs = async (id, index) => {\n        if (web3Api) {\n            nftContract.methods.collectionstored(id, index).call({ from: currentAccount })\n                .then((nftId) => {\n                    getNftInfo(nftId);\n                }).catch()\n        }\n    }\n\n    const getNftInfo = async (id) => {\n        // console.log(id)\n        if (web3Api) {\n            await nftContract.methods.nftinformation(id).call({ from: currentAccount })\n            .then((result) => {\n                saveAllFixedSaleList({ ...result, 12: JSON.parse(result[5])[1] })\n            }).catch()\n        }\n    }\n\n    const saveAllFixedSaleList = (data) => {\n        setAllFixedSale((old) => [\n            ...old, data\n        ])\n    }\n    \n    return (\n        <div className='nfts'>\n            <Header setAccount={setAccount} setWeb3Api={setWeb3Api} setChainId={setChainId}/>\n            <section className=\"first-section controls\">\n                <div className=\"autoContainer\">\n                    <div className=\"controls__inner filter\">\n                    <div className=\"controls__inner-filter\">\n                        <div className=\"controls__inner-filter-body\">\n                        <button className={`button--primary ${curTab === \"col\" ? 'active' : ''}`} onClick={() => {setCurTab(\"col\"); navigate(\"/collections\");}}>\n                            Collection\n                        </button>\n                        <button className={`ml-3 button--primary ${curTab === \"nft\" ? 'active' : ''}`} onClick={() => {setCurTab(\"nft\")}}>\n                            NFTs\n                        </button>\n                        </div>\n                        <button className=\"button--secondary\">\n                        View All\n                        </button>\n                    </div>\n                    </div>\n                </div>\n            </section>\n            <section className=\"grid nft\">\n                <div className=\"autoContainer\">\n                    <div className=\"grid__inner\">\n                        {  allFixedSale.length > 0 ? allFixedSale.map((item, idx) => {\n                                return(\n                                    <div className=\"cartNft\" key={idx}>\n                                        <Link to={`/nft/${item[0]}`}>\n                                            <div className=\"cartNft__image\">\n                                                {VIDEO_TYPE.includes(JSON.parse(item[5])[1]) ?\n                                                    <video alt=\"\" muted autoPlay loop>\n                                                        <source src={getCanonicalPath(IPFS_BASE_URL + item[6])} />\n                                                    </video> \n                                                    : IMAGE_TYPE.includes(JSON.parse(item[5])[1]) ?\n                                                    <img src={getCanonicalPath(IPFS_BASE_URL + item[6])} alt=\"\"/>\n                                                    : AUDIO_TYPE.includes(JSON.parse(item[5])[1]) ?\n                                                    <audio style={{ width: '90%' }} src={getCanonicalPath(IPFS_BASE_URL + item[6])} />\n                                                    : null\n                                                }\n                                                \n                                            </div>\n                                            <div className=\"cartNft__info\">\n                                                <p>{item[1]}</p>\n                                                <span><img src=\"/assets/images/zk/verify.svg\" alt=\"\"/></span>\n                                            </div>\n                                        </Link>                                        \n                                    </div>\n                                )\n                            })\n                            :\n                            nftcnt == -1 ?  <div style={{width:\"100%\", height:\"100%\", display:\"flex\", justifyContent:\"center\"}}><span style={{color:\"grey\", fontSize: 32}}>Loading ... </span></div> \n                            :\n                            nftcnt > 0 ? <div style={{width:\"100%\", height:\"100%\", display:\"flex\", justifyContent:\"center\"}}><span style={{color:\"grey\", fontSize: 32}}>Loading ... </span></div> \n                            :\n                            <div style={{width:\"100%\", height:\"100%\", display:\"flex\", justifyContent:\"center\"}}><span style={{color:\"grey\", fontSize: 32}}>No Items</span></div> \n                        }\n                    </div>\n                </div>\n            </section>\n            <Footer />\n        </div>\n    );\n}\n\nexport default NFTs;\n","import React , { useState , useEffect } from 'react';\nimport fromExponential from 'from-exponential';\n\nimport Header from '../components/header/Header';\nimport Footer from '../components/footer/Footer';\nimport {NFTAddr, IPFS_BASE_URL, VIDEO_TYPE, IMAGE_TYPE, AUDIO_TYPE} from '../config/constants'\nimport { Link, useNavigate } from 'react-router-dom';\nimport { getCanonicalPath, getGasPrice } from '../utils/utils';\n\nconst MyNFTs = () => {\n    const [chainId, setChainId] = useState();\n    const [currentAccount, setCurrentAccount] = useState(null);    \n    const setAccount = (_account) => {\n        setCurrentAccount(_account);\n    }\n\n    const [web3Api, setWeb3Api] = useState(null);\n    const [curTab, setCurTab] = useState(\"nft\"); \n    const [show, setShow] = useState(false); \n    const [nftContract, setNftContract] = useState(); \n\n    const [arr, setArr] = useState([]);\n    const [price, setprice] = useState([]);\n    const [pricearr, setpricearr] = useState();\n    const [allFixedSale, setAllFixedSale] = useState([]);\n    const [allp, setallp] = useState([]);\n    const [tokenid, settokenid] = useState();\n    const [allprice, setallprice] = useState();\n    const [colllist, setcolllist] = useState();\n    const [alldata, setalldata] = useState([]);\n    const [newlist, setnewlist] = useState([]);\n    const [nftcnt, setNftcnt] = useState(-1);\n\n    const navigate = useNavigate();\n    \n    useEffect(async () => {\n        if (chainId && web3Api && currentAccount) {\n            const nftContratFile = await fetch(\"/abis/ZkSeaNFT.json\");\n            const convertNftContratFileToJson = await nftContratFile.json();\n            const nFTAbi = convertNftContratFileToJson;\n    \n            let nftContract = new web3Api.eth.Contract(nFTAbi, NFTAddr[chainId]);\n            setNftContract(nftContract);\n        }        \n    }, [chainId, web3Api, currentAccount])\n\n    useEffect(async () => {\n        if (nftContract) {\n            saleNft(0);\n            totalcolection();\n        }\n    }, [nftContract])\n\n    const saleNft = async (id) => {\n        if (web3Api) {\n            await nftContract.methods.balanceOf(currentAccount).call({ from: currentAccount })\n            .then((bal) => {\n                setNftcnt(bal);\n                if (parseInt(bal) > 0) {\n                    getMyNfts(bal);                    \n                }                \n            })\n            .catch();\n        }\n    }\n\n    const getMyNfts = async (_balance) => {\n        if (web3Api) {\n            for (let i = 0; i < parseInt(_balance); i++) {\n                let nftId = await nftContract.methods.tokenOfOwnerByIndex(currentAccount, i).call({ from: currentAccount });\n                if (nftId) {\n                    nftInfo(nftId);\n                }\n            }\n        }\n    }\n\n    const nftInfo = async (id) => {\n        if (web3Api) {\n            nftContract.methods.nftinformation(id).call({ from: currentAccount })\n            .then((result) => {\n                saveFixedSaleList({ ...result, 12: JSON.parse(result[5])[1] });\n                localStorage.setItem(`buylist${id}`, JSON.stringify(result));\n                setArr(id);\n                saleNftPrie(result[0]);\n            }).catch()\n        }\n    }\n\n    const saveFixedSaleList = (data) => {\n        setAllFixedSale((old) => [\n            ...old, data\n        ])\n    }\n\n    const saleNftPrie = async (id) => {\n        if (web3Api) {\n            nftContract.methods.listofsalenft(id).call({ from: currentAccount })\n            .then((length) => {\n                const val = {\n                    id: id, value: length[3]\n                }\n                localStorage.setItem(`normasale${id}`, (length[3]))\n                setpricearr(id)\n                getallprice(val)\n            })\n            .catch()\n        }\n    }\n\n    const getallprice = (data) => {\n        if (data.id === \"0\") {\n\n        } else {\n            setallp((old) => [\n                ...old, data\n            ])\n            setallprice(allp)\n        }\n    }\n\n    useEffect(() => {\n        newlist.map((val, i) => {\n            const pist = localStorage.getItem(`normalsale${val}`)\n            setprice((old) => {\n                return [...old, pist]\n            })\n        })\n    }, [arr, pricearr]);\n\n    const buyNft = (collectionid, tokenid) => {\n        buyFixedNft(collectionid, tokenid);\n    }\n\n    const buyFixedNft = async (collectionid, tokenid) => {\n\n        let amount = Number((allp.find(p => p.id === tokenid ? allp : null)).value)\n        let ckamout = amount / 1000000000000000000\n        if (web3Api && ckamout) {\n            const accounts = await web3Api.eth.getAccounts();\n            setShow(true)\n            settokenid(accounts)\n\n            const gasPriceNumber = await getGasPrice();\n\n            let amountIn = web3Api.utils.toBN(fromExponential((ckamout) * Math.pow(10, 18)));\n            let address = '0x0000000000000000000000000000000000000000'\n            nftContract.methods.buynft(collectionid, tokenid, address).send({ from: currentAccount, value: amountIn, gasPrice: gasPriceNumber })\n                .then((recipt) => {\n                    setShow(false)\n                    // history.push('/mycollection')\n                })\n                .catch((err) => {\n                    setShow(false)\n                    settokenid('')\n                })\n        }\n    }\n    \n    const totalcolection = async () => {\n        if (web3Api) {\n            nftContract.methods.collectionform().call({ from: currentAccount })\n                .then((result) => {\n                    setcolllist(result)\n                })\n                .catch()\n        }\n    }\n\n    useEffect(() => {\n        for (let i = 1; i <= colllist; i++) {\n            collectiondetails(i);\n        }\n    }, [colllist]);\n\n    const collectiondetails = async (id) => {\n        if (web3Api) {\n            nftContract.methods.collectiondetails(id).call({ from: currentAccount })\n                .then((fees) => {\n                    getalllist(fees)\n                }).catch()\n        }\n    }\n\n    const getalllist = (data) => {\n        setalldata((old) => [\n            ...old, data\n        ])\n    }\n    const handleClick = (Id) => {\n        // const col = alldata?.find(p => p[0] === Id);\n        localStorage.setItem('a', Id)\n    }\n    \n    return (\n        <div className='nfts'>\n            <Header setAccount={setAccount} setWeb3Api={setWeb3Api} setChainId={setChainId}/>\n            <section className=\"first-section controls\">\n                <div className=\"autoContainer\">\n                    <div className=\"controls__inner filter\">\n                    <div className=\"controls__inner-filter\">\n                        <div className=\"controls__inner-filter-body\">\n                        <button className={`button--primary ${curTab === \"col\" ? 'active' : ''}`} onClick={() => {setCurTab(\"col\"); navigate(\"/my-collections\");}}>\n                            Collection\n                        </button>\n                        <button className={`ml-3 button--primary ${curTab === \"nft\" ? 'active' : ''}`} onClick={() => {setCurTab(\"nft\")}}>\n                            NFTs\n                        </button>\n                        </div>\n                        <button className=\"button--secondary\">\n                        View All\n                        </button>\n                    </div>\n                    </div>\n                </div>\n            </section>\n            <section className=\"grid nft\">\n                <div className=\"autoContainer\">\n                    <div className=\"grid__inner\">\n                        {   allFixedSale.length > 0 ? allFixedSale.map((item, idx) => {\n                                return(\n                                    <div className=\"cartNft\" key={idx}>\n                                        <Link to={`/nft/${item[0]}`}>\n                                            <div className=\"cartNft__image\">\n                                                {VIDEO_TYPE.includes(JSON.parse(item[5])[1]) ?\n                                                    <video alt=\"\" muted autoPlay loop>\n                                                        <source src={getCanonicalPath(IPFS_BASE_URL + item[6])} />\n                                                    </video> \n                                                    : IMAGE_TYPE.includes(JSON.parse(item[5])[1]) ?\n                                                    <img src={getCanonicalPath(IPFS_BASE_URL + item[6])} alt=\"\"/>\n                                                    : AUDIO_TYPE.includes(JSON.parse(item[5])[1]) ?\n                                                    <audio style={{ width: '90%' }} src={getCanonicalPath(IPFS_BASE_URL + item[6])} />\n                                                    : null\n                                                }\n                                            </div>\n                                            <div className=\"cartNft__info\">\n                                                <p>{item[1]}</p>\n                                                <span><img src=\"/assets/images/zk/verify.svg\" alt=\"\"/></span>\n                                            </div>\n                                        </Link>                                        \n                                    </div>\n                                )\n                            })\n                            :\n                            nftcnt == -1 ?  <div style={{width:\"100%\", height:\"100%\", display:\"flex\", justifyContent:\"center\"}}><span style={{color:\"grey\", fontSize: 32}}>Loading ... </span></div> \n                            :\n                            nftcnt > 0 ? <div style={{width:\"100%\", height:\"100%\", display:\"flex\", justifyContent:\"center\"}}><span style={{color:\"grey\", fontSize: 32}}>Loading ... </span></div> \n                            :\n                            <div style={{width:\"100%\", height:\"100%\", display:\"flex\", justifyContent:\"center\"}}><span style={{color:\"grey\", fontSize: 32}}>No Items</span></div> \n                        }\n                    </div>\n                </div>\n            </section>\n            <Footer />\n        </div>\n    );\n}\n\nexport default MyNFTs;\n","import React , { useState , useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\n\nimport Header from '../components/header/Header';\nimport Footer from '../components/footer/Footer';\nimport {NFTAddr, DevWallet, IPFS_BASE_URL} from '../config/constants'\nimport { getCanonicalPath } from '../utils/utils';\n\nconst Collections = () => {\n    const [chainId, setChainId] = useState();\n    const [currentAccount, setCurrentAccount] = useState(null);\n    const setAccount = (_account) => {\n        setCurrentAccount(_account);\n    }\n\n    const [web3Api, setWeb3Api] = useState(null);\n    const [colList, setColList] = useState([]);\n    const [allColData, setAllColData] = useState([]);\n    const [curTab, setCurTab] = useState(\"col\"); \n    const [show, setShow] = useState(false); \n    const [nftContract, setNftContract] = useState(); \n    const [colcnt, setColCnt] = useState(-1); \n\n    const navigate = useNavigate();\n    \n    useEffect(async () => {\n        if (chainId && web3Api) {\n            getAllCollections();\n        }\n    }, [chainId, web3Api])\n\n    const getAllCollections = async () => {\n\n        if (web3Api) {\n            setShow(true);\n\n            const accounts = await web3Api.eth.getAccounts();\n            let usrWallet = accounts[0];\n            const nftContratFile = await fetch(\"/abis/ZkSeaNFT.json\");\n            const convertNftContratFileToJson = await nftContratFile.json();\n            const nFTAbi = convertNftContratFileToJson;\n\n            let nftContract = new web3Api.eth.Contract(nFTAbi, NFTAddr[chainId]);\n            setNftContract(nftContract);\n\n            nftContract.methods.collectionform().call({ from: usrWallet })\n            .then((result) => {\n                setColList(result)\n                // console.log('result', result)\n            })\n            .catch();\n        }\n    }\n\n    useEffect(() => {\n        if (web3Api) {\n            if (colList > 0) setColCnt(1);\n            else setColCnt(0);\n\n            for (let i = 1; i <= colList; i++) {\n                getCollectionDetails(i);\n            }\n        }\n\n    }, [colList, web3Api])\n\n    const getCollectionDetails = async (id) => {\n        if (web3Api) {\n            nftContract.methods.collectiondetails(id).call()\n            .then((_details) => {\n                if (_details[1] === '0x0000000000000000000000000000000000000000') {\n\n                } else {\n                    makeAllColList(_details)\n                }\n            }).catch()\n        }\n    }\n\n    const makeAllColList = (data) => {\n        \n        setAllColData((old) => [\n            ...old, data\n        ])\n    }\n\n    return (\n        <div className='nfts'>\n            <Header setAccount={setAccount} setWeb3Api={setWeb3Api} setChainId={setChainId} />\n            <section className=\"first-section controls\">\n                <div className=\"autoContainer\">\n                    <div className=\"controls__inner filter\">\n                    <div className=\"controls__inner-filter\">\n                        <div className=\"controls__inner-filter-body\">\n                        <button className={`button--primary ${curTab === \"col\" ? 'active' : ''}`} onClick={() => {setCurTab(\"col\")}}>\n                            Collection\n                        </button>\n                        <button className={`ml-3 button--primary ${curTab === \"nft\" ? 'active' : ''}`} onClick={() => {setCurTab(\"nft\"); navigate(\"/nfts\");}}>\n                            NFTs\n                        </button>\n                        </div>\n                        <button className=\"button--secondary\">\n                        View All\n                        </button>\n                    </div>\n                    </div>\n                </div>\n            </section>\n            <section className=\"grid nft\">\n                <div className=\"autoContainer\">\n                    <div className=\"grid__inner\">\n                        { \n                            allColData.length > 0 ? allColData.map((item, idx) => {\n                                return(\n                                    <div className=\"cartNft\" key={idx}>\n                                        <Link to={`/collection/${item[0]}`}>\n                                            <div className=\"cartNft__image\">\n                                                <img src={getCanonicalPath(IPFS_BASE_URL + item[6])} alt=\"\"/>\n                                            </div>\n                                            <div className=\"cartNft__info\">\n                                                <p>{item[2]}</p>\n                                                <span><img src=\"/assets/images/zk/verify.svg\" alt=\"\"/></span>\n                                            </div>\n                                        </Link>                                        \n                                    </div>\n                                )\n                            })\n                            :\n                            colcnt == -1 ?  <div style={{width:\"100%\", height:\"100%\", display:\"flex\", justifyContent:\"center\"}}><span style={{color:\"grey\", fontSize: 32}}>Loading ... </span></div> \n                            :\n                            colcnt > 0 ? <div style={{width:\"100%\", height:\"100%\", display:\"flex\", justifyContent:\"center\"}}><span style={{color:\"grey\", fontSize: 32}}>Loading ... </span></div> \n                            :\n                            <div style={{width:\"100%\", height:\"100%\", display:\"flex\", justifyContent:\"center\"}}><span style={{color:\"grey\", fontSize: 32}}>No Items</span></div> \n                        }\n                    </div>\n                </div>\n            </section>\n            <Footer />\n        </div>\n    );\n}\n\nexport default Collections;\n","import React , { useState , useEffect } from 'react';\nimport { Link, useParams, useNavigate } from 'react-router-dom';\n\nimport Header from '../components/header/Header';\nimport Footer from '../components/footer/Footer';\nimport {NFTAddr, DevWallet, IPFS_BASE_URL, VIDEO_TYPE, IMAGE_TYPE, AUDIO_TYPE} from '../config/constants'\nimport { getCanonicalPath } from '../utils/utils';\n\nconst MyCollections = () => {\n    const [chainId, setChainId] = useState();\n    const [currentAccount, setCurrentAccount] = useState(null);\n    const setAccount = (_account) => {\n        setCurrentAccount(_account);\n    }\n\n    const [web3Api, setWeb3Api] = useState(null);\n    const [allColData, setAllColData] = useState([]);\n    const [curTab, setCurTab] = useState(\"col\"); \n    const [show, setShow] = useState(false); \n    const [nftContract, setNftContract] = useState(); \n    const [colcnt, setColcnt] = useState(-1); \n\n    const navigate = useNavigate();\n    \n    useEffect(async () => {\n        if (chainId && web3Api && currentAccount) {\n            const nftContratFile = await fetch(\"/abis/ZkSeaNFT.json\");\n            const convertNftContratFileToJson = await nftContratFile.json();\n            const nFTAbi = convertNftContratFileToJson;\n    \n            let nftContract = new web3Api.eth.Contract(nFTAbi, NFTAddr[chainId]);\n            setNftContract(nftContract);\n        }        \n    }, [chainId, web3Api, currentAccount])\n\n    useEffect(async () => {\n        if (nftContract) {\n            getMyCollections();\n        }\n    }, [nftContract])\n\n    const getMyCollections = async () => {\n        if (web3Api) {\n            nftContract.methods.totalcollectiondetails().call({ from: currentAccount })\n            .then((result) => {     \n                if (result?.length == 0) setColcnt(0);                                   \n                for (let i = 0; i < result?.length; i++) {\n                    getCollectionDetails(result[i]);\n                }\n            })\n            .catch((err) => {\n                console.log('ererr', err)\n            })\n        }\n    }\n\n    const getCollectionDetails = async (id) => {\n        if (web3Api) {\n            nftContract.methods.collectiondetails(id).call()\n            .then((_details) => {\n                if (_details[1] === '0x0000000000000000000000000000000000000000') {\n\n                } else {\n                    makeAllColList(_details)\n                }\n            }).catch()\n        }\n    }\n\n    const makeAllColList = (data) => {\n        setColcnt(1);\n        setAllColData((old) => [\n            ...old, data\n        ])\n    }\n\n    return (\n        <div className='nfts'>\n            <Header setAccount={setAccount} setWeb3Api={setWeb3Api} setChainId={setChainId} />\n            <section className=\"first-section controls\">\n                <div className=\"autoContainer\">\n                    <div className=\"controls__inner filter\">\n                    <div className=\"controls__inner-filter\">\n                        <div className=\"controls__inner-filter-body\">\n                        <button className={`button--primary ${curTab === \"col\" ? 'active' : ''}`} onClick={() => {setCurTab(\"col\");}}>\n                            Collection\n                        </button>\n                        <button className={`ml-3 button--primary ${curTab === \"nft\" ? 'active' : ''}`} onClick={() => {setCurTab(\"nft\"); navigate(\"/my-nfts\");}}>\n                            NFTs\n                        </button>\n                        </div>\n                        <button className=\"button--secondary\">\n                        View All\n                        </button>\n                    </div>\n                    </div>\n                </div>\n            </section>\n            <section className=\"grid nft\">\n                <div className=\"autoContainer\">\n                    <div className=\"grid__inner\">\n                        { \n                            allColData.length > 0 ? allColData.map((item, idx) => {\n                                return(\n                                    <div className=\"cartNft\" key={idx}>\n                                        <Link to={`/collection/${item[0]}`}>\n                                            <div className=\"cartNft__image\">\n                                                <img src={getCanonicalPath(IPFS_BASE_URL + item[6])} alt=\"\"/>\n                                            </div>\n                                            <div className=\"cartNft__info\">\n                                                <p>{item[2]}</p>\n                                                <span><img src=\"/assets/images/zk/verify.svg\" alt=\"\"/></span>\n                                            </div>\n                                        </Link>                                        \n                                    </div>\n                                )\n                            })\n                            :\n                            colcnt == -1 ?  <div style={{width:\"100%\", height:\"100%\", display:\"flex\", justifyContent:\"center\"}}><span style={{color:\"grey\", fontSize: 32}}>Loading ... </span></div> \n                            :\n                            colcnt > 0 ? <div style={{width:\"100%\", height:\"100%\", display:\"flex\", justifyContent:\"center\"}}><span style={{color:\"grey\", fontSize: 32}}>Loading ... </span></div> \n                            :\n                            <div style={{width:\"100%\", height:\"100%\", display:\"flex\", justifyContent:\"center\"}}><span style={{color:\"grey\", fontSize: 32}}>No Items</span></div> \n                            \n                        }\n                    </div>\n                </div>\n            </section>\n            <Footer />\n        </div>\n    );\n}\n\nexport default MyCollections;\n","import React, { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport fromExponential from 'from-exponential';\n\nimport Header from '../components/header/Header';\nimport Footer from '../components/footer/Footer';\nimport { NFTAddr, DevWallet, IPFS_BASE_URL, VIDEO_TYPE, IMAGE_TYPE, AUDIO_TYPE } from '../config/constants'\nimport { getCanonicalPath, getGasPriceZk } from '../utils/utils';\n\nconst AuctionDetails = () => {\n    const { nftid } = useParams()\n    const [chainId, setChainId] = useState();\n    const [currentAccount, setCurrentAccount] = useState(null);\n    const setAccount = (_account) => {\n        setCurrentAccount(_account);\n    }\n    const [web3Api, setWeb3Api] = useState(null);\n    const [nftContract, setNftContract] = useState();\n    const [colData, setColData] = useState();\n    const [show, setShow] = useState();\n    const [buyPrice, setBuyPrice] = useState();\n    const [balance, setBalance] = useState();\n    const [aucBuyPrice, setAucBuyPrice] = useState();\n    const [aucOwner, setAucOwner] = useState();\n    const [aucStat, setAucStat] = useState();\n    const [nOwner, setNOwner] = useState();\n    const [aucTime, setAucTime] = useState();\n    const [newBidPrice, setNewBidPrice] = useState();\n    const [nftData, setNftData] = useState();\n\n    useEffect(async () => {\n        if (chainId && web3Api && currentAccount) {\n            const nftContratFile = await fetch(\"/abis/ZkSeaNFT.json\");\n            const convertNftContratFileToJson = await nftContratFile.json();\n            const nFTAbi = convertNftContratFileToJson;\n\n            let nftContract = new web3Api.eth.Contract(nFTAbi, NFTAddr[chainId]);\n            setNftContract(nftContract);\n\n            const balance = await web3Api.eth.getBalance(currentAccount);\n            setBalance(web3Api.utils.fromWei(balance, 'ether'));\n        }\n    }, [chainId, web3Api, currentAccount])\n\n    useEffect(async () => {\n        if (web3Api && nftContract) {\n            if (nftid) {\n                saleNft(nftid)\n                auctionDetail(nftid)\n                timer1(nftid)\n                nftInfo(nftid)\n                auctionState(nftid)\n                owner(nftid)\n            }\n        }\n    }, [web3Api, nftContract])\n\n    const getCollectionDetails = async (id) => {\n        if (web3Api) {\n            nftContract.methods.collectiondetails(id).call()\n                .then((data) => {\n                    setColData(data)\n                }).catch()\n        }\n    }\n\n    const saleNft = async (id) => {\n        if (web3Api) {\n            nftContract.methods.listofsalenft(id).call({ from: currentAccount })\n                .then((length) => {\n                    console.log(length[3]);\n                    setBuyPrice((Number(length[3])) / 1000000000000000000)\n                    setAucBuyPrice(((Number(length[2])) / 1000000000000000000))\n                })\n                .catch()\n        }\n    }\n\n    const auctionDetail = async (id) => {\n        if (web3Api) {\n            nftContract.methods.auctiondetail(id).call({ from: currentAccount })\n                .then((value) => {\n                    var aucde = {\n                        id: value[1],\n                        val: (Number(value[0]))?.length > 21 ? Number(value[0]) / 1000000000000000000000000000000000000 : Number(value[0]) / 1000000000000000000,\n                        userid: id\n                    }\n                    setAucOwner(aucde)\n                }).catch()\n\n        }\n    }\n\n    const auctionState = async (tokenid) => {\n        if (web3Api) {\n            nftContract.methods.nftauctionend(tokenid).call({ from: currentAccount })\n                .then((result) => {\n                    setAucStat(result)\n                })\n                .catch()\n        }\n    }\n\n    const owner = async (tokenid) => {\n        if (web3Api) {\n            nftContract.methods.originalowner(tokenid).call({ from: currentAccount })\n                .then((result) => {\n                    setNOwner(result)\n                })\n                .catch()\n        }\n    }\n\n    // const timer = async (id) => {\n    //     if (web3Api) {\n    //         nftContract.methods.timing(id).call({ from: currentAccount })\n    //             .then((result) => {\n    //                 var day = Math.floor(result / 86400)\n    //                 var hr = Math.floor((result - day * 86400) / 3600)\n    //                 var minutesout = Math.floor((result - day * 86400 - hr * 3600) / 60);\n    //             }).catch()\n    //     }\n    // }\n\n    const timer1 = async (id) => {\n        if (web3Api) {\n            nftContract.methods.timing(id).call({ from: currentAccount })\n                .then((result) => {\n                    var day = Math.floor(result / 86400)\n                    var hr = Math.floor((result - day * 86400) / 3600)\n                    var minutesout = Math.floor((result - day * 86400 - hr * 3600) / 60);\n                    setAucTime({ id: id, d: day, h: hr, m: minutesout })\n                }).catch()\n        }\n    }    \n\n    const nftInfo = async (id) => {\n        if (web3Api) {\n            nftContract.methods.nftinformation(id).call({ from: currentAccount })\n                .then((result) => {\n                    setNftData(result);\n                    getCollectionDetails(result[7]);\n                }).catch()\n\n        }\n    }\n\n    const auction = async () => {\n        // if (web3Api) {\n        //     setShow(true)\n        //     const gasPriceNumber = await getGasPriceZk();\n\n        //     let priceIn = web3Api.utils.toBN(fromExponential(((parseFloat(newBidPrice)) * Math.pow(10, 18))));\n\n        //     nftContract.methods.startauction(nftid, priceIn, 0, 24).send({ from: currentAccount, gasPrice: gasPriceNumber})\n        //         .then((recipt) => {\n        //             if (recipt.status === true) {\n        //                 setShow(false)\n        //                 // history.push('/mycollection')\n        //             } else {\n        //                 alert('failed')\n        //             }\n        //         })\n        //         .catch(err => {\n        //             setShow(false)\n        //         })\n        // }\n    }\n\n    return (\n        <div className='item-details'>\n            <Header setAccount={setAccount} setWeb3Api={setWeb3Api} setChainId={setChainId}/>\n            <section className=\"first-section productDetails\">\n                <div className=\"autoContainer\">\n                    <div className=\"productDetails__inner\">\n                        <div className=\"productDetails__inner-image\">\n                            {nftData && (VIDEO_TYPE.includes(JSON.parse(nftData[5])[1]) ?\n                                <video alt=\"\" muted autoPlay loop>\n                                    <source src={getCanonicalPath(IPFS_BASE_URL + nftData[6])} />\n                                </video> \n                                : IMAGE_TYPE.includes(JSON.parse(nftData[5])[1]) ?\n                                <img src={getCanonicalPath(IPFS_BASE_URL + nftData[6])} alt=\"\"/>\n                                : AUDIO_TYPE.includes(JSON.parse(nftData[5])[1]) ?\n                                <audio style={{ width: '90%' }} src={getCanonicalPath(IPFS_BASE_URL + nftData[6])} />\n                                : null)\n                            }\n                        </div>\n                        <div className=\"productDetails__inner-info\">\n                            <h2>Place a bid</h2>\n                            <p>Once your bid is placed, you will be the highest bidder in the auction. Learn more.</p>\n                            <div className=\"productDetails__inner-info-tools\">\n                                <h5>\n                                    <p>\n                                        {nftData && nftData[3]}\n                                    </p>\n                                    <div>\n                                        <span>\n                                            <img src=\"/assets/images/zk/share.svg\" alt=\"\" />\n                                        </span>\n                                        <small>\n                                            Share\n                                        </small>\n                                    </div>\n                                </h5>\n                                <button className=\"refresh\">\n                                    <img src=\"/assets/images/zk/refreshGradient.svg\" alt=\"\" />\n                                </button>\n                            </div>\n                            <div className=\"productDetails__inner-info-text\">\n                                <input onChange={(e) => setNewBidPrice(e.target.value)} type=\"text\" name=\"text\" placeholder=\"0\" />\n                            </div>\n                            \n                            <div className=\"productDetails__inner-info-text\">\n                                <h5>\n                                    Market Place Price\n                                </h5>\n                                <p>\n                                    <span>\n                                        <img src=\"/assets/images/zk/eth.svg\" alt=\"\" />\n                                    </span>\n                                    {buyPrice}\n                                </p>\n                            </div>\n                            <div className=\"productDetails__inner-info-text\">\n                                <h5>\n                                    Wallet Balance\n                                </h5>\n                                <p>\n                                    <span>\n                                        <img src=\"/assets/images/zk/eth.svg\" alt=\"\" />\n                                    </span>\n                                    {balance}\n                                </p>\n                            </div>\n\n                            <button className=\"button--primary\" style={{borderRadius:8, width:\"100%\"}} onClick={() => {auction();}}>Place a Bid</button>\n                            \n                            {/* <button className=\"button--primary\" onClick={ nOwner == currentAccount }>Buy NFT</button>\n                            <button className=\"button--primary\">Set Sale Price</button>\n                            <button className=\"button--primary\">Cancel</button>\n                            <button className=\"button--primary\">Auction</button> */}\n\n                        </div>\n                    </div>\n                </div>\n            </section>\n            <Footer />\n        </div>\n    );\n}\n\nexport default AuctionDetails;\n","import NftDetails from \"./NftDetails\";\nimport CollectionDetails from \"./CollectionDetails\";\nimport CreateCollection from \"./CreateCollection\";\nimport CreateNFT from \"./CreateNFT\";\nimport Nfts from \"./Nfts\";\nimport MyNfts from \"./MyNfts\";\nimport Collections from \"./Collections\";\nimport MyCollections from \"./MyCollections\";\nimport AuctionDetails from \"./AuctionDetails\";\nimport FreeMint from \"./FreeMint\";\n\nconst routes = [\n  { path: '/', component: <Collections />},\n  { path: '/create', component: <CreateCollection />},\n  { path: '/mint/:colId', component: <CreateNFT />},\n  { path: '/nfts', component: <Nfts />},\n  { path: '/my-nfts', component: <MyNfts />},\n  { path: '/nft/:nftid', component: <NftDetails />},\n  { path: '/bid/:nftid', component: <AuctionDetails />},\n  { path: '/collections', component: <Collections />},\n  { path: '/my-collections', component: <MyCollections />},\n  { path: '/collection/:colId', component: <CollectionDetails />},\n  { path: '/freemint', component: <FreeMint />},\n]\n\nexport default routes;","import './App.css';\nimport 'maptalks/dist/maptalks.css';\nimport {   Routes , Route } from 'react-router-dom';\nimport routes from './pages/index'\n\n\nfunction App() {\n\n    return (\n        <Routes >\n            {\n            routes.map((data,index) => (\n                <Route onUpdate={() => window.scrollTo(0, 0)} exact={true} path={data.path} element={data.component} key={index} />\n            ))\n            }\n      </Routes>\n    );\n}\n\nexport default App;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom'\nimport ScrollToTop from './ScrollToTop';\n\nReactDOM.render(\n  <BrowserRouter >\n    <ScrollToTop />\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n","export const DevWallet=\"0x99E877887Dc1fE2Bf960FE5fe24C5C5808609F59\"\r\nexport const IPFS_BASE_URL = \"https://ipfs.io/ipfs/\";\r\nexport const VIDEO_TYPE = [\"video/mp4\", \"video/mov\", \"video/webm\"];\r\nexport const IMAGE_TYPE = [\"image/jpeg\", \"image/png\", \"image/gif\", \"image/svg\", \"image/jpg\"];\r\nexport const AUDIO_TYPE = [\"audio/mpeg\"];\r\n\r\nexport const NFTAddr = {\r\n    56: \"0x6BDB4Eff77dcBB4a4E9D39cA99B5e7c0e315e7c2\",\r\n    97: \"0x0E29eE17782Fafeea5CCBDaC08E6B7A62A484f7b\",\r\n    324: \"0x6BDB4Eff77dcBB4a4E9D39cA99B5e7c0e315e7c2\",\r\n    42161: \"0x6BDB4Eff77dcBB4a4E9D39cA99B5e7c0e315e7c2\",\r\n    421613: \"0x0E29eE17782Fafeea5CCBDaC08E6B7A62A484f7b\",\r\n    280: \"0x6BDB4Eff77dcBB4a4E9D39cA99B5e7c0e315e7c2\",\r\n}\r\n\r\nexport const CHAIN_ZKMAIN = 324;\r\nexport const CHAIN_ZKTEST = 280;\r\nexport const CHAIN_BSC = 56;\r\nexport const CHAIN_ARBI_ONE = 42161;\r\nexport const CHAIN_BSC_TEST = 97;\r\nexport const CHAIN_ARBI_TEST = 421613;\r\n\r\nexport const CHAIN_INFO = {\r\n    56: {\r\n        chainId: '0x38',\r\n        chainName: 'Binace Smart Chain',\r\n        nativeCurrency: {\r\n            name: 'BNB',\r\n            symbol: 'BNB',\r\n            decimals: 18,\r\n        },\r\n        rpcUrls: ['https://bsc-dataseed.binance.org/'],\r\n        blockExplorerUrls: ['https://bscscan.com/'],\r\n    },\r\n    97: {\r\n        chainId: '0x61',\r\n        chainName: 'Binace Test Chain',\r\n        nativeCurrency: {\r\n            name: 'BNB',\r\n            symbol: 'BNB',\r\n            decimals: 18,\r\n        },\r\n        rpcUrls: ['https://bsc-testnet.public.blastapi.io'],\r\n        blockExplorerUrls: ['https://testnet.bscscan.com'],\r\n    },\r\n\r\n    324: {\r\n        chainId: '0x144',\r\n        chainName: 'Zksync Main Net',\r\n        nativeCurrency: {\r\n            name: 'ETH',\r\n            symbol: 'ETH',\r\n            decimals: 18,\r\n        },\r\n        rpcUrls: ['https://mainnet.era.zksync.io'],\r\n        blockExplorerUrls: ['https://explorer.zksync.io/'],\r\n    },\r\n\r\n    42161: {\r\n        chainId: '0xA4B1',\r\n        chainName: 'Arbitrum One',\r\n        nativeCurrency: {\r\n            name: 'ETH',\r\n            symbol: 'ETH',\r\n            decimals: 18,\r\n        },\r\n        rpcUrls: ['https://arbitrum-mainnet.infura.io'],\r\n        blockExplorerUrls: ['https://arbiscan.io/'],\r\n    },\r\n\r\n    421613: {\r\n        chainId: '0x66EED',\r\n        chainName: 'Arbitrum Testnet',\r\n        nativeCurrency: {\r\n            name: 'ETH',\r\n            symbol: 'ETH',\r\n            decimals: 18,\r\n        },\r\n        rpcUrls: ['https://goerli-rollup.arbitrum.io/rpc'],\r\n        blockExplorerUrls: ['https://goerli.arbiscan.io/'],\r\n    },\r\n\r\n    280: {\r\n        chainId: '0x118',\r\n        chainName: 'Zksync Test Net',\r\n        nativeCurrency: {\r\n            name: 'ETH',\r\n            symbol: 'ETH',\r\n            decimals: 18,\r\n        },\r\n        rpcUrls: ['https://zksync2-testnet.zksync.dev'],\r\n        blockExplorerUrls: ['https://goerli.explorer.zksync.io/'],\r\n    },\r\n}","import { ethers } from \"ethers\";\r\nimport Web3 from \"web3\"\r\nimport fromExponential from \"from-exponential\";\r\nimport { Provider } from \"zksync-web3\";\r\nimport { CHAIN_ARBI_ONE, CHAIN_ARBI_TEST, CHAIN_BSC, CHAIN_BSC_TEST, CHAIN_INFO, CHAIN_ZKMAIN, CHAIN_ZKTEST } from \"../config/constants\";\r\n\r\nexport const getGasPrice = async () => {\r\n\r\n    const chainSavedId = localStorage.getItem('nftzksea-chainId'); \r\n    let gasPriceNumber;\r\n    let provider;\r\n    let gasPriceInUnits;\r\n    let web3;\r\n\r\n    switch (Number(chainSavedId)) {\r\n        case CHAIN_ZKTEST:\r\n            // const signer = (new Web3Provider(window.ethereum)).getSigner();\r\n            provider = new Provider('https://testnet.era.zksync.dev');\r\n            gasPriceInUnits = await provider.getGasPrice();\r\n            gasPriceNumber = fromExponential(parseFloat(ethers.utils.formatUnits(gasPriceInUnits, 9)) * Math.pow(10, 9));\r\n            break;\r\n            \r\n        case CHAIN_ZKMAIN:\r\n            // const signer = (new Web3Provider(window.ethereum)).getSigner();\r\n            provider = new Provider('https://mainnet.era.zksync.io');\r\n            gasPriceInUnits = await provider.getGasPrice();\r\n            gasPriceNumber = fromExponential(parseFloat(ethers.utils.formatUnits(gasPriceInUnits, 9)) * Math.pow(10, 9));\r\n            break;\r\n            \r\n        case CHAIN_ARBI_ONE:\r\n            web3 = new Web3(new Web3.providers.HttpProvider(CHAIN_INFO[CHAIN_ARBI_ONE].rpcUrls[0]));\r\n            gasPriceInUnits = await web3.eth.getGasPrice();\r\n            gasPriceNumber = fromExponential(parseFloat(ethers.utils.formatUnits(gasPriceInUnits, 9)) * Math.pow(10, 9));\r\n            break;\r\n        case CHAIN_ARBI_TEST:\r\n            web3 = new Web3(new Web3.providers.HttpProvider(CHAIN_INFO[CHAIN_ARBI_TEST].rpcUrls[0]));\r\n            gasPriceInUnits = await web3.eth.getGasPrice();\r\n            gasPriceNumber = fromExponential(parseFloat(ethers.utils.formatUnits(gasPriceInUnits, 9)) * Math.pow(10, 9));\r\n            console.log(CHAIN_ARBI_TEST);\r\n            break;\r\n        \r\n        case CHAIN_BSC:\r\n            web3 = new Web3(new Web3.providers.HttpProvider(CHAIN_INFO[CHAIN_BSC].rpcUrls[0]));\r\n            gasPriceInUnits = await web3.eth.getGasPrice();\r\n            gasPriceNumber = fromExponential(parseFloat(ethers.utils.formatUnits(gasPriceInUnits, 9)) * Math.pow(10, 9));\r\n            break;     \r\n        case CHAIN_BSC_TEST:\r\n            web3 = new Web3(new Web3.providers.HttpProvider(CHAIN_INFO[CHAIN_BSC_TEST].rpcUrls[0]));\r\n            gasPriceInUnits = await web3.eth.getGasPrice();\r\n            gasPriceNumber = fromExponential(parseFloat(ethers.utils.formatUnits(gasPriceInUnits, 9)) * Math.pow(10, 9));            \r\n            break;       \r\n    \r\n        default:\r\n            // const signer = (new Web3Provider(window.ethereum)).getSigner();\r\n            provider = new Provider('https://testnet.era.zksync.dev');\r\n            gasPriceInUnits = await provider.getGasPrice();\r\n            gasPriceNumber = fromExponential(parseFloat(ethers.utils.formatUnits(gasPriceInUnits, 9)) * Math.pow(10, 9));\r\n            break;\r\n    }\r\n\r\n    return gasPriceNumber;\r\n    \r\n};\r\n\r\nexport const getCanonicalPath = (_path) => {\r\n\r\n    let tempStr = _path.substring(_path.indexOf(\"https://\") + 8);\r\n    tempStr = tempStr.replace(\"//\", \"/\");\r\n\r\n    return \"https://\" + tempStr;\r\n    \r\n};","import React , { useState, useEffect } from 'react';\nimport { create } from 'ipfs-http-client'\nimport { useNavigate } from 'react-router-dom';\n\nimport Header from '../components/header/Header';\nimport Footer from '../components/footer/Footer';\nimport {NFTAddr, DevWallet} from '../config/constants'\nimport { getGasPrice } from '../utils/utils';\n\nconst projectId = '2El2aEUHT8Nd5OYGu6J4aH52G8u';   // <---------- your Infura Project ID\nconst projectSecret = '2fe6b07c9760882f34bd4965e0841ac0';  // <---------- your Infura Secret\n// (for security concerns, consider saving these values in .env files)\n\nconst auth = 'Basic ' + Buffer.from(projectId + ':' + projectSecret).toString('base64');\n\nconst ipfsClient = create({\n    host: 'ipfs.infura.io',\n    port: 5001,\n    protocol: 'https',\n    headers: {\n        authorization: auth,\n    },\n    timeout:'2m'\n});\n\nconst CreateCollection = () => {\n    const [chainId, setChainId] = useState();\n    const [currentAccount, setCurrentAccount] = useState(null);    \n    const [image, setImage] = useState(); \n    const setAccount = (_account) => {\n        setCurrentAccount(_account);\n    }\n    const [web3Api, setWeb3Api] = useState(null);\n\n    const [buffer, setBuffer] = useState();\n    const [displayImage, setDisplayImage] = useState();\n    const [data, setData] = useState({\n        collectionName: \"\", displayName: \"\", websiteUrl: \"\", collectionDescription: \"\", marketFee: \"0\"\n    })\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const [dataType, setDataType] = useState();\n    const [errStr, setError] = useState(false);\n    const [underminting, setUnderminting] = useState(false);\n    const [nftContract, setNftContract] = useState();\n    const [errText, setErrText] = useState(\"\");\n\n    const navigate = useNavigate();\n\n    useEffect(async () => {\n        if (chainId && web3Api && currentAccount) {\n            const nftContratFile = await fetch(\"/abis/ZkSeaNFT.json\");\n            const convertNftContratFileToJson = await nftContratFile.json();\n            const nFTAbi = convertNftContratFileToJson;\n    \n            let nftContract = new web3Api.eth.Contract(nFTAbi, NFTAddr[chainId]);\n            setNftContract(nftContract);\n        }        \n    }, [chainId, web3Api, currentAccount])\n\n    const selectImage = (e) => {\n        setErrText(\"\");\n        if (e.target.files[0]?.type === \"image/jpeg\" || e.target.files[0]?.type === \"image/png\" || e.target.files[0]?.type === \"image/gif\" || e.target.files[0]?.type === \"image/svg\" || e.target.files[0]?.type === \"image/jpg\") {\n            setDataType(e.target.files[0]?.type)\n            setImage(e.target.files[0])\n            const file = e.target.files[0];\n            const render = new FileReader()\n            render.onload = () => {\n                if (render.readyState === 2) {\n                    setDisplayImage(render.result)\n                }\n                const reader = new window.FileReader()\n                reader.readAsArrayBuffer(file)\n                reader.onloadend = () => {\n                    const buffer = Buffer.from(reader.result);\n                    setBuffer(buffer);\n                }\n            }\n            if (e.target.files[0]) {\n                render.readAsDataURL(e.target.files[0]);\n            }\n        } else {\n            alert('Choose the supported file')\n        }\n    }\n\n    const submit = async (_event) => {\n\n        _event.preventDefault();\n        // back if under minting\n        if(underminting) return;\n        \n        if (web3Api) {\n            setErrText(\"\");\n            setUnderminting(true);\n            try {\n                const uploadResult = await ipfsClient.add(buffer);\n                createCollection(uploadResult.path)\n            } catch (error) {\n                console.log('error - IPFS', error);\n                setErrText(\"Error from IPFS\")\n                setUnderminting(false)\n            }\n            \n        } else {\n            setErrText(\"Connect to wallet\")\n            setUnderminting(false)\n        }\n    }\n\n    const checkDuplicatedImage = async (_imgPath) => {        \n        return await nftContract.methods.stopduplicate(_imgPath).call();\n    }\n\n    const createCollection = async (_imgPath) => {\n        if (web3Api) {\n\n            const duplicatedImage = await checkDuplicatedImage(_imgPath);\n            if (duplicatedImage == true) {\n                setUnderminting(false);\n                setErrText(\"Collection image already used.\");\n                return false;\n            }  \n\n            setUnderminting(true);\n            const gasPriceNumber = await getGasPrice();\n\n            nftContract.methods.createcollection(data.collectionName, data.displayName, data.websiteUrl, data.collectionDescription, _imgPath, parseInt(data.marketFee)).send({ from: currentAccount, gasPrice: gasPriceNumber })\n            .then((result) => {                \n                console.log(result);\n                setErrText(\"\");\n                setUnderminting(false);\n                navigate(\"/my-collections\");\n            }).catch((err) => {\n                setErrText(\"\");\n                setUnderminting(false)\n            })\n        }\n    }\n\n    return (\n        <div className='nftland'>\n            <Header setAccount={setAccount} setWeb3Api={setWeb3Api} setChainId={setChainId}/>\n            <section className=\"main-section creatCollection\">\n                <div className=\"autoContainer\">\n                    <div className=\"creatCollection__inner\">\n                        <div className=\"creatCollection__inner-image\">\n                            <div className=\"ratioImage\">\n                                {displayImage ? <img src={displayImage} alt=\"\" /> : <img src=\"/assets/images/default_img.png\" style={{ width: '100%', borderRadius:8 }} />}\n                            </div>\n                        </div>\n                        <div className=\"creatCollection__inner-form\" onSubmit={submit} style={{paddingBottom: 60}}>\n                            <div className=\"creatCollection__form-buttons\">\n                                <button className=\"button--primary\">Create Collection</button>\n                                <button className=\"button--border\">\n                                    <span> Collection Details </span>\n                                </button>\n                            </div>\n                            <div className=\"creatCollection__form-file\">\n                                <h5>File type supported: JPG,JPEG,PNG,GIF</h5>\n                                <div className=\"creatCollection__form-file-input\">\n                                <input type=\"file\" name=\"sd\" id=\"\" onChange={selectImage}/>\n                                <span><img src=\"/assets/images/zk/document-upload.svg\" alt=\"\" /></span>\n                                <p>Choose a file</p>\n                                </div>\n                            </div>\n                            <div className=\"creatCollection__form-inputs\">\n                                <input type=\"text\" placeholder=\"Collection Name\" onChange={(e) => setData({ ...data, collectionName: e.target.value })}/>\n                                <textarea placeholder=\"Description\" onChange={(e) => setData({ ...data, collectionDescription: e.target.value })}></textarea>\n                                <div className=\"creatCollection__form-inputs-body\">\n                                    <input type=\"text\" placeholder=\"Display Name\" onChange={(e) => setData({ ...data, displayName: e.target.value })}/>\n                                    <input type=\"text\" placeholder=\"Website\" onChange={(e) => setData({ ...data, websiteUrl: e.target.value })}/>\n                                </div>\n                            </div>\n                            <button onClick={(e) => {submit(e);}} className=\"button--primary\">Create Collection {underminting && <i className='fas fa-spinner fa-pulse fa-1x ml-3'></i>}</button>\n                            <p style={{color:\"red\", position:\"absolute\", bottom:10}}>{errText}</p>\n                        </div>\n                    </div>                    \n                </div>\n            </section>\n            <Footer />\n        </div>\n    );\n}\n\nexport default CreateCollection;\n","import React , { useState, useEffect } from 'react';\nimport { Link, useParams , useNavigate} from 'react-router-dom';\nimport {ethers, BigNumber} from \"ethers\"\nimport { create } from 'ipfs-http-client'\n\nimport Header from '../components/header/Header';\nimport Footer from '../components/footer/Footer';\nimport {NFTAddr, DevWallet} from '../config/constants'\nimport { getGasPrice } from '../utils/utils';\n\nconst projectId = '2El2aEUHT8Nd5OYGu6J4aH52G8u';   // <---------- your Infura Project ID\nconst projectSecret = '2fe6b07c9760882f34bd4965e0841ac0';  // <---------- your Infura Secret\n// (for security concerns, consider saving these values in .env files)\n\nconst auth = 'Basic ' + Buffer.from(projectId + ':' + projectSecret).toString('base64');\n\nconst ipfsClient = create({\n    host: 'ipfs.infura.io',\n    port: 5001,\n    protocol: 'https',\n    headers: {\n        authorization: auth,\n    },\n    timeout:'2m'\n});\n\nconst CreateNFT = () => {\n    \n    const { colId } = useParams();\n    const [chainId, setChainId] = useState();\n    const [currentAccount, setCurrentAccount] = useState(null);\n    const [image, setImage] = useState(); \n    const setAccount = (_account) => {\n        setCurrentAccount(_account);\n    }\n    const [web3Api, setWeb3Api] = useState(null);\n\n    const [buffer, setBuffer] = useState();\n    const [displayImage, setDisplayImage] = useState();\n    const [data, setData] = useState({\n        nftName: \"\", ownerName: \"\", description: \"\", price: \"0\",  numMint: \"0\"\n    })\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const [dataType, setDataType] = useState();\n    const [errStr, setError] = useState(false);\n    const [underminting, setUnderminting] = useState(false);\n    const [mintMulti, setMintMulti] = useState(false);\n    const [nftContract, setNftContract] = useState();\n    const [errText, setErrText] = useState(\"\");\n\n    const navigate = useNavigate();\n\n    let clickedMultiYN = false;\n\n    useEffect(async () => {\n        if (chainId && web3Api && currentAccount) {\n            const nftContratFile = await fetch(\"/abis/ZkSeaNFT.json\");\n            const convertNftContratFileToJson = await nftContratFile.json();\n            const nFTAbi = convertNftContratFileToJson;\n    \n            let nftContract = new web3Api.eth.Contract(nFTAbi, NFTAddr[chainId]);\n            setNftContract(nftContract);\n        }\n        \n    }, [chainId, web3Api, currentAccount])\n\n    const selectImage = (e) => {\n        setErrText(\"\");\n        if (e.target.files[0]?.type === \"video/mp4\" || e.target.files[0]?.type === \"video/webm\" || e.target.files[0]?.type === \"audio/mpeg\" || e.target.files[0]?.type === \"image/jpeg\" || e.target.files[0]?.type === \"image/png\" || e.target.files[0]?.type === \"image/gif\" || e.target.files[0]?.type === \"image/svg\" || e.target.files[0]?.type === \"image/jpg\") {\n            setDataType(e.target.files[0]?.type)\n            setImage(e.target.files[0])\n            const file = e.target.files[0];\n            const render = new FileReader()\n            render.onload = () => {\n                if (render.readyState === 2) {\n                    setDisplayImage(render.result)\n                }\n                const reader = new window.FileReader()\n                reader.readAsArrayBuffer(file)\n                reader.onloadend = () => {\n                    const buffer = Buffer.from(reader.result);\n                    setBuffer(buffer);\n                }\n            }\n            if (e.target.files[0]) {\n                render.readAsDataURL(e.target.files[0]);\n            }\n        } else {\n            alert('Choose the supported file')\n        }\n    }\n\n    const checkSubmitValidation = () => {\n\n        if (!data.nftName) {\n            setErrText('Please input NFT name');\n            return false;\n        } else {\n            setErrText('');\n        }\n\n        if (!data.ownerName) {\n            setErrText('Please input Owner name');\n            return false;\n        } else {\n            setErrText('');\n        }\n\n        if (!data.description) {\n            setErrText('Please input NFT description');\n            return false;\n        } else {\n            setErrText('');\n        }\n\n        if (!image) {\n            setErrText('Please choose NFT image');\n            return false;\n        } else {\n            setErrText('');\n        }\n\n        let validPrice = true;    \n        let validCopies = true; \n\n        if (clickedMultiYN) {\n            if (data.price && Number(data.price) > 0) {\n                validPrice = true;\n            } else {\n                validPrice = false;\n            }\n\n            if (data.numMint && Number(data.numMint) > 0) {\n                validCopies = true;\n            } else {\n                validCopies = false;\n            }\n        } else {\n            setErrText('');\n        }\n\n        if (!validPrice) {\n            setErrText('Please input NFT price');\n            return false;\n        }\n\n        if (!validCopies) {\n            setErrText('Please input number of NFTs');\n            return false;\n        }\n    }\n\n    const submit = async (_event) => {\n\n        _event.preventDefault();\n        // back if under minting\n        if(underminting) return;\n        \n        if(checkSubmitValidation() === false) {\n            setShow(false);\n            return;\n        }\n\n        if (clickedMultiYN) {\n            setMintMulti(true);\n        } else {\n            setMintMulti(false);\n        } \n\n        if (web3Api) {\n            setError(false);\n            setUnderminting(true);\n            try {\n                const uploadResult = await ipfsClient.add(buffer);\n                if (clickedMultiYN) {\n                    setMintMulti(true);\n                    mintMultiple(uploadResult.path);\n                } else {\n                    setMintMulti(false);\n                    mintNft(uploadResult.path);\n                }                \n            } catch (error) {\n                console.log('error - IPFS', error);\n                setError(true)\n                setUnderminting(false);\n            }            \n        } else {\n            setError(true)\n            setUnderminting(false);\n        }\n    }\n\n    const checkDuplicatedImage = async (_imgPath) => {        \n        return await nftContract.methods.stopduplicate(_imgPath).call();\n    }\n\n    const mintNft = async (_imgPath) => {\n        \n        if (web3Api) {\n            const duplicatedImage = await checkDuplicatedImage(_imgPath);\n            console.log(duplicatedImage);\n            if (duplicatedImage == true) {\n                setUnderminting(false);\n                setErrText(\"NFT image already used.\");\n                return false;\n            }\n            \n            setUnderminting(true);\n            const des = JSON.stringify([data.description, dataType])\n            const gasPriceNumber = await getGasPrice();\n\n            let mintfee = await nftContract.methods.mintfee().call({ from: currentAccount });\n            nftContract.methods.create(colId, currentAccount, _imgPath, data.nftName, data.ownerName, 1, des).send({ from: currentAccount, value: mintfee, gasPrice: gasPriceNumber })\n            .then((result) => {\n                nftIndex();\n            }).catch((err) => {\n                setUnderminting(false)\n            })\n        }\n    }\n\n    const nftIndex = async () => {\n        if (web3Api) {\n            nftContract.methods.tokenidmint().call()\n            .then((id) => {\n                if(data.price != \"0\") {\n                    fixedSale(id);\n                } else {\n                    setUnderminting(false);\n                    navigate(\"/nft/\" + id);\n                }                \n            })\n            .catch(() => {\n                setUnderminting(false);\n            })\n        }\n    }\n\n    const fixedSale = async (tokenid) => {\n        if (web3Api) {\n            let amount = 0;\n            if (data.price)\n                amount = ethers.utils.formatUnits(ethers.utils.parseUnits(data.price.toString(), 18), 0);\n\n            const gasPriceNumber = await getGasPrice();\n            \n            nftContract.methods.fixedsales(tokenid, amount).send({ from: currentAccount, gasPrice: gasPriceNumber })\n            .then((length) => {\n                if (length.status === true) {\n                    setUnderminting(false);\n                    navigate(\"/nft/\" + tokenid);\n                } else {\n                    alert('failed');\n                    setUnderminting(false);\n                }\n            })\n            .catch((err) => {\n                setUnderminting(false)\n            })\n        }\n    }\n\n    const mintMultiple = async (nftImage) => {\n        if (web3Api) {\n            setShow(true)\n            let copies = 1;\n\n            const des = JSON.stringify([data.description, dataType])\n            const _times = data.numMint;\n\n            let amount = 0;\n            if (data.price)\n                amount = ethers.utils.formatUnits(ethers.utils.parseUnits(data.price.toString(), 18), 0);\n\n            const mintfee = await nftContract.methods.mintfee().call();\n            const mintfeeTotal = mintfee * _times;\n            const gasPriceNumber = await getGasPrice();\n            \n            nftContract.methods.createMulti(colId, currentAccount, nftImage, data.nftName, data.ownerName, copies, des, _times, amount).send({ from: currentAccount, value: mintfeeTotal, gasPrice: gasPriceNumber})\n            .then((result) => {\n                if (result.status === true) { \n                    // history.goBack();\n                    navigate(\"/my-nfts\")\n                    setShow(false);\n                    setUnderminting(false)\n                } else {\n                    alert('failed');\n                    setUnderminting(false)\n                }\n            }).catch((err) => {\n                setShow(false);\n                setUnderminting(false)\n            })\n        }\n    }\n\n    return (\n        <div className='nftland'>\n            <Header setAccount={setAccount} setWeb3Api={setWeb3Api} setChainId={setChainId}/>\n            <section className=\"main-section creatCollection\">\n                <div className=\"autoContainer\">\n                    <div className=\"creatCollection__inner\">\n                        <div className=\"creatCollection__inner-image\">\n                            <div className=\"ratioImage\">\n                                {displayImage ? <img src={displayImage} alt=\"\" /> : <img src=\"/assets/images/default_media.png\" style={{ width: '100%', borderRadius:8 }} />}\n                            </div>\n                        </div>\n                        <div className=\"creatCollection__inner-form\" >\n                            <div className=\"creatCollection__form-buttons\">\n                                <button className=\"button--primary\">Create NFT</button>\n                                <button className=\"button--border\">\n                                    <span> NFT Details </span>\n                                </button>\n                            </div>\n                            <div className=\"creatCollection__form-file\">\n                                <h5>File type supported: JPG,JPEG,PNG,GIF</h5>\n                                <div className=\"creatCollection__form-file-input\">\n                                <input type=\"file\" name=\"sd\" id=\"\" onChange={selectImage}/>\n                                <span><img src=\"/assets/images/zk/document-upload.svg\" alt=\"\" /></span>\n                                <p>Choose a file</p>\n                                </div>\n                            </div>\n                            <div className=\"creatCollection__form-inputs\" style={{marginBottom:0}}>\n                                <div className=\"creatCollection__form-inputs-body\">\n                                    <input type=\"text\" placeholder=\"NFT Name\" onChange={(e) => setData({ ...data, nftName: e.target.value })}/>\n                                    <input type=\"text\" placeholder=\"Owner Name\" onChange={(e) => setData({ ...data, ownerName: e.target.value })}/>\n                                </div>\n                                <textarea placeholder=\"Description\" onChange={(e) => setData({ ...data, description: e.target.value })} style={{marginTop:8}}></textarea>\n                                <input type=\"number\" placeholder=\"Leave Price Empty To Auction Your NFT\" onChange={(e) => setData({ ...data, price: e.target.value })}/>\n                            </div>\n                            <button className=\"button--primary\" onClick={(e)=> {clickedMultiYN = false; submit(e);}}>Mint {!mintMulti && underminting && <i className='fas fa-spinner fa-pulse fa-1x ml-3'></i>}</button>\n                            \n                            <div className=\"creatCollection__form-inputs\" style={{marginTop:8}}>                                \n                                <div className=\"creatCollection__form-inputs-body\">\n                                    <input type=\"text\" placeholder=\"Number of NFTs\" onChange={(e) => setData({ ...data, numMint: e.target.value })}/>\n                                    <button className=\"button--primary\"  onClick={(e)=> {clickedMultiYN = true; submit(e);}}>Mint(Multiple) {mintMulti && underminting && <i className='fas fa-spinner fa-pulse fa-1x ml-3'></i>}</button>\n                                </div>                                \n                            </div>                            \n                            <p style={{color:\"red\", position:\"absolute\", bottom:20}}>{errText}</p>\n                        </div>\n                    </div>                    \n                </div>\n            </section>\n            <Footer />\n        </div>\n    );\n}\n\nexport default CreateNFT;\n","import React , { useState, useEffect } from 'react';\nimport { Link, useParams , useNavigate} from 'react-router-dom';\nimport {ethers, BigNumber} from \"ethers\"\nimport { create } from 'ipfs-http-client'\n\nimport Header from '../components/header/Header';\nimport Footer from '../components/footer/Footer';\nimport {NFTAddr, CHAIN_INFO} from '../config/constants'\nimport { getGasPrice } from '../utils/utils';\n\nconst projectId = '2El2aEUHT8Nd5OYGu6J4aH52G8u';   // <---------- your Infura Project ID\nconst projectSecret = '2fe6b07c9760882f34bd4965e0841ac0';  // <---------- your Infura Secret\n// (for security concerns, consider saving these values in .env files)\n\nconst auth = 'Basic ' + Buffer.from(projectId + ':' + projectSecret).toString('base64');\n\nconst ipfsClient = create({\n    host: 'ipfs.infura.io',\n    port: 5001,\n    protocol: 'https',\n    headers: {\n        authorization: auth,\n    },\n    timeout:'2m'\n});\n\nconst FreeMint = () => {\n    \n    const { colId } = useParams();\n    const [chainId, setChainId] = useState();\n    const [currentAccount, setCurrentAccount] = useState(null);\n    const [image, setImage] = useState(); \n    const setAccount = (_account) => {\n        setCurrentAccount(_account);\n    }\n    const [web3Api, setWeb3Api] = useState(null);\n\n    const [buffer, setBuffer] = useState();\n    const [displayImage, setDisplayImage] = useState();\n    const [data, setData] = useState({\n        nftName: \"ZkSea - Spring Thaw\", ownerName: \"ZkSea\", description: \"ZkSea: Spring Thaw\", price: \"0\",  numMint: \"1\"\n    })\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const [dataType, setDataType] = useState();\n    const [errStr, setError] = useState(false);\n    const [underminting, setUnderminting] = useState(false);\n    const [nftContract, setNftContract] = useState();\n    const [balance, setBalance] = useState();\n    const [errText, setErrText] = useState(\"\");\n    const [txHash, setTxHash] = useState(\"\");\n    const [mintResult, setMintResult] = useState(false);\n\n    const navigate = useNavigate();\n\n    useEffect(async () => {\n        if (chainId && web3Api && currentAccount) {\n            const nftContratFile = await fetch(\"/abis/ZkSeaNFT.json\");\n            const convertNftContratFileToJson = await nftContratFile.json();\n            const nFTAbi = convertNftContratFileToJson;\n    \n            let nftContract = new web3Api.eth.Contract(nFTAbi, NFTAddr[chainId]);\n            setNftContract(nftContract);\n\n            const balance = await web3Api.eth.getBalance(currentAccount);\n            setBalance(web3Api.utils.fromWei(balance, 'ether'));\n        }        \n    }, [chainId, web3Api, currentAccount])\n\n    useEffect(async () => {\n        selectImage();\n    }, [])    \n\n    const freemintimageurl = \"/assets/images/zk/freemint.mp4\";\n    const selectImage = () => {\n        fetch(freemintimageurl, {\n            method: 'GET'\n          })\n        .then(async response => {\n            const blob = await response.blob();\n            const file = new File([blob], 'zkseafree.mp4', { type: 'video/mp4' });\n            console.log(\"Here is JavaScript File Object\",file);\n            setImage(file);\n            setDisplayImage(freemintimageurl);\n            setDataType('video/mp4');\n\n        })\n    }\n\n    const checkSubmitValidation = () => {\n        console.log('balalce == ', balance);\n        if (balance < web3Api.utils.fromWei(\"10000000000000000\", 'ether')) {\n            setErrText('Low balance');\n            return false;\n        }\n\n    }\n\n    const submit = async (_event) => {\n\n        _event.preventDefault();\n        // back if under minting\n        if(underminting) return;\n        setMintResult(false);\n        \n        if(checkSubmitValidation() === false) {\n            setShow(false);\n            return;\n        }\n\n        if (web3Api) {\n            setError(false);\n            setUnderminting(true);\n            try {\n                // const uploadResult = await ipfsClient.add(image);\n                // mintMultiple(uploadResult.path);\n                mintMultiple(\"QmZCtJkxtEg3E5Yn137KfpjggJToXCsYBf3X3RvvfbbCSf\");\n            } catch (error) {\n                console.log('error - IPFS', error);\n                setError(true)\n                setUnderminting(false);\n            }            \n        } else {\n            setError(true)\n            setUnderminting(false);\n        }\n    }\n\n    const mintMultiple = async (nftImage) => {\n        if (web3Api) {\n            setShow(true)\n            let copies = 1;\n\n            const des = JSON.stringify([data.description, dataType])\n            const _times = data.numMint;\n\n            let amount = 0;\n            if (data.price)\n                amount = ethers.utils.formatUnits(ethers.utils.parseUnits(data.price.toString(), 18), 0);\n\n            const mintfee = await nftContract.methods.mintfee().call();\n            const mintfeeTotal = mintfee * _times;\n            const gasPriceNumber = await getGasPrice();\n\n            nftContract.methods.createMulti(\"1\", currentAccount, nftImage, data.nftName, data.ownerName, copies, des, _times, amount).send({ from: currentAccount, value: mintfeeTotal, gasPrice: gasPriceNumber})\n            .then((result) => {\n                if (result.status === true) { \n                    // console.log(result.transactionHash);\n                    setTxHash(result.transactionHash);                    \n                    setShow(false);\n                    setUnderminting(false);\n                    setMintResult(true);\n                    // navigate(\"/my-nfts\");\n                } else {\n                    alert('failed');\n                    setUnderminting(false)\n                }\n            }).catch((err) => {\n                console.log(err)\n                setShow(false);\n                setUnderminting(false)\n            })\n        }\n    }\n\n    return (\n        <>\n            <Header setAccount={setAccount} setWeb3Api={setWeb3Api} setChainId={setChainId}/>\n            <section className=\"first-section\">\n                <div className=\"autoContainer\">\n                <div className=\"hero__bg\">\n                    <span className=\"blur\"></span>\n                </div>\n                <div className=\"hero__inner\">\n                    <div className=\"hero__inner-content\">\n                    <h1>CLAIM YOUR PIECE OF WEB3 HISTORY BELOW.</h1>\n                    <div className=\"hero__inner-banner\">\n                        <img src=\"/assets/images/zk/f-mint-intro.png\" alt=\"\" />\n                        <span></span>\n                    </div>\n                    <p>\n                        Begin the steps to connect your MetaMask wallet and claim your\n                        Shanghai/Capella NFT.\n                    </p>\n                    <p>\n                        If you don't have\n                        <a\n                        href=\"https://metamask.io/\"\n                        className=\"link link--inline\"\n                        target=\"_blank\"\n                        >MetaMask</a\n                        >\n                        we can help you install it and show you how to fund your account\n                        to pay the network gas fee.\n                    </p>\n                    <div className=\"hero__inner-content-group\">\n                        <button className=\"button button--primary _lg\">                            \n                            <span className=\"_hideMob\">Start you nft claim</span>\n                            <img src=\"/assets/images/zk/f-arrow-right.svg\"></img>                        \n                        </button>\n                        <small>Powered by ConsenSys NFT</small>\n                    </div>\n                    </div>\n                </div>\n                </div>\n            </section>\n            <section className=\"note\">\n                <div className=\"autoContainer\">\n                    <div className=\"note__inner\">\n                        <div className=\"note__inner-title\">\n                        <h2 className=\"lg\">\n                            SHANGHAI<span>/<br /></span> CAPELLA\n                        </h2>\n                        </div>\n                        <div className=\"note__inner-text\">\n                        <p className=\"sm\">\n                            A CELEBRATION OF THE NEXT MILESTONE IN THE EVOLUTION OF ETHEREUM\n                            <strong className=\"noBreak\"\n                            >OPEN EDITION - Available for 28h 40m 36s</strong\n                            >\n                        </p>\n                        <p className=\"sm\">\n                            Celebrate the Ethereum Shanghai/Capella upgrade with a limited\n                            availability NFT.\n                            <span className=\"noBreak\"> FREE - SUBJECT TO NETWORK GAS FEE </span>\n                        </p>\n                        </div>\n                    </div>\n                </div>\n            </section>\n            <section className=\"nft\">\n                <div className=\"autoContainer\">\n                    <div className=\"nft__inner\">\n                        <div className=\"nft__bg\">\n                        <span className=\"blur\"></span>\n                        </div>\n                        <div className=\"nft__inner-banner\">\n                        <div className=\"ratioImage\" style={{paddingBottom:0}}>\n                            {/* <img src={displayImage} alt=\"\" /> */}\n                            <video alt=\"\" muted autoPlay loop style={{objectFit:\"contain\", borderRadius:\"inherit\", marginBottom:0}}>\n                                <source src=\"/assets/images/zk/freemint.mp4\" />\n                            </video>\n                        </div>\n                        </div>\n                        <div className=\"nft__inner-header\">\n                        <h3>ZkSea: Spring Thaw</h3>\n                        <span className=\"badge\">0x864e</span>\n                        <Link to=\"#\" className=\"badge\">\n                            <img src=\"/assets/images/zk/chain.svg\" alt=\"\" />\n                            Link\n                        </Link>\n                        <p className=\"xlg\">\n                            A commemorative NFT to mark the Linea launch amidst the zkEVM\n                            spring.\n                        </p>\n                        </div>\n                        <ul className=\"nft__inner-list\">\n                        <li className=\"nft__inner-list-item\">\n                            <span>Price</span>\n                            <strong>Free</strong>\n                        </li>\n                        <li className=\"nft__inner-list-item\">\n                            <span>Mint fee</span>\n                            <div className=\"nft__inner-list-item-group\">\n                            <strong>0.00069 ETH</strong>\n                            <small>-$ 1.43</small>\n                            </div>\n                        </li>\n                        <li className=\"nft__inner-list-item _footer\">\n                            <span>Mint fee</span>\n                            <div className=\"nft__inner-list-item-group\">\n                            <strong>0.00069 ETH</strong>\n                            <small>-$ 1.43</small>\n                            </div>\n                        </li>\n                        </ul>\n                        <div className=\"nft__inner-footer\">\n                        <h3 className=\"color--danger\">{errText}</h3>\n                        <div className=\"nft__inner-footer-content\">\n                            <button className=\"badge badge--black\" onClick={(e) => {submit(e)}}>\n                                {underminting ? <span>Minting</span> : <span>Mint</span>}\n                                {underminting && <span className=\"spinner\"></span>}\n                            </button>\n                            <div className=\"nft__inner-footer-content-row\">\n                            <div className=\"badge badge--column badge--lightprimary\">\n                                Ends in<br />\n                                <strong>65 days</strong>\n                            </div>\n                            <div className=\"badge badge--column badge--lightprimary\">\n                                Minted<br />\n                                <strong>92,740</strong>\n                            </div>\n                            </div>\n                            {mintResult && \n                                <a className=\"button button--primary _lg\" href={CHAIN_INFO[chainId].blockExplorerUrls[0] + \"/tx/\" + txHash} target=\"_blank\">\n                                    <span>\n                                        <span className=\"_hideMob\">Successfully minted -</span>\n                                        view on etherscan\n                                    </span>\n                                    <img src=\"/assets/images/zk/f-arrow-right.svg\"></img>\n                                </a>\n                            }\n                            <button className=\"button button--text\">Switch wallet</button>\n                        </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n            <Footer />\n        </>\n    );\n}\n\nexport default FreeMint;\n","import React, { useState ,useEffect } from 'react';\nimport { Link } from 'react-router-dom'\nimport logodark from '../../assets/images/logo/logo.svg'\nimport logofooter from '../../assets/images/logo/logo.svg'\nconst Footer = () => {\n\n    const resourcesList = [\n        {\n            title: \"White Paper\",\n            link: \"#\"\n        },\n        {\n            title: \"NFT MarketPlace\",\n            link: \"#\"\n        },\n        \n    ]\n\n    const socialList = [\n        {\n            icon: \"fab fa-twitter\",\n            link: \"https://twitter.com/zkzerosea\"\n        },\n        {\n            icon: \"fab fa-telegram-plane\",\n            link: \"https://t.me/ZkZeroSea\"\n        }       \n\n    ]\n\n    const [isVisible, setIsVisible] = useState(false);\n\n    const scrollToTop = () => {\n      window.scrollTo({\n        top: 0,\n        behavior: \"smooth\"\n      });\n    };\n  \n    useEffect(() => {\n      const toggleVisibility = () => {\n        if (window.pageYOffset > 500) {\n          setIsVisible(true);\n        } else {\n          setIsVisible(false);\n        }\n      };\n  \n      window.addEventListener(\"scroll\", toggleVisibility);\n  \n      return () => window.removeEventListener(\"scroll\", toggleVisibility);\n    }, []);\n\n      \n    return (\n        <div style={{marginTop:30}}>\n            <footer id=\"footer\" className=\"footer-light-style clearfix bg-style\">\n                <div className=\"themesflat-container\">\n                    <div className=\"row\">\n                        <div className=\"col-lg-4 col-md-12 col-12\">\n                            <div className=\"widget widget-logo\">\n                                <div className=\"logo-footer\" id=\"logo-footer\">\n                                    <Link to=\"/\">\n                                        <img className='logo-dark' style={{height:72}} src={logodark} alt=\"nft-gaming\" />\n                                        <img className='logo-light' style={{height:72}} src={logofooter} alt=\"nft-gaming\" />\n                                        \n                                    </Link>\n                                </div>\n                                <p className=\"sub-widget-logo\">ZkSea Pro©Copyright 2023</p>\n                            </div>\n                        </div>\n                        \n                        <div className=\"col-lg-4 col-md-4 col-sm-5 col-5\">\n                            <div className=\"widget widget-menu fl-st-3\">\n                                <h3 className=\"title-widget\">ZK Sea Pro</h3>\n                                <ul style={{color:\"white\"}}>\n                                    {\n                                        resourcesList.map((item,index) =>(\n                                            <li key={index}><Link to={item.link}><p>{item.title}</p></Link></li>\n                                        ))\n                                    }\n                                </ul>\n                            </div>\n                        </div>\n                        <div className=\"col-lg-3 col-md-6 col-sm-7 col-12\">\n                            <div className=\"widget widget-subcribe\">\n                                <h3 className=\"title-widget\">Join Newsletter</h3>\n                                <div className=\"form-subcribe\">\n                                    <form id=\"subscribe-form\" action=\"#\" method=\"GET\" acceptCharset=\"utf-8\" className=\"form-submit\">\n                                        <input name=\"email\"  className=\"email\" type=\"email\" placeholder=\"your@mail.com\" required />\n                                        <button id=\"submit\" name=\"submit\" type=\"submit\"><i className=\"icon-fl-send\"></i></button>\n                                    </form>\n                                </div>\n                                <div className=\"widget-social style-1 mg-t32\">\n                                    <ul>\n                                        {\n                                            socialList.map((item,index) =>(\n                                                <li key={index}><a href={item.link} target='_blank'><i className={item.icon}></i></a></li>\n                                            ))\n                                        }\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </footer>\n        </div>\n\n    );\n}\n\nexport default Footer;\n","import React , { useRef , useState , useEffect } from 'react';\nimport { Link , useLocation } from \"react-router-dom\";\nimport { Modal } from \"react-bootstrap\";\nimport Web3Modal from \"web3modal\";\nimport { ethers } from \"ethers\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport Web3 from \"web3\"\n\nimport menus from \"../../pages/menu\";\nimport menuChains from \"../../pages/menuChains\";\nimport DarkMode from './DarkMode';\nimport logoheader from '../../assets/images/logo/logo.svg'\nimport logoheader2x from '../../assets/images/logo/logo.svg'\nimport logodark from '../../assets/images/logo/logo.svg'\nimport logodark2x from '../../assets/images/logo/logo.svg'\nimport { CHAIN_ARBI_ONE, CHAIN_ARBI_TEST, CHAIN_BSC, CHAIN_BSC_TEST, CHAIN_INFO, CHAIN_ZKMAIN, CHAIN_ZKTEST } from '../../config/constants';\n\nlet web3Modal;\nlet provider;\nlet selectedAccount;\nlet chainIdSaved;\n\n// import Web3 from 'web3'\nfunction init() {    \n    if (localStorage) {\n        chainIdSaved = localStorage.getItem('nftzksea-chainId');\n        if (chainIdSaved == undefined || chainIdSaved == \"undefined\") {\n            chainIdSaved = CHAIN_ZKTEST;\n        }   \n    } else {\n        chainIdSaved = CHAIN_ZKTEST;\n    }\n    \n    let rpcOption = {};\n\n    switch (Number(chainIdSaved)) {\n        case CHAIN_BSC:\n            rpcOption = {\n                56:CHAIN_INFO[CHAIN_BSC].rpcUrls[0]\n            }\n            break;\n        case CHAIN_BSC_TEST:\n            rpcOption = {\n                97:CHAIN_INFO[CHAIN_BSC_TEST].rpcUrls[0]\n            }\n            break;\n        case CHAIN_ZKMAIN:\n            rpcOption = {\n                324:CHAIN_INFO[CHAIN_ZKMAIN].rpcUrls[0]\n            }\n            break;\n        case CHAIN_ARBI_ONE:\n            rpcOption = {\n                42161:CHAIN_INFO[CHAIN_ARBI_ONE].rpcUrls[0]\n            }\n            break;\n        case CHAIN_ARBI_TEST:\n            rpcOption = {\n                421613:CHAIN_INFO[CHAIN_ARBI_TEST].rpcUrls[0]\n            }\n            break;\n    \n        default:\n            rpcOption = {\n                280:CHAIN_INFO[CHAIN_ZKTEST].rpcUrls[0]\n            }\n            break;\n    }\n\n    const providerOptions = {\n        walletconnect: {\n        package: WalletConnectProvider,\n        options: {\n            network:'mainnet',\n            rpc: rpcOption,\n            chainId:chainIdSaved\n        }\n        },           \n    };\n\n    web3Modal = new Web3Modal({\n        network: \"mainnet\", // optional\n        cacheProvider: true, // optional\n        providerOptions // required\n    });\n    \n    window.w3m = web3Modal;\n}\n\nasync function fetchAccountData() {\n    const web3Provider = new ethers.providers.Web3Provider(provider);\n    const signer = web3Provider.getSigner();\n    selectedAccount = await signer.getAddress();\n    console.log(selectedAccount);    \n    return selectedAccount;\n}\n\nasync function refreshAccountData() {\n    await fetchAccountData(provider);\n    window.location.reload();\n}\n\nasync function onConnect() {\n    console.log(\"Opening a dialog\", web3Modal);\n    if (window.ethereum) {\n        try {\n            provider = await web3Modal.connect({ cacheProvider: true });\n        } catch (e) {\n            console.log(\"Could not get a wallet connection\", e);\n            return;\n        }\n    \n        provider.on(\"accountsChanged\", (accounts) => {\n            console.log('accountsChanged',accounts);\n            fetchAccountData();\n            window.location.reload();\n        });\n    \n        provider.on(\"chainChanged\", (chainId) => {\n            fetchAccountData();\n            window.location.reload();\n        });\n    \n        provider.on(\"networkChanged\", (networkId) => {\n            fetchAccountData();\n            // window.location.reload();\n        });\n        // window.location.reload()\n    \n        await refreshAccountData();\n    } else {\n        alert(\"Please install Crypto Walelt \");\n    }\n    \n}\n\nasync function disconnet() {\n    console.log(\"Opening a dialog\", web3Modal);\n    try {\n        // provider = await web3Modal.connect();\n        await web3Modal.clearCachedProvider();\n        // await window.ethereum.disable()\n        window.location.reload()\n    } catch (e) {\n        console.log(\"Could not get a wallet connection\", e);\n        return;\n    }   \n}\n\nconst Header = (props) => {   \n\n    const [modalShow, setModalShow] = useState(false);\n    /*****************************  wallet connection ***************************/\n    const [acc,setacc] = useState()\n    const [accountid, setaccountid] = useState();\n    const [web3, setWeb3] = useState();\n    const [activeSubLink, setActiveSubLink] = useState();\n    const [chainId, setChainId] = useState();\n    \n    // iniit web3 provider\n    useEffect(async () => {\n        if (acc) {\n            // const accounts1 = await window.ethereum.request({ method: 'eth_requestAccounts' });\n            // setaccountid(accounts1[0])\n            provider = await web3Modal.connect();\n            let web3_2 = new Web3(provider);\n            const accounts = await web3_2.eth.getAccounts();\n            setWeb3(web3_2);\n            props.setWeb3Api(web3_2);\n            setaccountid(accounts[0]);\n            props.setAccount(accounts[0]);\n            setProviderEvent();\n        }\n\n    }, [acc]);\n\n    useEffect(() => {\n        init();\n        props.setChainId(chainIdSaved);\n        setChainId(chainIdSaved);\n        getAccount();\n        if (web3Modal.cachedProvider) {\n            setacc(true)\n        }\n    }, []); \n\n    function setProviderEvent() {\n        provider.on(\"accountsChanged\", (accounts) => {\n            console.log('accountsChanged',accounts)\n            fetchAccountData();\n            window.location.reload();\n        });\n    \n        provider.on(\"chainChanged\", (chainId) => {\n            fetchAccountData();\n            window.location.reload();\n        });\n    \n        provider.on(\"networkChanged\", (networkId) => {\n            fetchAccountData();\n        });\n    }\n\n    async function getAccount() {\n        // const web3_2 = new Web3(window.ethereum, null, { transactionConfirmationBlocks: 1 })\n        if (window.ethereum) {\n            // request change chain\n            try {\n                await window.ethereum.request({\n                    method: 'wallet_switchEthereumChain',\n                    params: [{ chainId: CHAIN_INFO[chainIdSaved].chainId}],\n                });\n            } catch (switchError) {\n                console.log(switchError);\n                // This error code indicates that the chain has not been added to MetaMask.\n                if (switchError.code === 4902) {\n                    try {\n                        const data = [CHAIN_INFO[chainIdSaved]]\n\n                        await window.ethereum.request({\n                            method: 'wallet_addEthereumChain',\n                            params: data,\n                        });\n                    } catch (addError) {\n                        \n                    }\n                }\n            }\n        } \n    }\n\n    /****************************  wallet connection end *************************/\n\n    const changeChain = (_chainId) => {\n        if (_chainId) {\n            if (_chainId == chainIdSaved) return;\n\n            localStorage.setItem('nftzksea-chainId', _chainId);\n            init();\n            props.setChainId(_chainId);\n            getAccount();\n            // window.location.reload();\n        }\n        \n    }\n    /****************************  wallet connection end *************************/\n    const { pathname } = useLocation();\n    const headerRef = useRef (null)\n    useEffect(() => {\n        window.addEventListener('scroll', isSticky);\n        return () => {\n            window.removeEventListener('scroll', isSticky);\n        };\n    });\n\n    const isSticky = (e) => {\n        const header = document.querySelector('.js-header');\n        const scrollTop = window.scrollY;\n        scrollTop >= 300 ? header.classList.add('is-fixed') : header.classList.remove('is-fixed');\n        scrollTop >= 400 ? header.classList.add('is-small') : header.classList.remove('is-small');\n    };\n\n    const menuLeft = useRef(null)\n    const btnToggle = useRef(null)\n    const btnSearch = useRef(null)\n\n    const menuToggle = () => {\n        menuLeft.current.classList.toggle('active');\n        btnToggle.current.classList.toggle('active');\n    }\n\n    const [activeIndex, setActiveIndex] = useState(null);\n    const handleOnClick = index => {\n        setActiveIndex(index); \n    };\n    \n    const onHideModal = () => {\n        setModalShow(false);\n    }\n\n    return (\n        <header id=\"header_main\" className=\"header_1 js-header\" ref={headerRef}>\n            <div className=\"themesflat-container\">\n                <div className=\"row\">\n                    <div className=\"col-md-12\">                              \n                        <div id=\"site-header-inner\"> \n                            <div className=\"wrap-box flex\">\n                                <div id=\"site-logo\" className=\"clearfix\">\n                                    <div id=\"site-logo-inner\">\n                                        <Link to=\"/\" rel=\"home\" className=\"main-logo\">\n                                            <img className='logo-dark'  id=\"logo_header\" style={{height:40}} src={logodark} srcSet={`${logodark2x}`} alt=\"Sea Pro\" />\n                                            <img className='logo-light'  id=\"logo_header\" style={{height:40}} src={logoheader} srcSet={`${logoheader2x}`} alt=\"Sea Pro\" />\n                                        </Link>\n                                    </div>\n                                </div>\n                                <div className=\"mobile-button\" ref={btnToggle} onClick={menuToggle}><span></span></div>\n                                <nav id=\"main-nav\" className=\"main-nav\" ref={menuLeft} >\n                                    <ul id=\"menu-primary-menu\" className=\"menu\">\n                                        {\n                                            menus.map((data,index) => (\n                                                <li key={index} onClick={()=> handleOnClick(index)} className={`menu-item ${data.namesub ? 'menu-item-has-children' : '' } ${activeIndex === index ? 'active' : ''} ${data.id ==6 ? 'menu-item-chain' : '' }` } >\n                                                    <Link to={data.links}>{data.id == 6 ? chainId && <span style={{color:\"#baff00\"}}>{CHAIN_INFO[chainId].chainName}</span> : data.name}</Link>\n                                                    {\n                                                         data.namesub &&\n                                                         <ul className=\"sub-menu\" >\n                                                            {\n                                                                data.namesub.map((submenu) => (\n                                                                    <li key={submenu.id} className={\n                                                                        chainId && chainId === submenu.chainId\n                                                                        ? \"menu-item current-item\"\n                                                                        : \"menu-item\"\n                                                                    }>{data.id == 6 ? <Link to=\"#\" onClick={() => {changeChain(submenu.chainId);}}>{submenu.sub}</Link> : <Link to={submenu.links}>{submenu.sub}</Link>}</li>\n                                                                ))\n                                                            }\n                                                        </ul>\n                                                    }\n                                                    \n                                                </li>\n                                            ))\n                                        }\n                                    </ul>                                    \n                                </nav>                                \n                         \n                                <div className=\"flat-search-btn flex\">\n                                    {/* <div className=\"main-nav\" >\n                                        <ul id=\"menu-primary-menu\" className=\"menu\">\n                                            {\n                                                menuChains.map((data,index) => (\n                                                    <li key={index} onClick={()=> handleOnClick(index)} className={`menu-item ${data.namesub ? 'menu-item-has-children' : '' } ${activeIndex === index ? 'active' : ''} ` }   >\n                                                        <Link to={data.links}>{data.name}</Link>\n                                                        {\n                                                            data.namesub &&\n                                                            <ul className=\"sub-menu\" >\n                                                                {\n                                                                    data.namesub.map((submenu) => (\n                                                                        <li key={submenu.id} className={\n                                                                            pathname === submenu.links\n                                                                            ? \"menu-item current-item\"\n                                                                            : \"menu-item\"\n                                                                        }><Link to=\"#\" onClick={() => {changeChain(submenu.chainId);}}>{submenu.sub}</Link></li>\n                                                                    ))\n                                                                }\n                                                            </ul>\n                                                        }\n                                                        \n                                                    </li>\n                                                ))\n                                            }\n                                        </ul>                                    \n                                    </div> */}\n                                {\n                                    accountid ?\n                                    <div>\n                                        <a onClick={()=> setModalShow(true)}>\n                                            <span className='fs-16 user-data'>\n                                                {accountid?.substr(0, 6) + '....' + accountid?.substr(accountid?.length - 4, accountid?.length)}\n                                                <img className='avatar-header mg-l-8' src=\"/assets/images/icon_default.svg\" alt=\"\" />\n                                            </span>\n                                        </a>                                        \n                                    </div>\n                                    :\n                                    <div className=\"sc-btn-top mg-r-12\" id=\"site-header\">\n                                        <button onClick={()=> onConnect()} className=\"button--primary header-slider style style-1 wallet fl-button pri-1\">\n                                            <span>Wallet Connect</span>\n                                        </button>\n                                    </div>\n                                } \n                                </div>                                \n                            </div> \n                        </div>\n                    </div>\n                </div>\n            </div>\n            <DarkMode />\n            <Modal\n                show={modalShow}\n                onHide={onHideModal}\n            >\n                <Modal.Header closeButton></Modal.Header>\n\n                <div className=\"modal-body space-y-20 pd-40\">\n                <h2>My Account</h2>\n                    <div className=\"\" id=\"header_admin\">\n                        \n                        <div className=\"header_avatar\">\n                            <div className=\"flex justify-content-between\">\n                                <span className='fs-16'> {accountid?.substr(0, 6) + '....' + accountid?.substr(accountid?.length - 4, accountid?.length)}</span>\n                                <i className=\"fal fa-copy fs-16\"></i>\n                            </div>\n                            <div className=\"avatar_popup mt-20\">\n                                <div className=\"d-flex align-items-center copy-text justify-content-between\">\n                                    \n                                </div>\n                                \n                                <div className=\"hr\"></div>\n                                <div className='card-bottom flex justify-content-center'>                                    \n                                    {/* <button className=\"mt-10\" href=\"/edit-profile\">\n                                        <i className=\"fas fa-pencil-alt\"></i> <span> Edit Profile</span>\n                                    </button> */}\n                                    <button onClick={()=> disconnet()} id=\"logout\" className='mt-10'>\n                                        <i className=\"fal fa-sign-out\"></i> <span>{'  '} Logout</span>\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Modal>\n        </header>\n    );\n}\n\nexport default Header;\n","import { CHAIN_ARBI_ONE, CHAIN_ARBI_TEST, CHAIN_BSC, CHAIN_BSC_TEST, CHAIN_ZKMAIN, CHAIN_ZKTEST } from \"../config/constants\";\n\nconst menus = [\n    {\n        id: 1,\n        name: 'NFTs',\n        links: '/nfts',\n    },\n    {\n        id: 2,\n        name: 'My NFTs',\n        links: '/my-nfts'\n    },\n    {\n        id: 3,\n        name: 'Create',\n        links: '/create'\n    },\n    {\n        id: 4,\n        name: 'Collections',\n        links: '/collections'\n    },\n    {\n        id: 5,\n        name: 'My Collections',\n        links: '/my-collections'\n    },\n    {\n        id: 6,\n        name: 'ZkSync Testnet',\n        links: '#',\n        chainId: CHAIN_ZKTEST,\n        namesub: [\n            // {\n            //     id: 1,\n            //     sub: 'ZkSync Mainnet',\n            //     links: '#',\n            //     chainId: CHAIN_ZKMAIN,\n            // },\n            {\n                id: 2,\n                sub: 'Bsc Testnet',\n                links: '#',\n                chainId: CHAIN_BSC_TEST\n            },\n            {\n                id: 3,\n                sub: 'Arbitrum Testnet',\n                links: '#',\n                chainId: CHAIN_ARBI_TEST\n            },\n            {\n                id: 4,\n                sub: 'ZkSync Testnet',\n                links: '#',\n                chainId: CHAIN_ZKTEST,\n            },\n        ],\n    }\n]\n\nexport default menus;","import { CHAIN_ARBI_ONE, CHAIN_BSC, CHAIN_ZKMAIN, CHAIN_ZKTEST } from \"../config/constants\";\n\nconst menuChains = [    \n    {\n        id: 1,\n        name: 'ZkSync Testnet',\n        links: '#',\n        chainId: CHAIN_ZKTEST,\n        namesub: [\n            {\n                id: 1,\n                sub: 'ZkSync Mainnet',\n                links: '#',\n                chainId: CHAIN_ZKMAIN,\n            },\n            {\n                id: 2,\n                sub: 'Bsc Mainnet',\n                links: '#',\n                chainId: CHAIN_BSC\n            },\n            {\n                id: 3,\n                sub: 'Arbitrum One',\n                links: '#',\n                chainId: CHAIN_ARBI_ONE\n            },\n            {\n                id: 4,\n                sub: 'ZkSync Testnet',\n                links: '#',\n                chainId: CHAIN_ZKTEST,\n            },\n        ],\n    } \n]\n\nexport default menuChains;","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport imgsun from '../../assets/images/icon/sun.png'\n\nconst DarkMode = () => {\n    let clickedClass = \"clicked\"\n    const body = document.body\n    const lightTheme = \"light\"\n    const darkTheme = \"is_dark\"\n    let theme\n\n    // if (localStorage) {\n    //     theme = localStorage.getItem(\"theme\")\n    // }\n    // if (theme === lightTheme || theme === darkTheme) {\n    //     body.classList.add(theme)\n    // } else {\n    //     body.classList.add(darkTheme)\n    // }\n    body.classList.add(darkTheme);\n\n    const switchTheme = e => {\n        if (theme === darkTheme) {\n            body.classList.replace(darkTheme, lightTheme)\n            e.target.classList.remove(clickedClass)\n            localStorage.setItem(\"theme\", \"light\")\n            theme = lightTheme\n        } else {\n            body.classList.replace(lightTheme, darkTheme)\n            e.target.classList.add(clickedClass)\n            localStorage.setItem(\"theme\", \"is_dark\")\n            theme = darkTheme\n        }\n    }\n    return (\n        // <div className=\"mode_switcher\">\n        //     {/* <h6>Dark mode <strong>Available</strong></h6> */}\n        //     <Link to=\"#\" \n        //         onClick={e => switchTheme(e)}  >\n        //         <img src={imgsun} alt=\"\" />\n        //     </Link>\n\n        // </div>\n        <></>\n    );\n}\n\nexport default DarkMode;\n","export default __webpack_public_path__ + \"static/media/logo.fbc6cd63.svg\";"],"sourceRoot":""}