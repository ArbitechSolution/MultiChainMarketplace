{"version":3,"sources":["pages/NftDetails.jsx","components/layouts/nfts/NftItems.jsx","pages/CollectionDetails.jsx","pages/Nfts.jsx","pages/MyNfts.jsx","pages/Collections.jsx","pages/MyCollections.jsx","pages/AuctionDetails.jsx","pages/index.js","App.js","ScrollToTop.jsx","index.js","config/constants.js","utils/utils.jsx","pages/CreateCollection.jsx","pages/CreateNFT.jsx","pages/FreeMint.jsx","components/footer/Footer.jsx","components/header/Header.jsx","pages/menu.js","pages/menuChains.js","components/header/DarkMode.jsx","assets/images/logo/logo.svg"],"names":["NftDetails","nftid","useParams","useState","currentAccount","setCurrentAccount","chainId","setChainId","web3Api","setWeb3Api","nftContract","setNftContract","setColData","setShow","buyPrice","setBuyPrice","aucBuyPrice","setAucBuyPrice","aucOwner","setAucOwner","setAucStat","openBid","setOpenBid","nOwner","setNOwner","aucTime","hour","setHour","days","setDays","saleval","setSaleVal","auctionval","setAuctionValue","nftData","setNftData","navigate","useNavigate","useEffect","a","fetch","nftContratFile","json","convertNftContratFileToJson","nFTAbi","eth","Contract","NFTAddr","saleNft","auctionDetail","timer","nftInfo","auctionState","owner","getCollectionDetails","id","methods","collectiondetails","call","then","data","catch","listofsalenft","from","length","Number","buyFixedNft","collectionid","tokenid","amount","getGasPrice","gasPriceNumber","amountIn","utils","toBN","fromExponential","parseFloat","Math","pow","buynft","send","value","gasPrice","recipt","err","auctiondetail","aucde","val","userid","nftauctionend","result","removeAuction","removesfromauction","console","log","window","location","reload","removeSale","cancelfixedsale","originalowner","buyAuctionNft","buyauction","timing","day","floor","hr","claimAuctionNft","claim","fixedSale","price","priceIn","fixedsales","status","alert","nftinformation","auction","endday","endhours","startauction","burnMain","colId","burnorinalnft","className","Header","setAccount","_account","VIDEO_TYPE","includes","JSON","parse","alt","muted","autoPlay","loop","src","IPFS_BASE_URL","IMAGE_TYPE","AUDIO_TYPE","style","width","toLowerCase","borderRadius","onClick","d","h","m","onSubmit","e","preventDefault","border","outline","type","placeholder","step","min","onChange","target","required","fontSize","textTransform","marginTop","DevWallet","Footer","NFTs","props","allNftData","setAllNftData","getNftsIndexFromCol","_colId","_nftContract","collectionnft","colItemIndex","i","getNftDetails","nftDetail","makeAllNftData","old","map","item","idx","to","CollectionDetails","searchWord","colData","deleteCollection","getAccounts","accounts","usrWallet","deletecollection","href","name","checked","for","NftItems","curTab","setCurTab","allFixedSale","setAllFixedSale","colllist","setcolllist","totalcolection","collectionform","getAllNFTsByCol","totalnft","nftcount","getAllNFTs","index","collectionstored","nftId","getNftInfo","saveAllFixedSaleList","MyNFTs","arr","setArr","setprice","pricearr","setpricearr","allp","setallp","setallprice","setalldata","newlist","balanceOf","bal","parseInt","getMyNfts","_balance","tokenOfOwnerByIndex","saveFixedSaleList","localStorage","setItem","stringify","saleNftPrie","getallprice","pist","getItem","fees","getalllist","Collections","colList","setColList","allColData","setAllColData","getAllCollections","_details","makeAllColList","MyCollections","getMyCollections","totalcollectiondetails","AuctionDetails","balance","setBalance","setAucTime","setNewBidPrice","getBalance","fromWei","timer1","minutesout","routes","path","component","CreateCollection","CreateNFT","Nfts","MyNfts","FreeMint","App","onUpdate","scrollTo","exact","element","ScrollToTop","pathname","useLocation","ReactDOM","render","document","getElementById","CHAIN_ZKMAIN","CHAIN_ZKTEST","CHAIN_BSC","CHAIN_ARBI_ONE","CHAIN_INFO","chainName","nativeCurrency","symbol","decimals","rpcUrls","blockExplorerUrls","chainSavedId","provider","Provider","gasPriceInUnits","ethers","formatUnits","web3","Web3","providers","HttpProvider","auth","Buffer","projectId","toString","ipfsClient","create","host","port","protocol","headers","authorization","timeout","setImage","buffer","setBuffer","displayImage","setDisplayImage","collectionName","displayName","websiteUrl","collectionDescription","marketFee","setData","setDataType","underminting","setUnderminting","errText","setErrText","submit","_event","add","uploadResult","createCollection","checkDuplicatedImage","_imgPath","stopduplicate","createcollection","objectFit","paddingBottom","files","file","FileReader","onload","readyState","reader","readAsArrayBuffer","onloadend","readAsDataURL","color","position","bottom","image","nftName","ownerName","description","numMint","dataType","setError","mintMulti","setMintMulti","clickedMultiYN","checkSubmitValidation","validPrice","validCopies","mintMultiple","mintNft","duplicatedImage","des","nftIndex","tokenidmint","nftImage","_times","parseUnits","mintfee","BigNumber","mintfeeTotal","createMulti","marginBottom","txHash","setTxHash","mintResult","setMintResult","selectImage","freemintimageurl","method","response","blob","File","error","transactionHash","setIsVisible","toggleVisibility","pageYOffset","addEventListener","removeEventListener","height","logodark","logofooter","title","link","action","acceptCharset","icon","web3Modal","selectedAccount","chainIdSaved","menus","links","DarkMode","body","darkTheme","classList","init","undefined","rpcOption","providerOptions","walletconnect","package","WalletConnectProvider","options","network","rpc","Web3Modal","cacheProvider","w3m","fetchAccountData","web3Provider","Web3Provider","signer","getSigner","getAddress","refreshAccountData","ethereum","connect","on","networkId","clearCachedProvider","modalShow","setModalShow","acc","setacc","accountid","setaccountid","setWeb3","setProviderEvent","getAccount","request","params","code","web3_2","cachedProvider","headerRef","useRef","isSticky","header","querySelector","scrollTop","scrollY","remove","menuLeft","btnToggle","activeIndex","setActiveIndex","ref","rel","srcSet","logodark2x","logoheader","logoheader2x","current","toggle","handleOnClick","namesub","submenu","sub","substr","onConnect","Modal","show","onHide","closeButton","disconnet"],"mappings":"wTA0mCeA,EAjmCI,WACf,IAAQC,EAAUC,cAAVD,MAER,EAA4CE,mBAAS,MAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAA8BF,qBAA9B,mBAAOG,EAAP,KAAgBC,EAAhB,KAIA,EAA8BJ,mBAAS,MAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAsCN,qBAAtC,mBAAOO,EAAP,KAAoBC,EAApB,KACA,EAA8BR,qBAA9B,mBAAgBS,GAAhB,WACA,EAAwBT,qBAAxB,mBAAaU,GAAb,WACA,EAAgCV,qBAAhC,mBAAOW,EAAP,KAAiBC,EAAjB,KACA,EAAsCZ,qBAAtC,mBAAOa,EAAP,KAAoBC,EAApB,KACA,EAAgCd,qBAAhC,mBAAOe,EAAP,KAAiBC,EAAjB,KACA,EAA8BhB,qBAA9B,mBAAgBiB,GAAhB,WACA,EAA8BjB,qBAA9B,mBAAOkB,EAAP,KAAgBC,EAAhB,KACA,EAA4BnB,qBAA5B,oBAAOoB,GAAP,MAAeC,GAAf,MACA,GAA8BrB,qBAA9B,qBAAOsB,GAAP,MACA,IADA,MACwBtB,sBAAxB,qBAAOuB,GAAP,MAAaC,GAAb,MACA,GAAwBxB,qBAAxB,qBAAOyB,GAAP,MAAaC,GAAb,MACA,GAA8B1B,qBAA9B,qBAAO2B,GAAP,MAAgBC,GAAhB,MACA,GAAsC5B,qBAAtC,qBAAO6B,GAAP,MAAmBC,GAAnB,MACA,GAA8B9B,qBAA9B,qBAAO+B,GAAP,MAAgBC,GAAhB,MAEMC,GAAWC,cAEjBC,oBAAS,sBAAC,kCAAAC,EAAA,0DACO/B,EADP,iCAE2BgC,MAAM,uBAFjC,cAEIC,EAFJ,gBAGwCA,EAAeC,OAHvD,OAGIC,EAHJ,OAIIC,EAASD,EAEXjC,EAAc,IAAIF,EAAQqC,IAAIC,SAASF,EAAQG,IAAQzC,IAC3DK,EAAeD,GAPb,4CASP,CAACJ,EAASE,IAEb8B,oBAAS,sBAAC,sBAAAC,EAAA,sDACF/B,GAAWE,GACPT,IACA+C,GAAQ/C,GACRgD,GAAchD,GACdiD,GAAMjD,GACNkD,GAAQlD,GACRmD,GAAanD,GACboD,GAAMpD,IARR,2CAWP,CAACO,EAASE,IAEb,IAAM4C,GAAoB,uCAAG,WAAOC,GAAP,SAAAhB,EAAA,sDACrB/B,GACAE,EAAY8C,QAAQC,kBAAkBF,GAAIG,OACrCC,MAAK,SAACC,GACHhD,EAAWgD,MACZC,QALc,2CAAH,sDASpBb,GAAO,uCAAG,WAAOO,GAAP,SAAAhB,EAAA,sDACR/B,GACAE,EAAY8C,QAAQM,cAAcP,GAAIG,KAAK,CAAEK,KAAM3D,IAC9CuD,MAAK,SAACK,GACHjD,EAAakD,OAAOD,EAAO,IAAO,MAClC/C,EAAiBgD,OAAOD,EAAO,IAAO,SAEzCH,QAPG,2CAAH,sDAWPK,GAAW,uCAAG,WAAOC,EAAcC,EAASC,GAA9B,iBAAA9B,EAAA,0DACZ/B,EADY,uBAEZK,GAAQ,GAFI,SAGiByD,cAHjB,OAGNC,EAHM,OAIRC,EAAWhE,EAAQiE,MAAMC,KAAKC,YAAkBC,WAAWP,GAAWQ,KAAKC,IAAI,GAAI,MAEvFpE,EAAY8C,QAAQuB,OAAOZ,EAAcC,GAASY,KAAK,CAAEjB,KAAM3D,EAAgB6E,MAAOT,EAAUU,SAAUX,IACrGZ,MAAK,SAACwB,GACHtE,GAAQ,MAGXgD,OAAM,SAACuB,GACJvE,GAAQ,MAZJ,2CAAH,0DAiBXoC,GAAa,uCAAG,WAAOM,GAAP,SAAAhB,EAAA,sDACd/B,GACAE,EAAY8C,QAAQ6B,cAAc9B,GAAIG,KAAK,CAAEK,KAAM3D,IAC9CuD,MAAK,SAACsB,GAAW,IAAD,EACTK,EAAQ,CACR/B,GAAI0B,EAAM,GACVM,KAAK,UAACtB,OAAOgB,EAAM,WAAd,eAAoBjB,QAAS,GAAKC,OAAOgB,EAAM,IAAM,KAAwChB,OAAOgB,EAAM,IAAM,KACrHO,OAAQjC,GAEZpC,EAAYmE,MACbzB,QAVO,2CAAH,sDAebT,GAAY,uCAAG,WAAOgB,GAAP,SAAA7B,EAAA,sDACb/B,GACAE,EAAY8C,QAAQiC,cAAcrB,GAASV,KAAK,CAAEK,KAAM3D,IACnDuD,MAAK,SAAC+B,GACHtE,EAAWsE,MAEd7B,QANQ,2CAAH,sDAUZ8B,GAAa,uCAAG,WAAOvB,GAAP,eAAA7B,EAAA,0DACd/B,EADc,uBAEdK,GAAQ,GAFM,SAIeyD,cAJf,OAIRC,EAJQ,OAMd7D,EAAY8C,QAAQoC,mBAAmBxB,GAASY,KAAK,CAAEjB,KAAM3D,EAAgB8E,SAAUX,IAClFZ,MAAK,SAAC+B,GACHG,QAAQC,IAAIJ,GACZK,OAAOC,SAASC,YAEnBpC,QAXS,2CAAH,sDAebqC,GAAU,uCAAG,WAAO/B,EAAcC,GAArB,eAAA7B,EAAA,0DACX/B,EADW,uBAEXK,GAAQ,GAFG,SAIkByD,cAJlB,OAILC,EAJK,OAMX7D,EAAY8C,QAAQ2C,gBAAgB/B,GAASY,KAAK,CAAEjB,KAAM3D,EAAgB8E,SAAUX,IAC/EZ,MAAK,SAAC+B,GACHG,QAAQC,IAAIJ,GACZK,OAAOC,SAASC,YAEnBpC,QAXM,2CAAH,wDAgBVR,GAAK,uCAAG,WAAOe,GAAP,SAAA7B,EAAA,sDACN/B,GACAE,EAAY8C,QAAQ4C,cAAchC,GAASV,KAAK,CAAEK,KAAM3D,IACnDuD,MAAK,SAAC+B,GACHlE,GAAUkE,MAEb7B,QANC,2CAAH,sDAULwC,GAAa,uCAAG,WAAOjC,EAASC,GAAhB,iBAAA9B,EAAA,0DACd/B,EADc,uBAEdK,GAAQ,GAFM,SAIeyD,cAJf,OAIRC,EAJQ,OAKVC,EAAWhE,EAAQiE,MAAMC,KAAKC,YAAkBC,WAAWP,GAAWQ,KAAKC,IAAI,GAAI,MAEvFpE,EAAY8C,QAAQ8C,WAAWlC,GAASY,KAAK,CAAEjB,KAAM3D,EAAgB6E,MAAOT,EAAUU,SAAUX,IAC3FZ,MAAK,SAACwB,GACHtE,GAAQ,GACRkF,OAAOC,SAASC,YAEnBpC,OAAM,SAACuB,GACJvE,GAAQ,MAbF,2CAAH,wDAkBbqC,GAAK,uCAAG,WAAOK,GAAP,SAAAhB,EAAA,sDACN/B,GACAE,EAAY8C,QAAQ+C,OAAOhD,GAAIG,KAAK,CAAEK,KAAM3D,IACvCuD,MAAK,SAAC+B,GACH,IAAIc,EAAM3B,KAAK4B,MAAMf,EAAS,OAC1BgB,EAAK7B,KAAK4B,OAAOf,EAAe,MAANc,GAAe,MAC5B3B,KAAK4B,OAAOf,EAAe,MAANc,EAAmB,KAALE,GAAa,OAClE7C,QAPD,2CAAH,sDAuBL8C,GAAe,uCAAG,WAAOxC,EAAcC,GAArB,eAAA7B,EAAA,0DAChB/B,EADgB,uBAEhBK,GAAQ,GAFQ,SAGayD,cAHb,OAGVC,EAHU,OAKhB7D,EAAY8C,QAAQoD,MAAMzC,EAAcC,GAASY,KAAK,CAAEjB,KAAM3D,EAAgB8E,SAAUX,IACnFZ,MAAK,SAACwB,GACHtE,GAAQ,MAGXgD,OAAM,SAACuB,GACJvE,GAAQ,MAXA,2CAAH,wDAgBfgG,GAAS,uCAAG,WAAOzC,EAAS0C,GAAhB,iBAAAvE,EAAA,yDACd1B,GAAQ,IACJL,EAFU,gCAImB8D,cAJnB,OAIJC,EAJI,OAKNwC,EAAUvG,EAAQiE,MAAMC,KAAKC,YAAkBC,WAAWkC,GAAUjC,KAAKC,IAAI,GAAI,MAErFpE,EAAY8C,QAAQwD,WAAW5C,EAAS2C,GAAS/B,KAAK,CAAEjB,KAAM3D,EAAgB8E,SAAUX,IACnFZ,MAAK,SAAC+B,IACmB,IAAlBA,EAAOuB,OACPpG,GAAQ,GAGRqG,MAAM,aAGbrD,OAAM,SAACuB,GACJvE,GAAQ,MAjBN,2CAAH,wDAsBTsC,GAAO,uCAAG,WAAOI,GAAP,SAAAhB,EAAA,sDACR/B,GACAE,EAAY8C,QAAQ2D,eAAe5D,GAAIG,KAAK,CAAEK,KAAM3D,IAC/CuD,MAAK,SAAC+B,GAEHvD,GAAWuD,GACXpC,GAAqBoC,EAAO,OAC7B7B,QAPC,2CAAH,sDAYPuD,GAAO,uCAAG,WAAOhD,EAAS0C,EAAOO,EAAQC,GAA/B,iBAAA/E,EAAA,0DACR/B,EADQ,uBAERK,GAAQ,GAFA,SAGqByD,cAHrB,OAGFC,EAHE,OAIJwC,EAAUvG,EAAQiE,MAAMC,KAAKC,YAAkBC,WAAWkC,GAAUjC,KAAKC,IAAI,GAAI,MAErFpE,EAAY8C,QAAQ+D,aAAanD,EAAS2C,EAASM,EAAQC,GAAUtC,KAAK,CAAEjB,KAAM3D,EAAgB8E,SAAUX,IACvGZ,MAAK,SAACwB,IACmB,IAAlBA,EAAO8B,OACPpG,GAAQ,GAGRqG,MAAM,aAGbrD,OAAM,SAAAuB,GACHvE,GAAQ,MAhBR,2CAAH,4DAqBP2G,GAAQ,uCAAG,WAAOpD,GAAP,iBAAA7B,EAAA,yDACb1B,GAAQ,IACJL,EAFS,gCAGoB8D,cAHpB,OAGHC,EAHG,OAKHkD,EAAQvF,GAAQ,GACtBxB,EAAY8C,QAAQkE,cAAcD,EAAOrD,GAASY,KAAK,CAAEjB,KAAM3D,EAAgB8E,SAAUX,IACpFZ,MAAK,SAAC+B,GACHG,QAAQC,IAAIJ,GACZ7E,GAAQ,MAGXgD,OAAM,SAACuB,GACJvE,GAAQ,GACRgF,QAAQC,IAAIV,MAdX,2CAAH,sDAmBd,OACI,sBAAKuC,UAAU,eAAf,UACI,cAACC,EAAA,EAAD,CAAQC,WA1RG,SAACC,GAChBzH,EAAkByH,IAyRkBrH,WAAYA,EAAYF,WAAYA,IACpE,yBAASoH,UAAU,+BAAnB,SACI,qBAAKA,UAAU,gBAAf,SACI,sBAAKA,UAAU,wBAAf,UACI,qBAAKA,UAAU,8BAAf,SACKzF,KAAY6F,IAAWC,SAASC,KAAKC,MAAMhG,GAAQ,IAAI,IACpD,uBAAOiG,IAAI,GAAGC,OAAK,EAACC,UAAQ,EAACC,MAAI,EAAjC,SACI,wBAAQC,IAAKC,IAAgBtG,GAAQ,OAEvCuG,IAAWT,SAASC,KAAKC,MAAMhG,GAAQ,IAAI,IAC7C,qBAAKqG,IAAKC,IAAgBtG,GAAQ,GAAIiG,IAAI,KACxCO,IAAWV,SAASC,KAAKC,MAAMhG,GAAQ,IAAI,IAC7C,uBAAOyG,MAAO,CAAEC,MAAO,OAASL,IAAKC,IAAgBtG,GAAQ,KAC3D,QAGV,sBAAKyF,UAAU,6BAAf,UACI,6BACKzF,IAAWA,GAAQ,KAExB,sBAAKyF,UAAU,mCAAf,UACI,+BACI,4BACKzF,IAAWA,GAAQ,KAExB,gCACI,+BACI,qBAAKqG,IAAI,8BAA8BJ,IAAI,OAE/C,gDAKR,wBAAQR,UAAU,UAAlB,SACI,qBAAKY,IAAI,wCAAwCJ,IAAI,UAG7D,sBAAKR,UAAU,kCAAf,UACI,4CAGA,8BACI,+BACI,qBAAKY,IAAI,4BAA4BJ,IAAI,OAFjD,YAOJ,sBAAKR,UAAU,kCAAf,UACI,2CAGA,uCAEI,+BACI,qBAAKY,IAAI,4BAA4BJ,IAAI,OAHjD,eAQJ,sBAAKR,UAAU,kCAAf,UACI,yCAGA,0CAEI,+BACI,qBAAKY,IAAI,4BAA4BJ,IAAI,OAHjD,cAQJ,sBAAKR,UAAU,mCAAf,UACI,uCAGA,8BACI,+BACI,qBAAKY,IAAI,4BAA4BJ,IAAI,OAFjD,eAOJ,sBAAKR,UAAU,iCAAf,UACI,sBAAKA,UAAU,sCAAf,UACI,+BACI,qBAAKY,IAAI,4BAA4BJ,IAAI,OAE7C,+CAIJ,wEAGA,qBAAKR,UAAU,QAAf,SACI,qBAAKY,IAAI,mCAAmCJ,IAAI,UAGxD,8BACI,+BACI,qBAAKI,IAAI,mCAAmCJ,IAAI,OAFxD,sCAiBO,OAAN5G,SAAM,IAANA,QAAA,EAAAA,GAAQsH,kBAAR,OAA0BzI,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAgByI,gBACvC,qBAAKlB,UAAU,kCAAf,SACI,wBAAQA,UAAU,kBAAkBgB,MAAO,CAACC,MAAM,OAAQE,aAAa,GAAIC,QAAS,kBAAM3G,GAAS,QAAUF,GAAQ,KAArH,0BAGPpB,EAAW,IAAW,OAANS,SAAM,IAANA,QAAA,EAAAA,GAAQsH,kBAAR,OAA0BzI,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAgByI,eAAgB,KACvE/H,EAAW,EACX,qBAAK6G,UAAU,kCAAf,SACI,wBAAQA,UAAU,kBAAkBgB,MAAO,CAACC,MAAM,OAAQE,aAAa,GAAIC,QAAS,kBAAM7E,GAAYhC,GAAQ,GAAIA,GAAQ,GAAIpB,IAA9H,uBAED,KAGS,KAAR,OAAPW,SAAO,IAAPA,QAAA,EAAAA,GAASuH,IAA0B,KAAR,OAAPvH,SAAO,IAAPA,QAAA,EAAAA,GAASwH,IAA0B,KAAR,OAAPxH,SAAO,IAAPA,QAAA,EAAAA,GAASyH,KAAmB,OAARhI,QAAQ,IAARA,OAAA,EAAAA,EAAUqC,GAAGsF,kBAAb,OAA+BzI,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAgByI,eACvG7H,EAAc,IAAa,OAARE,QAAQ,IAARA,OAAA,EAAAA,EAAUqE,MAAOvE,EACrC,qBAAK2G,UAAU,kCAAf,SACI,wBAAQgB,MAAO,CAACC,MAAM,OAAQE,aAAa,GAAKnB,UAAU,kBAAkBoB,QAAS,kBAAMpC,GAAgBzE,GAAQ,GAAIA,GAAQ,KAA/H,qBAGJ+B,OAAOjD,GAAe,GAAKiD,OAAOjD,IAAP,OAAsBE,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAUqE,OAAa,OAANhE,SAAM,IAANA,QAAA,EAAAA,GAAQsH,kBAAR,OAA0BzI,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAgByI,eAC5G,qBAAKlB,UAAU,kCAAf,SACI,wBAAQgB,MAAO,CAACC,MAAM,OAAQE,aAAa,GAAKnB,UAAU,kBAAkBoB,QAAS,kBAAMpD,GAAczD,GAAQ,KAAjH,8BAED,KACD,KAGU,KAAR,OAAPT,SAAO,IAAPA,QAAA,EAAAA,GAASuH,IAA0B,KAAR,OAAPvH,SAAO,IAAPA,QAAA,EAAAA,GAASwH,IAA0B,KAAR,OAAPxH,SAAO,IAAPA,QAAA,EAAAA,GAASyH,IAAWjF,OAAOjD,GAAe,GAAKiD,OAAOjD,IAAP,OAAsBE,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAUqE,OAAa,OAANhE,SAAM,IAANA,QAAA,EAAAA,GAAQsH,kBAAR,OAA0BzI,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAgByI,eACrK,qBAAKlB,UAAU,kCAAf,SACI,wBAAQgB,MAAO,CAACC,MAAM,OAAQE,aAAa,GAAKnB,UAAU,kBAAkBoB,QAAS,kBAAMpD,GAAczD,GAAQ,KAAjH,8BACI,MAIF,OAANX,SAAM,IAANA,QAAA,EAAAA,GAAQsH,kBAAR,OAA0BzI,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAgByI,gBACtCxH,EADsD,KAEtDL,EAAc,EACC,KAAR,OAAPS,SAAO,IAAPA,QAAA,EAAAA,GAASuH,IAA0B,KAAR,OAAPvH,SAAO,IAAPA,QAAA,EAAAA,GAASwH,IAA0B,KAAR,OAAPxH,SAAO,IAAPA,QAAA,EAAAA,GAASyH,GAAU,KAC3D,qBAAKvB,UAAU,kCAAf,SACI,wBAAQgB,MAAO,CAACC,MAAM,OAAQE,aAAa,GAAInB,UAAU,kBAAmBoB,QAAS,kBAAMzH,GAAW,IAAtG,mBAEF,KAGV,uBAAM6H,SAAU,SAACC,GAAQA,EAAEC,iBAAmBhD,GAAcnE,GAAQ,GAAIlB,IAAxE,UACKK,EACG,qBAAKsG,UAAU,kCAAf,SACI,uBAAOgB,MAAO,CAAEW,OAAQ,OAAQC,QAAS,QAAUC,KAAK,SAASC,YAAY,kBAAkBC,KAAK,MAAMC,IAAK3I,GAAW,OAAGE,QAAH,IAAGA,OAAH,EAAGA,EAAUqE,KAAMvE,EAA9B,OAA4CE,QAA5C,IAA4CA,OAA5C,EAA4CA,EAAUqE,IAAKqE,SAAU,SAACR,GAAD,OAAOnI,EAAemI,EAAES,OAAO5E,QAAQ6E,UAAQ,MAC/N,KAEXzI,GACGL,EAAc,EACd,qBAAK2G,UAAU,kCAAf,SACI,wBAAQgB,MAAO,CAACC,MAAM,OAAQE,aAAa,GAAInB,UAAU,kBAAzD,mBAEF,QAKNzF,IAAWA,GAAQ,GAAG2G,iBAAX,OAA6BzI,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAgByI,eACxD,uBAAMM,SAAU,SAACC,GACbA,EAAEC,iBACFjC,GAAQlF,GAAQ,GAAIF,GAAYJ,GAAMF,KAF1C,UAII,qBAAKiG,UAAU,kCAAf,SACI,oBAAIgB,MAAO,CAAEoB,SAAU,OAAQC,cAAe,cAA9C,uBAEJ,qBAAKrC,UAAU,kCAAf,SACI,uBAAO6B,KAAK,SAASC,YAAY,6BAA6BC,KAAK,MAAMC,IAAK3I,GAAW,OAAGE,QAAH,IAAGA,OAAH,EAAGA,EAAUqE,KAAMvE,EAA9B,OAA4CE,QAA5C,IAA4CA,OAA5C,EAA4CA,EAAUqE,IAAKqE,SAAU,SAACR,GAAD,OAAOnH,GAAgBmH,EAAES,OAAO5E,QAAQ6E,UAAQ,MAEvM,qBAAKnC,UAAU,kCAAf,SACI,uBAAO6B,KAAK,SAASC,YAAY,aAAaE,IAAI,IAAIC,SAAU,SAACR,GAAD,OAAOvH,GAAQuH,EAAES,OAAO5E,QAAQ6E,UAAQ,MAE5G,qBAAKnC,UAAU,kCAAf,SACI,uBAAO6B,KAAK,SAASC,YAAY,cAAcE,IAAI,IAAIC,SAAU,SAACR,GAAD,OAAOzH,GAAQyH,EAAES,OAAO5E,QAAQ6E,UAAQ,MAE7G,wBAAQnB,MAAO,CAACC,MAAM,OAAQE,aAAa,GAAInB,UAAU,kBAAzD,wBACM,KAIVzF,IAAWA,GAAQ,GAAG2G,iBAAX,OAA6BzI,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAgByI,eACxD,uBAAMM,SAAU,SAACC,GACTA,EAAEC,iBACFxC,GAAU3E,GAAQ,GAAIA,GAAQ,GAAIJ,KAEnC6G,MAAO,CAACsB,UAAU,GAJzB,UAKI,qBAAKtC,UAAU,kCAAf,SACI,oBAAIgB,MAAO,CAAEoB,SAAU,OAAQC,cAAe,cAA9C,8BAEJ,qBAAKrC,UAAU,kCAAf,SACI,uBAAO6B,KAAK,SAASC,YAAY,0BAA0BC,KAAK,MAAMC,IAAK3I,GAAW,OAAGE,QAAH,IAAGA,OAAH,EAAGA,EAAUqE,KAAMvE,EAA9B,OAA4CE,QAA5C,IAA4CA,OAA5C,EAA4CA,EAAUqE,IAAKqE,SAAU,SAACR,GAAD,OAAOrH,GAAWqH,EAAES,OAAO5E,QAAQ6E,UAAQ,MAE/L,qBAAKnC,UAAU,kCAAf,SACI,wBAAQA,UAAU,kBAAkBgB,MAAO,CAACC,MAAM,OAAQE,aAAa,GAAvE,iCAEC,KAIThI,EAAW,IAAW,OAANS,SAAM,IAANA,QAAA,EAAAA,GAAQsH,kBAAR,OAA0BzI,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAgByI,eAC1D,qBAAKlB,UAAU,kCAAf,SACI,wBAAQA,UAAU,kBAAkBgB,MAAO,CAACC,MAAM,OAAQE,aAAa,GAAIC,QAAS,kBAAM7C,GAAWhE,GAAQ,GAAIA,GAAQ,KAAzH,sBAEF,KAIFgI,IAAUrB,gBAAV,OAA2BzI,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAgByI,eAC3C,qBAAKlB,UAAU,kCAAf,SACI,wBAAQA,UAAU,kBAAkBgB,MAAO,CAACC,MAAM,OAAQE,aAAa,GAAIC,QAAS,kBAAMvB,GAASvH,IAAnG,wBAEF,eAulBtB,cAACkK,EAAA,EAAD,Q,kCCjgCGC,EA9FF,SAAAC,GAET,MAA8BlK,mBAAS,MAAvC,mBACA,GADA,UACoCA,mBAAS,KAA7C,mBAAOmK,EAAP,KAAmBC,EAAnB,KACA,EAAwBpK,oBAAS,GAAjC,mBACA,GADA,UACsCA,sBAAtC,mBAAoBQ,GAApB,WAEA2B,oBAAS,sBAAC,kCAAAC,EAAA,yDACH8H,EAAM/J,SAAS+J,EAAM7J,QADlB,iCAG2BgC,MAAM,uBAHjC,cAGIC,EAHJ,gBAIwCA,EAAeC,OAJvD,OAIIC,EAJJ,OAKIC,EAASD,EAEXjC,EAAc,IAAI2J,EAAM7J,QAAQqC,IAAIC,SAASF,EAAQG,IAAQsH,EAAM/J,UACvEK,EAAeD,GACf8J,EAAoBH,EAAM5C,MAAO/G,GAT/B,4CAWP,CAAC2J,EAAM/J,QAAS+J,EAAM7J,UAEzB,IAAMgK,EAAmB,uCAAG,WAAOC,EAAQC,GAAf,SAAAnI,EAAA,sDACpB8H,EAAM7J,SACNkK,EAAalH,QAAQmH,cAAcF,GAAQ/G,OAC1CC,MAAK,SAACiH,GACH,IAAK,IAAIC,EAAI,EAAGA,GAAC,OAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAc5G,QAAQ6G,IACtCC,EAAcF,EAAaC,GAAIH,MAEpC7G,QAPiB,2CAAH,wDAWnBiH,EAAa,uCAAG,WAAOvH,EAAImH,GAAX,SAAAnI,EAAA,sDACd8H,EAAM7J,SACNkK,EAAalH,QAAQ2D,eAAe5D,GAAIG,OACvCC,MAAK,SAACoH,GACHlF,QAAQC,IAAI,mBAAoBiF,GAChCC,EAAe,2BAAID,GAAL,IAAgB,GAAG9C,KAAKC,MAAM6C,EAAU,IAAI,SAC3DlH,QANW,2CAAH,wDAUbmH,EAAiB,SAACpH,GACpB2G,GAAc,SAACU,GAAD,4BACPA,GADO,CACFrH,QAIhB,OACI,qBAAK+D,UAAU,cAAf,SAEQ2C,EAAWY,KAAI,SAACC,EAAMC,GAClB,OACI,eAAC,IAAD,CAAMC,GAAE,eAAUF,EAAK,IAAMxD,UAAU,cAAvC,UACI,qBAAKA,UAAU,qBAAf,SACI,qBAAKY,IAxDf,wBAwDoC4C,EAAK,GAAIhD,IAAI,OAE3C,sBAAKR,UAAU,oBAAf,UACA,+BACKwD,EAAK,GACN,gCACCA,EAAK,QAGV,sBAAKxD,UAAU,yBAAf,UACI,sBAAKA,UAAU,+BAAf,UACA,+BACI,qBAAKY,IAAI,4BAA4BJ,IAAI,OAE7C,oCAGA,+BACI,qBAAKI,IAAI,oCAAoCJ,IAAI,OAErD,+BACI,qBAAKI,IAAI,8BAA8BJ,IAAI,UAG/C,cAAC,IAAD,CAAMR,UAAU,iBAAiB0D,GAAI,QAAUF,EAAK,GAApD,SACI,4DCiRrBG,EA1VW,WACtB,IAAQ7D,EAAUvH,cAAVuH,MACR,EAA8BtH,qBAA9B,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA4CJ,mBAAS,MAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KAIA,EAA8BF,mBAAS,MAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAoCN,mBAAS,IAA7C,mBAAOoL,EAAP,KACA,GADA,KACsCpL,sBAAtC,mBAAOO,EAAP,KAAoBC,EAApB,KACA,EAA8BR,qBAA9B,mBAAOqL,EAAP,KAAgB5K,EAAhB,KACA,EAAwBT,qBAAxB,mBAAaU,GAAb,WACMuB,EAAWC,cAEjBC,oBAAS,sBAAC,kCAAAC,EAAA,0DACFjC,IAAWE,EADT,iCAE2BgC,MAAM,uBAFjC,cAEIC,EAFJ,gBAGwCA,EAAeC,OAHvD,OAGIC,EAHJ,OAIIC,EAASD,EAEXjC,EAAc,IAAIF,EAAQqC,IAAIC,SAASF,EAAQG,IAAQzC,IAC3DK,EAAeD,GACf4C,EAAqBmE,EAAO/G,GAR1B,4CAUP,CAACJ,EAASE,IAEb,IAAM8C,EAAoB,uCAAG,WAAOC,EAAImH,GAAX,SAAAnI,EAAA,sDACrB/B,GACAkK,EAAalH,QAAQC,kBAAkBF,GAAIG,OAC1CC,MAAK,SAACC,GACHhD,EAAWgD,MACZC,QALkB,2CAAH,wDASpB4H,EAAgB,uCAAG,WAAOlI,GAAP,mBAAAhB,EAAA,0DACjB/B,EADiB,wBAEjBK,GAAQ,GAFS,SAGML,EAAQqC,IAAI6I,cAHlB,cAGXC,EAHW,OAIbC,EAAYD,EAAS,GAJR,SAMYrH,cANZ,OAMXC,EANW,OAQjB7D,EAAY8C,QAAQqI,iBAAiBtI,GAAIyB,KAAK,CAAEjB,KAAM6H,EAAY1G,SAAUX,IAC3EZ,MAAK,SAAC+B,GACHG,QAAQC,IAAIJ,GAEZ7E,GAAQ,MACTgD,OAAM,SAACuB,GACNS,QAAQC,MACRjF,GAAQ,MAfK,4CAAH,sDAoBtB,OACI,sBAAK8G,UAAU,eAAf,UACI,cAACC,EAAA,EAAD,CAAQC,WArDG,SAACC,GAChBzH,EAAkByH,IAoDkBrH,WAAYA,EAAYF,WAAYA,IACpE,yBAASoH,UAAU,4BAAnB,SACI,qBAAKA,UAAU,gBAAf,SACI,sBAAKA,UAAU,qBAAf,UACA,qBAAKA,UAAU,2BAAf,SACI,qBAAKA,UAAU,aAAf,SACI,qBAAKY,IAAKiD,GAjEhB,wBAiE4CA,EAAQ,GAAKrD,IAAI,SAG/D,sBAAKR,UAAU,6BAAf,UACI,sBAAKA,UAAU,kCAAf,UACA,6BACK6D,GAAWA,EAAQ,KAExB,oCAEI,+BACCA,GAAWA,EAAQ,WAIxB,sBAAK7D,UAAU,qCAAf,UACI,sBAAKA,UAAU,mCAAf,UACI,sBAAKA,UAAU,kBAAf,UACA,uCAGA,8BACI,+BACA,qBAAKY,IAAI,4BAA4BJ,IAAI,OAF7C,YAOA,sBAAKR,UAAU,kBAAf,UACA,2CAGA,8BACI,+BACA,qBAAKY,IAAI,4BAA4BJ,IAAI,OAF7C,YAOA,sBAAKR,UAAU,kBAAf,UACA,+CAGA,8BACI,+BACA,qBAAKY,IAAI,4BAA4BJ,IAAI,OAF7C,YAOA,sBAAKR,UAAU,kBAAf,UACA,wCAEI,+BACA,qBAAKY,IAAI,oCAAoCJ,IAAI,UAGrD,sCAIA,sBAAKR,UAAU,kBAAf,UACA,wCAGA,sCAIA,sBAAKA,UAAU,kBAAf,UACA,8CAEI,+BACA,qBAAKY,IAAI,oCAAoCJ,IAAI,UAGrD,yCAKJ,sBAAKR,UAAU,oCAAf,UACI,sBAAKA,UAAU,qBAAf,UACA,mBAAGmE,KAAK,IAAInE,UAAU,iBAAtB,SACI,+BACI,qBAAKY,IAAI,gCAAgCJ,IAAI,SAGrD,mBAAG2D,KAAK,IAAInE,UAAU,iBAAtB,SACI,+BACI,qBAAKY,IAAI,gCAAgCJ,IAAI,SAGrD,mBAAG2D,KAAK,IAAInE,UAAU,iBAAtB,SACI,+BACI,qBAAKY,IAAI,+BAA+BJ,IAAI,SAGpD,oBAAG2D,KAAK,IAAInE,UAAU,6BAAtB,UACI,+BACA,qBAAKY,IAAI,kCAAkCJ,IAAI,OAE/C,yCAIJ,mBAAG2D,KAAK,IAAInE,UAAU,iBAAtB,SACI,8BACA,+CAIJ,6BACC6D,GAAWA,EAAQ,KAEpB,+BACA,+BACI,qBAAKjD,IAAI,8BAA8BJ,IAAI,OAE/C,6DAMR,qBAAKR,UAAU,mCAAf,SACI,wBAAQoB,QAAS,WAAO3G,EAAS,SAAWoJ,EAAQ,KAAO7D,UAAU,kBAAkBgB,MAAO,CAACG,aAAa,EAAGF,MAAM,OAAQqB,UAAU,GAAvI,gCAEF7J,GAAkB8J,KAChB,qBAAKvC,UAAU,mCAAf,SACI,wBAAQoB,QAAS,WAAO0C,EAAiBhE,IAAUE,UAAU,kBAAkBgB,MAAO,CAACG,aAAa,EAAGF,MAAM,OAAQqB,UAAU,GAA/H,2CAOhB,yBAAStC,UAAU,WAAnB,SACA,qBAAKA,UAAU,gBAAf,SACI,sBAAKA,UAAU,kBAAf,UACA,sBAAKA,UAAU,uBAAf,UACI,sBAAMA,UAAU,qCAAhB,mBAGA,sBAAMA,UAAU,8BAAhB,sBAGA,sBAAMA,UAAU,8BAAhB,uBAGA,sBAAMA,UAAU,8BAAhB,8BAIJ,sBAAKA,UAAU,wBAAf,UACI,sBAAKA,UAAU,+BAAf,UACA,sBAAMA,UAAU,eAAhB,SACI,qBAAKY,IAAI,+BAA+BJ,IAAI,OAEhD,sBAAMR,UAAU,eAAhB,SACI,qBAAKY,IAAI,gCAAgCJ,IAAI,OAEjD,sBAAKR,UAAU,sBAAf,UACI,uBAAO6B,KAAK,OAAOC,YAAY,iBAC/B,+BACI,qBAAKlB,IAAI,+BAA+BJ,IAAI,aAIpD,sBAAKR,UAAU,+BAAf,UACA,sBAAKA,UAAU,cAAf,UACI,sBAAKA,UAAU,oBAAf,+BAEA,sBAAMA,UAAU,QAAhB,SACI,qBAAKY,IAAI,mCAAmCJ,IAAI,UAGpD,qBAAKR,UAAU,oBAAf,SACA,sBAAKA,UAAU,yBAAf,UACI,sBAAKA,UAAU,eAAf,UACA,uBAAO6B,KAAK,QAAQvE,MAAM,UAAU8G,KAAK,aAAaC,SAAO,IAC7D,wBAAOrE,UAAU,OAAOsE,IAAI,UAA5B,UACI,sBAAMtE,UAAU,iBAAhB,SACA,qBAAKY,IAAI,oCAAoCJ,IAAI,OAEjD,yDAKJ,sBAAKR,UAAU,eAAf,UACA,uBAAO6B,KAAK,QAAQvE,MAAM,UAAU8G,KAAK,eACzC,wBAAOpE,UAAU,OAAOsE,IAAI,UAA5B,UACI,sBAAMtE,UAAU,iBAAhB,SACA,qBAAKY,IAAI,oCAAoCJ,IAAI,OAEjD,yDAKJ,sBAAKR,UAAU,eAAf,UACA,uBAAO6B,KAAK,QAAQvE,MAAM,UAAU8G,KAAK,eACzC,wBAAOpE,UAAU,OAAOsE,IAAI,UAA5B,UACI,sBAAMtE,UAAU,iBAAhB,SACA,qBAAKY,IAAI,oCAAoCJ,IAAI,OAEjD,iEAQZ,sBAAKR,UAAU,cAAf,UACI,sBAAKA,UAAU,mBAAf,+BAEA,sBAAMA,UAAU,QAAhB,SACI,qBAAKY,IAAI,mCAAmCJ,IAAI,UAGpD,qBAAKR,UAAU,oBAAf,SACA,sBAAKA,UAAU,yBAAf,UACI,sBAAKA,UAAU,eAAf,UACA,uBAAO6B,KAAK,QAAQvE,MAAM,UAAU8G,KAAK,aAAaC,SAAO,IAC7D,wBAAOrE,UAAU,OAAOsE,IAAI,UAA5B,UACI,sBAAMtE,UAAU,iBAAhB,SACA,qBAAKY,IAAI,oCAAoCJ,IAAI,OAEjD,yDAKJ,sBAAKR,UAAU,eAAf,UACA,uBAAO6B,KAAK,QAAQvE,MAAM,UAAU8G,KAAK,eACzC,wBAAOpE,UAAU,OAAOsE,IAAI,UAA5B,UACI,sBAAMtE,UAAU,iBAAhB,SACA,qBAAKY,IAAI,oCAAoCJ,IAAI,OAEjD,yDAKJ,sBAAKR,UAAU,eAAf,UACA,uBAAO6B,KAAK,QAAQvE,MAAM,UAAU8G,KAAK,eACzC,wBAAOpE,UAAU,OAAOsE,IAAI,UAA5B,UACI,sBAAMtE,UAAU,iBAAhB,SACA,qBAAKY,IAAI,oCAAoCJ,IAAI,OAEjD,iEASZ,sBAAMR,UAAU,6BAAhB,SACI,qBAAKY,IAAI,oCAAoCJ,IAAI,OAGrD,sBAAMR,UAAU,6BAAhB,SACI,qBAAKY,IAAI,oCAAoCJ,IAAI,oBAO7D,yBAASR,UAAU,OAAnB,SACA,qBAAKA,UAAU,gBAAf,SACI,cAACuE,EAAD,CAAUzE,MAAOA,EAAOjH,QAASA,EAAS+K,WAAYA,EAAYjL,QAASA,QAGnF,cAAC6J,EAAA,EAAD,Q,kBCxEGC,EAlRF,WACT,MAA4CjK,mBAAS,MAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAA8BF,qBAA9B,mBAAOG,EAAP,KAAgBC,EAAhB,KAKA,EAA8BJ,mBAAS,MAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAA4BN,mBAAS,OAArC,mBAAOgM,EAAP,KAAeC,EAAf,KACA,EAAsCjM,qBAAtC,mBAAOO,EAAP,KAAoBC,EAApB,KAEA,EAAgCR,mBAAS,IAAzC,mBACA,GADA,UAC8BA,mBAAS,KAAvC,mBACA,GADA,UACsBA,mBAAS,KAA/B,mBACA,GADA,UAC0BA,mBAAS,KAAnC,mBACA,GADA,UACgCA,sBAAhC,mBACA,GADA,UACwCA,mBAAS,KAAjD,mBAAOkM,EAAP,KAAqBC,EAArB,KACA,EAAwBnM,mBAAS,IAAjC,mBACA,GADA,UACgCA,sBAAhC,mBACA,GADA,UACgCA,sBAAhC,mBAAOoM,EAAP,KAAiBC,EAAjB,KACA,GAA8BrM,mBAAS,IAAvC,qBACA,IADA,YAC8BA,mBAAS,KAAvC,qBAEMiC,IAFN,YAEiBC,eAEjBC,oBAAS,sBAAC,kCAAAC,EAAA,0DACO/B,IAAWJ,EADlB,iCAE2BoC,MAAM,uBAFjC,cAEIC,EAFJ,gBAGwCA,EAAeC,OAHvD,OAGIC,EAHJ,OAIIC,EAASD,EAEXjC,EAAc,IAAIF,EAAQqC,IAAIC,SAASF,EAAQG,IAAQzC,IAC3DK,EAAeD,GAPb,4CASP,CAACJ,EAASE,EAASJ,IAEtBkC,oBAAS,sBAAC,sBAAAC,EAAA,sDACF7B,GAEA+L,KAHE,2CAKP,CAAC/L,IAwGJ,IAAM+L,GAAc,uCAAG,sBAAAlK,EAAA,sDACf/B,GACAE,EAAY8C,QAAQkJ,iBAAiBhJ,KAAK,CAAEK,KAAM3D,IACjDuD,MAAK,SAACK,GACHwI,EAAYxI,MAEfH,QANc,2CAAH,qDAUpBvB,qBAAU,WACN,IAAK,IAAIuI,EAAI,EAAGA,GAAK0B,EAAU1B,IAE3B8B,GAAgB9B,KAErB,CAAC0B,IAiBJ,IAAMI,GAAe,uCAAG,WAAOpJ,GAAP,SAAAhB,EAAA,sDAChB/B,GACAE,EAAY8C,QAAQoJ,SAASrJ,GAAIG,OAChCC,MAAK,SAACkJ,GACH,IAAK,IAAIhC,EAAI,EAAGA,EAAIgC,EAAUhC,IAE1BiC,GAAWvJ,EAAIsH,MAEpBhH,QARa,2CAAH,sDAYfiJ,GAAU,uCAAG,WAAOvJ,EAAIwJ,GAAX,SAAAxK,EAAA,sDACX/B,GACAE,EAAY8C,QAAQwJ,iBAAiBzJ,EAAIwJ,GAAOrJ,KAAK,CAAEK,KAAM3D,IACxDuD,MAAK,SAACsJ,GACHC,GAAWD,MACZpJ,QALI,2CAAH,wDASVqJ,GAAU,uCAAG,WAAO3J,GAAP,SAAAhB,EAAA,0DAEX/B,EAFW,gCAGLE,EAAY8C,QAAQ2D,eAAe5D,GAAIG,KAAK,CAAEK,KAAM3D,IACzDuD,MAAK,SAAC+B,GACHyH,GAAqB,2BAAKzH,GAAN,IAAc,GAAIuC,KAAKC,MAAMxC,EAAO,IAAI,SAC7D7B,QANQ,2CAAH,sDAUVsJ,GAAuB,SAACvJ,GAC1BiC,QAAQC,IAAIlC,GACZ0I,GAAgB,SAACrB,GAAD,4BACTA,GADS,CACJrH,QAIhB,OACI,sBAAK+D,UAAU,OAAf,UACI,cAACC,EAAA,EAAD,CAAQC,WAtNG,SAACC,GAChBzH,EAAkByH,IAqNkBrH,WAAYA,EAAYF,WAAYA,IACpE,yBAASoH,UAAU,yBAAnB,SACI,qBAAKA,UAAU,gBAAf,SACI,qBAAKA,UAAU,yBAAf,SACA,sBAAKA,UAAU,yBAAf,UACI,sBAAKA,UAAU,8BAAf,UACA,wBAAQA,UAAS,0BAAgC,QAAXwE,EAAmB,SAAW,IAAMpD,QAAS,WAAOqD,EAAU,OAAQhK,GAAS,iBAArH,wBAGA,wBAAQuF,UAAS,+BAAqC,QAAXwE,EAAmB,SAAW,IAAMpD,QAAS,WAAOqD,EAAU,QAAzG,qBAIA,wBAAQzE,UAAU,oBAAlB,+BAOZ,yBAASA,UAAU,WAAnB,SACI,qBAAKA,UAAU,gBAAf,SACI,qBAAKA,UAAU,cAAf,SACQ0E,EAAanB,KAAI,SAACC,EAAMC,GACpB,OACI,qBAAKzD,UAAU,UAAf,SACI,eAAC,IAAD,CAAM0D,GAAE,eAAUF,EAAK,IAAvB,UACI,qBAAKxD,UAAU,iBAAf,SACKI,IAAWC,SAASC,KAAKC,MAAMiD,EAAK,IAAI,IACrC,uBAAOhD,IAAI,GAAGC,OAAK,EAACC,UAAQ,EAACC,MAAI,EAAjC,SACI,wBAAQC,IAAKC,IAAgB2C,EAAK,OAEpC1C,IAAWT,SAASC,KAAKC,MAAMiD,EAAK,IAAI,IAC1C,qBAAK5C,IAAKC,IAAgB2C,EAAK,GAAIhD,IAAI,KACrCO,IAAWV,SAASC,KAAKC,MAAMiD,EAAK,IAAI,IAC1C,uBAAOxC,MAAO,CAAEC,MAAO,OAASL,IAAKC,IAAgB2C,EAAK,KACxD,OAIV,sBAAKxD,UAAU,gBAAf,UACI,4BAAIwD,EAAK,KACT,+BAAM,qBAAK5C,IAAI,+BAA+BJ,IAAI,cAjBhCiD,YA2BtD,cAACjB,EAAA,EAAD,QCzBGiD,EAlPA,WACX,MAA8BjN,qBAA9B,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA4CJ,mBAAS,MAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KAKA,EAA8BF,mBAAS,MAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAA4BN,mBAAS,OAArC,mBAAOgM,EAAP,KAAeC,EAAf,KACA,EAAwBjM,oBAAS,GAAjC,mBACA,GADA,UACsCA,sBAAtC,mBAAOO,EAAP,KAAoBC,EAApB,KAEA,EAAsBR,mBAAS,IAA/B,mBAAOkN,EAAP,KAAYC,EAAZ,KACA,EAA0BnN,mBAAS,IAAnC,mBAAcoN,GAAd,WACA,EAAgCpN,qBAAhC,mBAAOqN,EAAP,KAAiBC,EAAjB,KACA,EAAwCtN,mBAAS,IAAjD,mBAAOkM,EAAP,KAAqBC,EAArB,KACA,EAAwBnM,mBAAS,IAAjC,mBAAOuN,EAAP,KAAaC,EAAb,KACA,EAA8BxN,qBAA9B,oBACA,IADA,YACgCA,sBAAhC,qBAAiByN,IAAjB,aACA,GAAgCzN,qBAAhC,qBAAOoM,GAAP,MAAiBC,GAAjB,MACA,GAA8BrM,mBAAS,IAAvC,qBAAgB0N,IAAhB,aACA,GAA8B1N,mBAAS,IAAvC,qBAAO2N,GAAP,MAEM1L,IAFN,MAEiBC,eAEjBC,oBAAS,sBAAC,kCAAAC,EAAA,0DACO/B,IAAWJ,EADlB,iCAE2BoC,MAAM,uBAFjC,cAEIC,EAFJ,gBAGwCA,EAAeC,OAHvD,OAGIC,EAHJ,OAIIC,EAASD,EAEXjC,EAAc,IAAIF,EAAQqC,IAAIC,SAASF,EAAQG,IAAQzC,IAC3DK,EAAeD,GAPb,4CASP,CAACJ,EAASE,EAASJ,IAEtBkC,oBAAS,sBAAC,sBAAAC,EAAA,sDACF7B,IACAsC,GAAQ,GACRyJ,MAHE,2CAKP,CAAC/L,IAEJ,IAAMsC,GAAO,uCAAG,WAAOO,GAAP,SAAAhB,EAAA,0DACR/B,EADQ,gCAEFE,EAAY8C,QAAQuK,UAAU3N,GAAgBsD,KAAK,CAAEK,KAAM3D,IAChEuD,MAAK,SAACqK,GACCC,SAASD,GAAO,GAChBE,GAAUF,MAGjBnK,QARO,2CAAH,sDAYPqK,GAAS,uCAAG,WAAOC,GAAP,iBAAA5L,EAAA,0DACV/B,EADU,iBAEDqK,EAAI,EAFH,YAEMA,EAAIoD,SAASE,IAFnB,iCAGYzN,EAAY8C,QAAQ4K,oBAAoBhO,EAAgByK,GAAGnH,KAAK,CAAEK,KAAM3D,IAHpF,OAGF6M,EAHE,OAINpH,QAAQC,IAAI,gBAAiBmH,GACzBA,GACA9J,GAAQ8J,GANN,OAE8BpC,IAF9B,2DAAH,sDAYT1H,GAAO,uCAAG,WAAOI,GAAP,SAAAhB,EAAA,sDACR/B,GACAE,EAAY8C,QAAQ2D,eAAe5D,GAAIG,KAAK,CAAEK,KAAM3D,IAC/CuD,MAAK,SAAC+B,GACH2I,GAAkB,2BAAK3I,GAAN,IAAc,GAAIuC,KAAKC,MAAMxC,EAAO,IAAI,MACzD4I,aAAaC,QAAb,iBAA+BhL,GAAM0E,KAAKuG,UAAU9I,IACpD4H,EAAO/J,GACPkL,GAAY/I,EAAO,OACpB7B,QARC,2CAAH,sDAYPwK,GAAoB,SAACzK,GACvB0I,GAAgB,SAACrB,GAAD,4BACTA,GADS,CACJrH,QAIV6K,GAAW,uCAAG,WAAOlL,GAAP,SAAAhB,EAAA,sDACZ/B,GACAE,EAAY8C,QAAQM,cAAcP,GAAIG,KAAK,CAAEK,KAAM3D,IAC9CuD,MAAK,SAACK,GACH,IAAMuB,EAAM,CACRhC,GAAIA,EAAI0B,MAAOjB,EAAO,IAE1BsK,aAAaC,QAAb,mBAAiChL,GAAOS,EAAO,IAC/CyJ,EAAYlK,GACZmL,GAAYnJ,MAEf1B,QAXO,2CAAH,sDAeX6K,GAAc,SAAC9K,GACD,MAAZA,EAAKL,KAGLoK,GAAQ,SAAC1C,GAAD,4BACDA,GADC,CACIrH,OAEZgK,GAAYF,KAIpBpL,qBAAU,WACNwL,GAAQ5C,KAAI,SAAC3F,EAAKsF,GACd,IAAM8D,EAAOL,aAAaM,QAAb,oBAAkCrJ,IAC/CgI,GAAS,SAACtC,GACN,MAAM,GAAN,mBAAWA,GAAX,CAAgB0D,YAGzB,CAACtB,EAAKG,IAET,IA6BMf,GAAc,uCAAG,sBAAAlK,EAAA,sDACf/B,GACAE,EAAY8C,QAAQkJ,iBAAiBhJ,KAAK,CAAEK,KAAM3D,IAC7CuD,MAAK,SAAC+B,GACH8G,GAAY9G,MAEf7B,QANU,2CAAH,qDAUpBvB,qBAAU,WACN,IAAK,IAAIuI,EAAI,EAAGA,GAAK0B,GAAU1B,IAC3BpH,GAAkBoH,KAEvB,CAAC0B,KAEJ,IAAM9I,GAAiB,uCAAG,WAAOF,GAAP,SAAAhB,EAAA,sDAClB/B,GACAE,EAAY8C,QAAQC,kBAAkBF,GAAIG,KAAK,CAAEK,KAAM3D,IAClDuD,MAAK,SAACkL,GACHC,GAAWD,MACZhL,QALW,2CAAH,sDASjBiL,GAAa,SAAClL,GAChBiK,IAAW,SAAC5C,GAAD,4BACJA,GADI,CACCrH,QAQhB,OACI,sBAAK+D,UAAU,OAAf,UACI,cAACC,EAAA,EAAD,CAAQC,WAvLG,SAACC,GAChBzH,EAAkByH,IAsLkBrH,WAAYA,EAAYF,WAAYA,IACpE,yBAASoH,UAAU,yBAAnB,SACI,qBAAKA,UAAU,gBAAf,SACI,qBAAKA,UAAU,yBAAf,SACA,sBAAKA,UAAU,yBAAf,UACI,sBAAKA,UAAU,8BAAf,UACA,wBAAQA,UAAS,0BAAgC,QAAXwE,EAAmB,SAAW,IAAMpD,QAAS,WAAOqD,EAAU,OAAQhK,GAAS,oBAArH,wBAGA,wBAAQuF,UAAS,+BAAqC,QAAXwE,EAAmB,SAAW,IAAMpD,QAAS,WAAOqD,EAAU,QAAzG,qBAIA,wBAAQzE,UAAU,oBAAlB,+BAOZ,yBAASA,UAAU,WAAnB,SACI,qBAAKA,UAAU,gBAAf,SACI,qBAAKA,UAAU,cAAf,SACQ0E,EAAanB,KAAI,SAACC,EAAMC,GACpB,OACI,qBAAKzD,UAAU,UAAf,SACI,eAAC,IAAD,CAAM0D,GAAE,eAAUF,EAAK,IAAvB,UACI,qBAAKxD,UAAU,iBAAf,SACKI,IAAWC,SAASC,KAAKC,MAAMiD,EAAK,IAAI,IACrC,uBAAOhD,IAAI,GAAGC,OAAK,EAACC,UAAQ,EAACC,MAAI,EAAjC,SACI,wBAAQC,IAAKC,IAAgB2C,EAAK,OAEpC1C,IAAWT,SAASC,KAAKC,MAAMiD,EAAK,IAAI,IAC1C,qBAAK5C,IAAKC,IAAgB2C,EAAK,GAAIhD,IAAI,KACrCO,IAAWV,SAASC,KAAKC,MAAMiD,EAAK,IAAI,IAC1C,uBAAOxC,MAAO,CAAEC,MAAO,OAASL,IAAKC,IAAgB2C,EAAK,KACxD,OAGV,sBAAKxD,UAAU,gBAAf,UACI,4BAAIwD,EAAK,KACT,+BAAM,qBAAK5C,IAAI,+BAA+BJ,IAAI,cAhBhCiD,YA0BtD,cAACjB,EAAA,EAAD,QCnHG4E,EA1HK,WAChB,MAA8B5O,qBAA9B,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA4CJ,mBAAS,MAArD,mBAAuBE,GAAvB,WAKA,EAA8BF,mBAAS,MAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAA8BN,mBAAS,IAAvC,mBAAO6O,EAAP,KAAgBC,EAAhB,KACA,EAAoC9O,mBAAS,IAA7C,mBAAO+O,EAAP,KAAmBC,EAAnB,KACA,EAA4BhP,mBAAS,OAArC,mBAAOgM,EAAP,KAAeC,EAAf,KACA,EAAwBjM,oBAAS,GAAjC,mBAAaU,GAAb,WACA,EAAsCV,qBAAtC,mBAAOO,EAAP,KAAoBC,EAApB,KACMyB,EAAWC,cAEjBC,oBAAS,sBAAC,sBAAAC,EAAA,sDACFjC,GAAWE,GACX4O,IAFE,2CAIP,CAAC9O,EAASE,IAEb,IAAM4O,EAAiB,uCAAG,sCAAA7M,EAAA,0DAElB/B,EAFkB,wBAGlBK,GAAQ,GAHU,SAKKL,EAAQqC,IAAI6I,cALjB,cAKZC,EALY,OAMdC,EAAYD,EAAS,GANP,SAOWnJ,MAAM,uBAPjB,cAOZC,EAPY,iBAQwBA,EAAeC,OARvC,QAQZC,EARY,OASZC,EAASD,EAEXjC,EAAc,IAAIF,EAAQqC,IAAIC,SAASF,EAAQG,IAAQzC,IAC3DK,EAAeD,GAEfA,EAAY8C,QAAQkJ,iBAAiBhJ,KAAK,CAAEK,KAAM6H,IACjDjI,MAAK,SAAC+B,GACHuJ,EAAWvJ,MAGd7B,QAnBiB,4CAAH,qDAuBvBvB,qBAAU,WACN,GAAI9B,EACA,IAAK,IAAIqK,EAAI,EAAGA,GAAKmE,EAASnE,IAC1BvH,EAAqBuH,KAI9B,CAACmE,EAASxO,IAEb,IAAM8C,EAAoB,uCAAG,WAAOC,GAAP,SAAAhB,EAAA,sDACrB/B,GACAE,EAAY8C,QAAQC,kBAAkBF,GAAIG,OACzCC,MAAK,SAAC0L,GACiB,+CAAhBA,EAAS,IAGTC,EAAeD,MAEpBxL,QATkB,2CAAH,sDAapByL,EAAiB,SAAC1L,GACpBuL,GAAc,SAAClE,GAAD,4BACPA,GADO,CACFrH,QAIhB,OACI,sBAAK+D,UAAU,OAAf,UACI,cAACC,EAAA,EAAD,CAAQC,WAvEG,SAACC,GAChBzH,EAAkByH,IAsEkBrH,WAAYA,EAAYF,WAAYA,IACpE,yBAASoH,UAAU,yBAAnB,SACI,qBAAKA,UAAU,gBAAf,SACI,qBAAKA,UAAU,yBAAf,SACA,sBAAKA,UAAU,yBAAf,UACI,sBAAKA,UAAU,8BAAf,UACA,wBAAQA,UAAS,0BAAgC,QAAXwE,EAAmB,SAAW,IAAMpD,QAAS,WAAOqD,EAAU,QAApG,wBAGA,wBAAQzE,UAAS,+BAAqC,QAAXwE,EAAmB,SAAW,IAAMpD,QAAS,WAAOqD,EAAU,OAAQhK,EAAS,UAA1H,qBAIA,wBAAQuF,UAAU,oBAAlB,+BAOZ,yBAASA,UAAU,WAAnB,SACI,qBAAKA,UAAU,gBAAf,SACI,qBAAKA,UAAU,cAAf,SAEQuH,EAAWhE,KAAI,SAACC,EAAMC,GAClB,OACI,qBAAKzD,UAAU,UAAf,SACI,eAAC,IAAD,CAAM0D,GAAE,sBAAiBF,EAAK,IAA9B,UACI,qBAAKxD,UAAU,iBAAf,SACI,qBAAKY,IAzG/B,wBAyGoD4C,EAAK,GAAIhD,IAAI,OAE3C,sBAAKR,UAAU,gBAAf,UACI,4BAAIwD,EAAK,KACT,+BAAM,qBAAK5C,IAAI,+BAA+BJ,IAAI,cAPhCiD,YAiBtD,cAACjB,EAAA,EAAD,QCFGoF,EArHO,WAClB,MAA8BpP,qBAA9B,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA4CJ,mBAAS,MAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KAKA,EAA8BF,mBAAS,MAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAoCN,mBAAS,IAA7C,mBAAO+O,EAAP,KAAmBC,EAAnB,KACA,EAA4BhP,mBAAS,OAArC,mBAAOgM,EAAP,KAAeC,EAAf,KACA,EAAwBjM,oBAAS,GAAjC,mBACA,GADA,UACsCA,sBAAtC,mBAAOO,EAAP,KAAoBC,EAApB,KAEMyB,EAAWC,cAEjBC,oBAAS,sBAAC,kCAAAC,EAAA,0DACO/B,IAAWJ,EADlB,iCAE2BoC,MAAM,uBAFjC,cAEIC,EAFJ,gBAGwCA,EAAeC,OAHvD,OAGIC,EAHJ,OAIIC,EAASD,EAEXjC,EAAc,IAAIF,EAAQqC,IAAIC,SAASF,EAAQG,IAAQzC,IAC3DK,EAAeD,GAPb,4CASP,CAACJ,EAASE,EAASJ,IAEtBkC,oBAAS,sBAAC,sBAAAC,EAAA,sDACF7B,GACA8O,IAFE,2CAIP,CAAC9O,IAEJ,IAAM8O,EAAgB,uCAAG,sBAAAjN,EAAA,sDACjB/B,GACAE,EAAY8C,QAAQiM,yBAAyB/L,KAAK,CAAEK,KAAM3D,IACrDuD,MAAK,SAAC+B,GACHG,QAAQC,IAAI,OAAQJ,GACpB,IAAK,IAAImF,EAAI,EAAGA,GAAC,OAAGnF,QAAH,IAAGA,OAAH,EAAGA,EAAQ1B,QAAQ6G,IAChCvH,EAAqBoC,EAAOmF,OAGnChH,OAAM,SAACuB,GACJS,QAAQC,IAAI,QAASV,MAVZ,2CAAH,qDAgBhB9B,EAAoB,uCAAG,WAAOC,GAAP,SAAAhB,EAAA,sDACrB/B,GACAE,EAAY8C,QAAQC,kBAAkBF,GAAIG,OACzCC,MAAK,SAAC0L,GACiB,+CAAhBA,EAAS,IAGTC,EAAeD,MAEpBxL,QATkB,2CAAH,sDAapByL,EAAiB,SAAC1L,GACpBuL,GAAc,SAAClE,GAAD,4BACPA,GADO,CACFrH,QAIhB,OACI,sBAAK+D,UAAU,OAAf,UACI,cAACC,EAAA,EAAD,CAAQC,WAlEG,SAACC,GAChBzH,EAAkByH,IAiEkBrH,WAAYA,EAAYF,WAAYA,IACpE,yBAASoH,UAAU,yBAAnB,SACI,qBAAKA,UAAU,gBAAf,SACI,qBAAKA,UAAU,yBAAf,SACA,sBAAKA,UAAU,yBAAf,UACI,sBAAKA,UAAU,8BAAf,UACA,wBAAQA,UAAS,0BAAgC,QAAXwE,EAAmB,SAAW,IAAMpD,QAAS,WAAOqD,EAAU,QAApG,wBAGA,wBAAQzE,UAAS,+BAAqC,QAAXwE,EAAmB,SAAW,IAAMpD,QAAS,WAAOqD,EAAU,OAAQhK,EAAS,aAA1H,qBAIA,wBAAQuF,UAAU,oBAAlB,+BAOZ,yBAASA,UAAU,WAAnB,SACI,qBAAKA,UAAU,gBAAf,SACI,qBAAKA,UAAU,cAAf,SAEQuH,EAAWhE,KAAI,SAACC,EAAMC,GAClB,OACI,qBAAKzD,UAAU,UAAf,SACI,eAAC,IAAD,CAAM0D,GAAE,sBAAiBF,EAAK,IAA9B,UACI,qBAAKxD,UAAU,iBAAf,SACI,qBAAKY,IAAKC,IAAgB2C,EAAK,GAAIhD,IAAI,OAE3C,sBAAKR,UAAU,gBAAf,UACI,4BAAIwD,EAAK,KACT,+BAAM,qBAAK5C,IAAI,+BAA+BJ,IAAI,cAPhCiD,YAiBtD,cAACjB,EAAA,EAAD,QCoIGuF,EAlPQ,WACnB,IAAQzP,EAAUC,cAAVD,MACR,EAA8BE,qBAA9B,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA4CJ,mBAAS,MAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KAIA,EAA8BF,mBAAS,MAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAsCN,qBAAtC,mBAAOO,EAAP,KAAoBC,EAApB,KACA,EAA8BR,qBAA9B,mBAAgBS,GAAhB,WACA,EAAwBT,qBAAxB,mBACA,GADA,UACgCA,sBAAhC,mBAAOW,EAAP,KAAiBC,EAAjB,KACA,EAA8BZ,qBAA9B,mBAAOwP,EAAP,KAAgBC,EAAhB,KACA,EAAsCzP,qBAAtC,mBAAoBc,GAApB,WACA,EAAgCd,qBAAhC,mBAAiBgB,GAAjB,WACA,EAA8BhB,qBAA9B,mBAAgBiB,GAAhB,WACA,EAA4BjB,qBAA5B,mBAAeqB,GAAf,WACA,EAA8BrB,qBAA9B,mBAAgB0P,GAAhB,WACA,GAAsC1P,qBAAtC,qBAAoB2P,IAApB,aACA,GAA8B3P,qBAA9B,qBAAO+B,GAAP,MAAgBC,GAAhB,MAEAG,oBAAS,sBAAC,oCAAAC,EAAA,0DACO/B,IAAWJ,EADlB,iCAE2BoC,MAAM,uBAFjC,cAEIC,EAFJ,gBAGwCA,EAAeC,OAHvD,cAGIC,EAHJ,OAIIC,EAASD,EAEXjC,EAAc,IAAIF,EAAQqC,IAAIC,SAASF,EAAQG,IAAQzC,IAC3DK,EAAeD,GAPb,UASoBF,EAAQqC,IAAIkN,WAAW3P,GAT3C,QASIuP,EATJ,OAUFC,EAAWpP,EAAQiE,MAAMuL,QAAQL,EAAS,UAVxC,4CAYP,CAACrP,EAASE,EAASJ,IAEtBkC,oBAAS,sBAAC,sBAAAC,EAAA,sDACF/B,GAAWE,GACPT,IACA+C,GAAQ/C,GACRgD,GAAchD,GACdgQ,GAAOhQ,GACPkD,GAAQlD,GACRmD,GAAanD,GACboD,GAAMpD,IARR,2CAWP,CAACO,EAASE,IAEb,IAAM4C,GAAoB,uCAAG,WAAOC,GAAP,SAAAhB,EAAA,sDACrB/B,GACAE,EAAY8C,QAAQC,kBAAkBF,GAAIG,OACrCC,MAAK,SAACC,GACHhD,EAAWgD,MACZC,QALc,2CAAH,sDASpBb,GAAO,uCAAG,WAAOO,GAAP,SAAAhB,EAAA,sDACR/B,GACAE,EAAY8C,QAAQM,cAAcP,GAAIG,KAAK,CAAEK,KAAM3D,IAC9CuD,MAAK,SAACK,GACH6B,QAAQC,IAAI9B,EAAO,IACnBjD,EAAakD,OAAOD,EAAO,IAAO,MAClC/C,EAAiBgD,OAAOD,EAAO,IAAO,SAEzCH,QARG,2CAAH,sDAYPZ,GAAa,uCAAG,WAAOM,GAAP,SAAAhB,EAAA,sDACd/B,GACAE,EAAY8C,QAAQ6B,cAAc9B,GAAIG,KAAK,CAAEK,KAAM3D,IAC9CuD,MAAK,SAACsB,GAAW,IAAD,EACTK,EAAQ,CACR/B,GAAI0B,EAAM,GACVM,KAAK,UAACtB,OAAOgB,EAAM,WAAd,eAAoBjB,QAAS,GAAKC,OAAOgB,EAAM,IAAM,KAAwChB,OAAOgB,EAAM,IAAM,KACrHO,OAAQjC,GAEZpC,EAAYmE,MACbzB,QAVO,2CAAH,sDAebT,GAAY,uCAAG,WAAOgB,GAAP,SAAA7B,EAAA,sDACb/B,GACAE,EAAY8C,QAAQiC,cAAcrB,GAASV,KAAK,CAAEK,KAAM3D,IACnDuD,MAAK,SAAC+B,GACHtE,EAAWsE,MAEd7B,QANQ,2CAAH,sDAUZR,GAAK,uCAAG,WAAOe,GAAP,SAAA7B,EAAA,sDACN/B,GACAE,EAAY8C,QAAQ4C,cAAchC,GAASV,KAAK,CAAEK,KAAM3D,IACnDuD,MAAK,SAAC+B,GACHlE,EAAUkE,MAEb7B,QANC,2CAAH,sDAqBLoM,GAAM,uCAAG,WAAO1M,GAAP,SAAAhB,EAAA,sDACP/B,GACAE,EAAY8C,QAAQ+C,OAAOhD,GAAIG,KAAK,CAAEK,KAAM3D,IACvCuD,MAAK,SAAC+B,GACH,IAAIc,EAAM3B,KAAK4B,MAAMf,EAAS,OAC1BgB,EAAK7B,KAAK4B,OAAOf,EAAe,MAANc,GAAe,MACzC0J,EAAarL,KAAK4B,OAAOf,EAAe,MAANc,EAAmB,KAALE,GAAa,IACjEmJ,EAAW,CAAEtM,GAAIA,EAAIyF,EAAGxC,EAAKyC,EAAGvC,EAAIwC,EAAGgH,OACxCrM,QARA,2CAAH,sDAYNV,GAAO,uCAAG,WAAOI,GAAP,SAAAhB,EAAA,sDACR/B,GACAE,EAAY8C,QAAQ2D,eAAe5D,GAAIG,KAAK,CAAEK,KAAM3D,IAC/CuD,MAAK,SAAC+B,GACHvD,GAAWuD,GACXpC,GAAqBoC,EAAO,OAC7B7B,QANC,2CAAH,sDAWPuD,GAAO,uCAAG,sBAAA7E,EAAA,0FAAH,qDAsBb,OACI,sBAAKoF,UAAU,eAAf,UACI,cAACC,EAAA,EAAD,CAAQC,WA9JG,SAACC,GAChBzH,EAAkByH,IA6JkBrH,WAAYA,EAAYF,WAAYA,IACpE,yBAASoH,UAAU,+BAAnB,SACI,qBAAKA,UAAU,gBAAf,SACI,sBAAKA,UAAU,wBAAf,UACI,qBAAKA,UAAU,8BAAf,SACKzF,KAAY6F,IAAWC,SAASC,KAAKC,MAAMhG,GAAQ,IAAI,IACpD,uBAAOiG,IAAI,GAAGC,OAAK,EAACC,UAAQ,EAACC,MAAI,EAAjC,SACI,wBAAQC,IAAKC,IAAgBtG,GAAQ,OAEvCuG,IAAWT,SAASC,KAAKC,MAAMhG,GAAQ,IAAI,IAC7C,qBAAKqG,IAAKC,IAAgBtG,GAAQ,GAAIiG,IAAI,KACxCO,IAAWV,SAASC,KAAKC,MAAMhG,GAAQ,IAAI,IAC7C,uBAAOyG,MAAO,CAAEC,MAAO,OAASL,IAAKC,IAAgBtG,GAAQ,KAC3D,QAGV,sBAAKyF,UAAU,6BAAf,UACI,6CACA,oHACA,sBAAKA,UAAU,mCAAf,UACI,+BACI,4BACKzF,IAAWA,GAAQ,KAExB,gCACI,+BACI,qBAAKqG,IAAI,8BAA8BJ,IAAI,OAE/C,gDAKR,wBAAQR,UAAU,UAAlB,SACI,qBAAKY,IAAI,wCAAwCJ,IAAI,UAG7D,qBAAKR,UAAU,kCAAf,SACI,uBAAOiC,SAAU,SAACR,GAAD,OAAO0G,GAAe1G,EAAES,OAAO5E,QAAQuE,KAAK,OAAOuC,KAAK,OAAOtC,YAAY,QAGhG,sBAAK9B,UAAU,kCAAf,UACI,oDAGA,8BACI,+BACI,qBAAKY,IAAI,4BAA4BJ,IAAI,OAE5CrH,QAGT,sBAAK6G,UAAU,kCAAf,UACI,gDAGA,8BACI,+BACI,qBAAKY,IAAI,4BAA4BJ,IAAI,OAE5CwH,QAIT,wBAAQhI,UAAU,kBAAkBgB,MAAO,CAACG,aAAa,EAAGF,MAAM,QAASG,QAAS,WAAO3B,MAA3F,mCAWhB,cAAC+C,EAAA,EAAD,Q,SC7NGgG,EAdA,CACb,CAAEC,KAAM,IAAKC,UAAW,cAAC,EAAD,KACxB,CAAED,KAAM,UAAWC,UAAW,cAACC,EAAA,EAAD,KAC9B,CAAEF,KAAM,eAAgBC,UAAW,cAACE,EAAA,EAAD,KACnC,CAAEH,KAAM,QAASC,UAAW,cAACG,EAAD,KAC5B,CAAEJ,KAAM,WAAYC,UAAW,cAACI,EAAD,KAC/B,CAAEL,KAAM,cAAeC,UAAW,cAAC,EAAD,KAClC,CAAED,KAAM,cAAeC,UAAW,cAAC,EAAD,KAClC,CAAED,KAAM,eAAgBC,UAAW,cAAC,EAAD,KACnC,CAAED,KAAM,kBAAmBC,UAAW,cAAC,EAAD,KACtC,CAAED,KAAM,qBAAsBC,UAAW,cAAC,EAAD,KACzC,CAAED,KAAM,YAAaC,UAAW,cAACK,EAAA,EAAD,MCHnBC,MAbf,WAEI,OACI,cAAC,IAAD,UAEIR,EAAOjF,KAAI,SAACtH,EAAKmJ,GAAN,OACP,cAAC,IAAD,CAAO6D,SAAU,kBAAM7K,OAAO8K,SAAS,EAAG,IAAIC,OAAO,EAAMV,KAAMxM,EAAKwM,KAAMW,QAASnN,EAAKyM,WAAgBtD,SCT3G,SAASiE,IACtB,IAAQC,EAAaC,cAAbD,SAMR,OAJA3O,qBAAU,WACRyD,OAAO8K,SAAS,EAAG,KAClB,CAACI,IAEG,KCJTE,IAASC,OACP,eAAC,IAAD,WACE,cAACJ,EAAD,IACA,cAAC,EAAD,OAEFK,SAASC,eAAe,U,gCCX1B,sXAAO,IAAMpH,EAAU,6CACV1B,EAAgB,uBAChBT,EAAa,CAAC,YAAa,YAAa,cACxCU,EAAa,CAAC,aAAc,YAAa,YAAa,YAAa,aACnEC,EAAa,CAAC,cAEd3F,EAAU,CACnB,GAAI,6CACJ,IAAK,6CACL,MAAO,6CACP,IAAK,8CAGIwO,EAAe,IACfC,EAAe,IACfC,EAAY,GACZC,EAAiB,MAEjBC,EAAa,CACtB,GAAI,CACArR,QAAS,OACTsR,UAAW,qBACXC,eAAgB,CACZ9F,KAAM,MACN+F,OAAQ,MACRC,SAAU,IAEdC,QAAS,CAAC,qCACVC,kBAAmB,CAAC,yBAGxB,IAAK,CACD3R,QAAS,QACTsR,UAAW,kBACXC,eAAgB,CACZ9F,KAAM,MACN+F,OAAQ,MACRC,SAAU,IAEdC,QAAS,CAAC,iCACVC,kBAAmB,CAAC,gCAGxB,MAAO,CACH3R,QAAS,SACTsR,UAAW,eACXC,eAAgB,CACZ9F,KAAM,MACN+F,OAAQ,MACRC,SAAU,IAEdC,QAAS,CAAC,IACVC,kBAAmB,CAAC,yBAGxB,IAAK,CACD3R,QAAS,QACTsR,UAAW,kBACXC,eAAgB,CACZ9F,KAAM,MACN+F,OAAQ,MACRC,SAAU,IAEdC,QAAS,CAAC,sCACVC,kBAAmB,CAAC,yC,iJC1Df3N,EAAW,uCAAG,kCAAA/B,EAAA,sDAEjB2P,EAAe5D,aAAaM,QAAQ,oBAFnB,KAQfsD,EARe,cASdV,IATc,SAgBdD,IAhBc,UAuBdG,IAvBc,UA6BdD,IA7Bc,0BAWfU,EAAW,IAAIC,WAAS,kCAXT,SAYSD,EAAS7N,cAZlB,8CAsCf+N,EAtCe,OAuCE1N,YAAgBC,WAAW0N,SAAO7N,MAAM8N,YAAYF,EAAiB,IAAMxN,KAAKC,IAAI,GAAI,IAvC1F,oCAkBfqN,EAAW,IAAIC,WAAS,iCAlBT,UAmBSD,EAAS7N,cAnBlB,eAwBfkO,EAAO,IAAIC,IAAK,IAAIA,IAAKC,UAAUC,aAAahB,IAAWD,KAAgBM,UAxB5D,UAyBSQ,EAAK3P,IAAIyB,cAzBlB,eA8BfkO,EAAO,IAAIC,IAAK,IAAIA,IAAKC,UAAUC,aAAahB,IAAWF,KAAWO,UA9BvD,UA+BSQ,EAAK3P,IAAIyB,cA/BlB,eAqCf6N,EAAW,IAAIC,WAAS,kCArCT,UAsCSD,EAAS7N,cAtClB,4CAAH,sD,wJCOlBsO,EAAO,SAAWC,EAAO9O,KAAK+O,gEAAiCC,SAAS,UAExEC,EAAaC,iBAAO,CACtBC,KAAM,iBACNC,KAAM,KACNC,SAAU,QACVC,QAAS,CACLC,cAAeV,GAEnBW,QAAQ,OAmKGjD,IAhKU,WACrB,MAA8BnQ,qBAA9B,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA4CJ,mBAAS,MAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAA0BF,qBAA1B,mBAAcqT,GAAd,WAIA,EAA8BrT,mBAAS,MAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KAEA,EAA4BN,qBAA5B,mBAAOsT,EAAP,KAAeC,EAAf,KACA,EAAwCvT,qBAAxC,mBAAOwT,EAAP,KAAqBC,EAArB,KACA,EAAwBzT,mBAAS,CAC7B0T,eAAgB,GAAIC,YAAa,GAAIC,WAAY,GAAIC,sBAAuB,GAAIC,UAAW,MAD/F,mBAAOrQ,EAAP,KAAasQ,EAAb,KAGA,EAAwB/T,oBAAS,GAAjC,mBAEA,GAFA,UAEgCA,sBAAhC,mBAAiBgU,GAAjB,WACA,EAA2BhU,oBAAS,GAApC,mBACA,GADA,UACwCA,oBAAS,IAAjD,mBAAOiU,EAAP,KAAqBC,EAArB,KACA,EAAsClU,qBAAtC,mBAAOO,EAAP,KAAoBC,GAApB,KACA,GAA8BR,mBAAS,IAAvC,qBAAOmU,GAAP,MAAgBC,GAAhB,MAEMnS,GAAWC,cAEjBC,oBAAS,sBAAC,kCAAAC,EAAA,2DACFjC,GAAWE,GAAWJ,GADpB,iCAE2BoC,MAAM,uBAFjC,cAEIC,EAFJ,gBAGwCA,EAAeC,OAHvD,OAGIC,EAHJ,OAIIC,EAASD,EAEXjC,EAAc,IAAIF,EAAQqC,IAAIC,SAASF,EAAQG,IAAQzC,IAC3DK,GAAeD,GAPb,4CASP,CAACJ,EAASE,EAASJ,IAEtB,IA0BMoU,GAAM,uCAAG,WAAOC,GAAP,eAAAlS,EAAA,yDAEXkS,EAAOpL,kBAEJ+K,EAJQ,qDAMP5T,EANO,wBAOP+T,GAAW,IACXF,GAAgB,GART,kBAUwBrB,EAAW0B,IAAIjB,GAVvC,OAUGkB,EAVH,OAWHC,GAAiBD,EAAavE,MAX3B,kDAaHvK,QAAQC,IAAI,eAAZ,MACAyO,GAAW,mBACXF,GAAgB,GAfb,gCAmBPE,GAAW,qBACXF,GAAgB,GApBT,0DAAH,sDAwBNQ,GAAoB,uCAAG,WAAOC,GAAP,SAAAvS,EAAA,sEACZ7B,EAAY8C,QAAQuR,cAAcD,GAAUpR,OADhC,mFAAH,sDAIpBkR,GAAgB,uCAAG,WAAOE,GAAP,eAAAvS,EAAA,0DACjB/B,EADiB,iCAGaqU,GAAqBC,GAHlC,UAIM,GAJN,8BAKbT,GAAgB,GAChBE,GAAW,kCANE,mBAON,GAPM,cAUjBF,GAAgB,GAVC,UAWY/P,cAXZ,QAWXC,EAXW,OAajB7D,EAAY8C,QAAQwR,iBAAiBpR,EAAKiQ,eAAgBjQ,EAAKkQ,YAAalQ,EAAKmQ,WAAYnQ,EAAKoQ,sBAAuBc,EAAU7G,SAASrK,EAAKqQ,YAAYjP,KAAK,CAAEjB,KAAM3D,EAAgB8E,SAAUX,IACnMZ,MAAK,SAAC+B,GACHG,QAAQC,IAAIJ,GACZ6O,GAAW,IACXF,GAAgB,GAChBjS,GAAS,sBACVyB,OAAM,SAACuB,GACNmP,GAAW,IACXF,GAAgB,MArBH,4CAAH,sDA0BtB,OACI,sBAAK1M,UAAU,UAAf,UACI,cAAC,IAAD,CAAQE,WAjHG,SAACC,GAChBzH,EAAkByH,IAgHkBrH,WAAYA,EAAYF,WAAYA,IACpE,yBAASoH,UAAU,+BAAnB,SACI,qBAAKA,UAAU,gBAAf,SACI,sBAAKA,UAAU,yBAAf,UACI,qBAAKA,UAAU,+BAAf,SACI,qBAAKA,UAAU,aAAf,SACKgM,EAAe,qBAAKpL,IAAKoL,EAAcxL,IAAI,KAAQ,qBAAKI,IAAI,6BAA6BI,MAAO,CAAEsM,UAAW,UAAWrM,MAAO,cAGxI,uBAAMjB,UAAU,8BAA8BwB,SAAUqL,GAAQ7L,MAAO,CAACuM,cAAe,IAAvF,UACI,sBAAKvN,UAAU,gCAAf,UACI,wBAAQA,UAAU,kBAAlB,+BACA,wBAAQA,UAAU,iBAAlB,SACI,6DAGR,sBAAKA,UAAU,6BAAf,UACI,uEACA,sBAAKA,UAAU,mCAAf,UACA,uBAAO6B,KAAK,OAAOuC,KAAK,KAAKxI,GAAG,GAAGqG,SArG3C,SAACR,GAAO,IAAD,UAEvB,GADAmL,GAAW,IACqB,gBAA5B,UAAAnL,EAAES,OAAOsL,MAAM,UAAf,eAAmB3L,OAAqD,eAA5B,UAAAJ,EAAES,OAAOsL,MAAM,UAAf,eAAmB3L,OAAoD,eAA5B,UAAAJ,EAAES,OAAOsL,MAAM,UAAf,eAAmB3L,OAAoD,eAA5B,UAAAJ,EAAES,OAAOsL,MAAM,UAAf,eAAmB3L,OAAoD,eAA5B,UAAAJ,EAAES,OAAOsL,MAAM,UAAf,eAAmB3L,MAAsB,CAAC,IAAD,EACtN2K,EAAW,UAAC/K,EAAES,OAAOsL,MAAM,UAAhB,aAAC,EAAmB3L,MAC/BgK,EAASpK,EAAES,OAAOsL,MAAM,IACxB,IAAMC,EAAOhM,EAAES,OAAOsL,MAAM,GACtB/D,EAAS,IAAIiE,WACnBjE,EAAOkE,OAAS,WACc,IAAtBlE,EAAOmE,YACP3B,EAAgBxC,EAAO1L,QAE3B,IAAM8P,EAAS,IAAIzP,OAAOsP,WAC1BG,EAAOC,kBAAkBL,GACzBI,EAAOE,UAAY,WACf,IAAMjC,EAASZ,EAAO9O,KAAKyR,EAAO9P,QAClCgO,EAAUD,KAGdrK,EAAES,OAAOsL,MAAM,IACf/D,EAAOuE,cAAcvM,EAAES,OAAOsL,MAAM,SAGxCjO,MAAM,gCAgFc,+BAAM,qBAAKqB,IAAI,wCAAwCJ,IAAI,OAC3D,oDAGJ,sBAAKR,UAAU,+BAAf,UACI,uBAAO6B,KAAK,OAAOC,YAAY,kBAAkBG,SAAU,SAACR,GAAD,OAAO8K,EAAQ,2BAAKtQ,GAAN,IAAYiQ,eAAgBzK,EAAES,OAAO5E,YAC9G,0BAAUwE,YAAY,cAAcG,SAAU,SAACR,GAAD,OAAO8K,EAAQ,2BAAKtQ,GAAN,IAAYoQ,sBAAuB5K,EAAES,OAAO5E,YACxG,sBAAK0C,UAAU,oCAAf,UACI,uBAAO6B,KAAK,OAAOC,YAAY,eAAeG,SAAU,SAACR,GAAD,OAAO8K,EAAQ,2BAAKtQ,GAAN,IAAYkQ,YAAa1K,EAAES,OAAO5E,YACxG,uBAAOuE,KAAK,OAAOC,YAAY,UAAUG,SAAU,SAACR,GAAD,OAAO8K,EAAQ,2BAAKtQ,GAAN,IAAYmQ,WAAY3K,EAAES,OAAO5E,kBAG1G,yBAAQ0C,UAAU,kBAAlB,+BAAuDyM,GAAgB,mBAAGzM,UAAU,0CACpF,mBAAGgB,MAAO,CAACiN,MAAM,MAAOC,SAAS,WAAYC,OAAO,IAApD,SAA0DxB,eAK1E,cAAC,IAAD,U,gMCtKN1B,EAAO,SAAWC,EAAO9O,KAAK+O,gEAAiCC,SAAS,UAExEC,EAAaC,iBAAO,CACtBC,KAAM,iBACNC,KAAM,KACNC,SAAU,QACVC,QAAS,CACLC,cAAeV,GAEnBW,QAAQ,OAsUGhD,IAnUG,WAEd,IAAQ9I,EAAUvH,cAAVuH,MACR,EAA8BtH,qBAA9B,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA4CJ,mBAAS,MAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAA0BF,qBAA1B,mBAAO4V,EAAP,KAAcvC,EAAd,KAIA,EAA8BrT,mBAAS,MAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KAEA,EAA4BN,qBAA5B,mBAAOsT,EAAP,KAAeC,EAAf,KACA,EAAwCvT,qBAAxC,mBAAOwT,EAAP,KAAqBC,EAArB,KACA,EAAwBzT,mBAAS,CAC7B6V,QAAS,GAAIC,UAAW,GAAIC,YAAa,GAAIpP,MAAO,GAAKqP,QAAS,MADtE,mBAAOvS,EAAP,KAAasQ,EAAb,KAGA,EAAwB/T,oBAAS,GAAjC,mBAAaU,GAAb,WAEA,EAAgCV,qBAAhC,mBAAOiW,EAAP,KAAiBjC,EAAjB,KACA,EAA2BhU,oBAAS,GAApC,mBAAekW,GAAf,WACA,GAAwClW,oBAAS,GAAjD,qBAAOiU,GAAP,MAAqBC,GAArB,MACA,GAAkClU,oBAAS,GAA3C,qBAAOmW,GAAP,MAAkBC,GAAlB,MACA,GAAsCpW,qBAAtC,qBAAOO,GAAP,MAAoBC,GAApB,MACA,GAA8BR,mBAAS,IAAvC,qBAAOmU,GAAP,MAAgBC,GAAhB,MAEIiC,IAAiB,EAErBlU,oBAAS,sBAAC,kCAAAC,EAAA,2DACFjC,GAAWE,GAAWJ,GADpB,iCAE2BoC,MAAM,uBAFjC,cAEIC,EAFJ,gBAGwCA,EAAeC,OAHvD,OAGIC,EAHJ,OAIIC,EAASD,EAEXjC,EAAc,IAAIF,EAAQqC,IAAIC,SAASF,EAAQG,IAAQzC,IAC3DK,GAAeD,GAPb,4CASP,CAACJ,EAASE,EAASJ,IAEtB,IA0BMqW,GAAwB,WAE1B,IAAK7S,EAAKoS,QAEN,OADAzB,GAAW,0BACJ,EAKX,GAHIA,GAAW,KAGV3Q,EAAKqS,UAEN,OADA1B,GAAW,4BACJ,EAKX,GAHIA,GAAW,KAGV3Q,EAAKsS,YAEN,OADA3B,GAAW,iCACJ,EAKX,GAHIA,GAAW,KAGVwB,EAED,OADAxB,GAAW,4BACJ,EAEPA,GAAW,IAGf,IAAImC,GAAa,EACbC,GAAc,EAkBlB,OAhBIH,IAEIE,KADA9S,EAAKkD,OAAS7C,OAAOL,EAAKkD,OAAS,GAOnC6P,KADA/S,EAAKuS,SAAWlS,OAAOL,EAAKuS,SAAW,IAM3C5B,GAAW,IAGVmC,EAKAC,OAAL,GACIpC,GAAW,gCACJ,IANPA,GAAW,2BACJ,IASTC,GAAM,uCAAG,WAAOC,GAAP,eAAAlS,EAAA,yDAEXkS,EAAOpL,kBAEJ+K,GAJQ,qDAMoB,IAA5BqC,KANQ,uBAOP5V,GAAQ,GAPD,6BAYP0V,KADAC,KAMAhW,EAjBO,wBAkBP6V,GAAS,GACThC,IAAgB,GAnBT,oBAqBwBrB,EAAW0B,IAAIjB,GArBvC,QAqBGkB,EArBH,OAsBC6B,IACAD,IAAa,GACbK,GAAajC,EAAavE,QAE1BmG,IAAa,GACbM,GAAQlC,EAAavE,OA3BtB,mDA8BHvK,QAAQC,IAAI,eAAZ,MACAuQ,GAAS,GACThC,IAAgB,GAhCb,gCAmCPgC,GAAS,GACThC,IAAgB,GApCT,2DAAH,sDAwCNQ,GAAoB,uCAAG,WAAOC,GAAP,SAAAvS,EAAA,sEACZ7B,GAAY8C,QAAQuR,cAAcD,GAAUpR,OADhC,mFAAH,sDAIpBmT,GAAO,uCAAG,WAAO/B,GAAP,mBAAAvS,EAAA,0DAER/B,EAFQ,iCAGsBqU,GAAqBC,GAH3C,UAGFgC,EAHE,OAIRjR,QAAQC,IAAIgR,GACW,GAAnBA,EALI,uBAMJzC,IAAgB,GAChBE,GAAW,2BAPP,mBAQG,GARH,cAWRF,IAAgB,GACV0C,EAAM9O,KAAKuG,UAAU,CAAC5K,EAAKsS,YAAaE,IAZtC,UAaqB9R,cAbrB,QAaFC,EAbE,OAeR7D,GAAY8C,QAAQyP,OAAOxL,EAAOrH,EAAgB0U,EAAUlR,EAAKoS,QAASpS,EAAKqS,UAAW,EAAGc,GAAK/R,KAAK,CAAEjB,KAAM3D,EAAgB8E,SAAUX,IACxIZ,MAAK,SAAC+B,GACHG,QAAQC,IAAIJ,GACK,KAAd9B,EAAKkD,MACJkQ,KAEA3C,IAAgB,MAErBxQ,OAAM,SAACuB,GACNiP,IAAgB,MAxBZ,4CAAH,sDA6BP2C,GAAQ,uCAAG,sBAAAzU,EAAA,sDACT/B,GACAE,GAAY8C,QAAQyT,cAAcvT,OACjCC,MAAK,SAACJ,GACHsD,GAAUtD,MAEbM,OAAM,WACHwQ,IAAgB,MAPX,2CAAH,qDAYRxN,GAAS,uCAAG,WAAOzC,GAAP,iBAAA7B,EAAA,0DACV/B,EADU,uBAEN6D,EAAkC,KAAzBO,WAAWhB,EAAKkD,OAFnB,SAGmBxC,cAHnB,OAGJC,EAHI,OAIV7D,GAAY8C,QAAQwD,WAAW5C,EAASC,GAAQW,KAAK,CAAEjB,KAAM3D,EAAgB8E,SAAUX,IACtFZ,MAAK,SAACK,IACmB,IAAlBA,EAAOiD,QAIPC,MAAM,UAHNmN,IAAgB,MAOvBxQ,OAAM,SAACuB,GACJiP,IAAgB,MAfV,2CAAH,sDAoBTuC,GAAY,uCAAG,WAAOM,GAAP,mBAAA3U,EAAA,sDACb/B,IACAK,GAAQ,GACK,EAEPkW,EAAM9O,KAAKuG,UAAU,CAAC5K,EAAKsS,YAAaE,IACxCe,EAASvT,EAAKuS,QAEhB9R,EAAS,EACTT,EAAKkD,QACLzC,EAASiO,SAAO7N,MAAM8N,YAAYD,SAAO7N,MAAM2S,WAAWxT,EAAKkD,MAAMiM,WAAY,IAAK,IAE1FrS,GAAY8C,QAAQ6T,UAAU3T,KAAK,CAAEK,KAAM3D,IAC1CuD,KADD,uCACM,WAAOsB,GAAP,mBAAA1C,EAAA,6DACE8U,EAAUpS,EACdoS,EAAU/E,SAAO7N,MAAM8N,YAAY+E,IAAUvT,KAAKsT,GAAU,GAExDE,EAAe3S,WAAWyS,GAAWF,EACzCI,EAAejF,SAAO7N,MAAM8N,YAAYD,SAAO7N,MAAM2S,WAAWG,EAAaxE,WAAY,GAAI,GAL3F,SAO2BzO,cAP3B,OAOIC,EAPJ,OASF7D,GAAY8C,QAAQgU,YAAY/P,EAAOrH,EAAgB8W,EAAUtT,EAAKoS,QAASpS,EAAKqS,UAnB3E,EAmB8Fc,EAAKI,EAAQ9S,GAAQW,KAAK,CAAEjB,KAAM3D,EAAgB6E,MAAOsS,EAAcrS,SAAUX,IACvLZ,MAAK,SAAC+B,IACmB,IAAlBA,EAAOuB,QAEPpG,GAAQ,GACRwT,IAAgB,KAEhBnN,MAAM,UACNmN,IAAgB,OAErBxQ,OAAM,SAACuB,GACNvE,GAAQ,GACRwT,IAAgB,MArBlB,2CADN,uDAwBGxQ,OAAM,WACLwQ,IAAgB,OArCP,2CAAH,sDA0ClB,OACI,sBAAK1M,UAAU,UAAf,UACI,cAAC,IAAD,CAAQE,WA3QG,SAACC,GAChBzH,EAAkByH,IA0QkBrH,WAAYA,EAAYF,WAAYA,IACpE,yBAASoH,UAAU,+BAAnB,SACI,qBAAKA,UAAU,gBAAf,SACI,sBAAKA,UAAU,yBAAf,UACI,qBAAKA,UAAU,+BAAf,SACI,qBAAKA,UAAU,aAAf,SACKgM,EAAe,qBAAKpL,IAAKoL,EAAcxL,IAAI,KAAQ,qBAAKI,IAAI,6BAA6BI,MAAO,CAAEsM,UAAW,UAAWrM,MAAO,cAGxI,sBAAKjB,UAAU,8BAAf,UACI,sBAAKA,UAAU,gCAAf,UACI,wBAAQA,UAAU,kBAAlB,wBACA,wBAAQA,UAAU,iBAAlB,SACI,sDAGR,sBAAKA,UAAU,6BAAf,UACI,uEACA,sBAAKA,UAAU,mCAAf,UACA,uBAAO6B,KAAK,OAAOuC,KAAK,KAAKxI,GAAG,GAAGqG,SA9P3C,SAACR,GAAO,IAAD,gBAEvB,GADAmL,GAAW,IACqB,eAA5B,UAAAnL,EAAES,OAAOsL,MAAM,UAAf,eAAmB3L,OAAoD,gBAA5B,UAAAJ,EAAES,OAAOsL,MAAM,UAAf,eAAmB3L,OAAqD,gBAA5B,UAAAJ,EAAES,OAAOsL,MAAM,UAAf,eAAmB3L,OAAqD,gBAA5B,UAAAJ,EAAES,OAAOsL,MAAM,UAAf,eAAmB3L,OAAqD,eAA5B,UAAAJ,EAAES,OAAOsL,MAAM,UAAf,eAAmB3L,OAAoD,eAA5B,UAAAJ,EAAES,OAAOsL,MAAM,UAAf,eAAmB3L,OAAoD,eAA5B,UAAAJ,EAAES,OAAOsL,MAAM,UAAf,eAAmB3L,OAAoD,eAA5B,UAAAJ,EAAES,OAAOsL,MAAM,UAAf,eAAmB3L,MAAsB,CAAC,IAAD,EACzV2K,EAAW,UAAC/K,EAAES,OAAOsL,MAAM,UAAhB,aAAC,EAAmB3L,MAC/BgK,EAASpK,EAAES,OAAOsL,MAAM,IACxB,IAAMC,EAAOhM,EAAES,OAAOsL,MAAM,GACtB/D,EAAS,IAAIiE,WACnBjE,EAAOkE,OAAS,WACc,IAAtBlE,EAAOmE,YACP3B,EAAgBxC,EAAO1L,QAE3B,IAAM8P,EAAS,IAAIzP,OAAOsP,WAC1BG,EAAOC,kBAAkBL,GACzBI,EAAOE,UAAY,WACf,IAAMjC,EAASZ,EAAO9O,KAAKyR,EAAO9P,QAClCgO,EAAUD,KAGdrK,EAAES,OAAOsL,MAAM,IACf/D,EAAOuE,cAAcvM,EAAES,OAAOsL,MAAM,SAGxCjO,MAAM,gCAyOc,+BAAM,qBAAKqB,IAAI,wCAAwCJ,IAAI,OAC3D,oDAGJ,sBAAKR,UAAU,+BAA+BgB,MAAO,CAAC8O,aAAa,GAAnE,UACI,sBAAK9P,UAAU,oCAAf,UACI,uBAAO6B,KAAK,OAAOC,YAAY,WAAWG,SAAU,SAACR,GAAD,OAAO8K,EAAQ,2BAAKtQ,GAAN,IAAYoS,QAAS5M,EAAES,OAAO5E,YAChG,uBAAOuE,KAAK,OAAOC,YAAY,aAAaG,SAAU,SAACR,GAAD,OAAO8K,EAAQ,2BAAKtQ,GAAN,IAAYqS,UAAW7M,EAAES,OAAO5E,eAExG,0BAAUwE,YAAY,cAAcG,SAAU,SAACR,GAAD,OAAO8K,EAAQ,2BAAKtQ,GAAN,IAAYsS,YAAa9M,EAAES,OAAO5E,UAAU0D,MAAO,CAACsB,UAAU,KAC1H,uBAAOT,KAAK,SAASC,YAAY,wCAAwCG,SAAU,SAACR,GAAD,OAAO8K,EAAQ,2BAAKtQ,GAAN,IAAYkD,MAAOsC,EAAES,OAAO5E,eAEjI,yBAAQ0C,UAAU,kBAAkBoB,QAAS,SAACK,GAAMoN,IAAiB,EAAOhC,GAAOpL,IAAnF,mBAAgGkN,IAAalC,IAAgB,mBAAGzM,UAAU,0CAE1I,qBAAKA,UAAU,+BAA+BgB,MAAO,CAACsB,UAAU,GAAhE,SACI,sBAAKtC,UAAU,oCAAf,UACI,uBAAO6B,KAAK,OAAOC,YAAY,iBAAiBG,SAAU,SAACR,GAAD,OAAO8K,EAAQ,2BAAKtQ,GAAN,IAAYuS,QAAS/M,EAAES,OAAO5E,YACtG,yBAAQ0C,UAAU,kBAAmBoB,QAAS,SAACK,GAAMoN,IAAiB,EAAMhC,GAAOpL,IAAnF,4BAAyGkN,IAAalC,IAAgB,mBAAGzM,UAAU,+CAG3J,mBAAGgB,MAAO,CAACiN,MAAM,MAAOC,SAAS,WAAYC,OAAO,IAApD,SAA0DxB,eAK1E,cAAC,IAAD,U,gMC1UN1B,EAAO,SAAWC,EAAO9O,KAAK+O,gEAAiCC,SAAS,UAE3DE,iBAAO,CACtBC,KAAM,iBACNC,KAAM,KACNC,SAAU,QACVC,QAAS,CACLC,cAAeV,GAEnBW,QAAQ,OA0SG7C,IAvSE,WAEKxQ,cAAVuH,MAAR,IACA,EAA8BtH,qBAA9B,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA4CJ,mBAAS,MAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAA0BF,qBAA1B,mBAAcqT,GAAd,WAIA,EAA8BrT,mBAAS,MAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KAEA,EAA4BN,qBAA5B,mBACA,GADA,UACwCA,sBAAxC,mBAAqByT,GAArB,WACA,EAAwBzT,mBAAS,CAC7B6V,QAAS,sBAAuBC,UAAW,QAASC,YAAa,qBAAsBpP,MAAO,IAAMqP,QAAS,MADjH,mBAAOvS,EAAP,KAGA,GAHA,KAGwBzD,oBAAS,IAAjC,mBAAaU,GAAb,WAEA,EAAgCV,qBAAhC,mBAAOiW,EAAP,KAAiBjC,EAAjB,KACA,EAA2BhU,oBAAS,GAApC,mBAAekW,GAAf,WACA,EAAwClW,oBAAS,GAAjD,mBAAOiU,EAAP,KAAqBC,EAArB,KACA,EAAsClU,qBAAtC,mBAAOO,EAAP,KAAoBC,EAApB,KACA,GAA8BR,qBAA9B,qBAAOwP,GAAP,MAAgBC,GAAhB,MACA,GAA8BzP,mBAAS,IAAvC,qBAAOmU,GAAP,MAAgBC,GAAhB,MACA,GAA4BpU,mBAAS,IAArC,qBAAOuX,GAAP,MAAeC,GAAf,MACA,GAAoCxX,oBAAS,GAA7C,qBAAOyX,GAAP,MAAmBC,GAAnB,MAEAvV,oBAAS,sBAAC,oCAAAC,EAAA,0DACO/B,IAAWJ,EADlB,iCAE2BoC,MAAM,uBAFjC,cAEIC,EAFJ,gBAGwCA,EAAeC,OAHvD,cAGIC,EAHJ,OAIIC,EAASD,EAEXjC,EAAc,IAAIF,EAAQqC,IAAIC,SAASF,EAAQG,IAAQzC,IAC3DK,EAAeD,GAPb,UASoBF,EAAQqC,IAAIkN,WAAW3P,GAT3C,QASIuP,EATJ,OAUFC,GAAWpP,EAAQiE,MAAMuL,QAAQL,EAAS,UAVxC,4CAYP,CAACrP,EAASE,EAASJ,IAEtBkC,oBAAS,sBAAC,sBAAAC,EAAA,sDACNuV,KADM,2CAEP,IAEH,IAAMC,GAAmB,iCACnBD,GAAc,WAChBtV,MAAMuV,GAAkB,CACpBC,OAAQ,QAEXrU,KAHD,uCAGM,WAAMsU,GAAN,iBAAA1V,EAAA,sEACiB0V,EAASC,OAD1B,OACIA,EADJ,OAEI9C,EAAO,IAAI+C,KAAK,CAACD,GAAO,gBAAiB,CAAE1O,KAAM,cACvD3D,QAAQC,IAAI,iCAAiCsP,GAC7C5B,EAAS4B,GACTxB,EAAgBmE,IAChB5D,EAAY,aANV,2CAHN,wDAcEsC,GAAwB,WAE1B,GADA5Q,QAAQC,IAAI,cAAe6J,IACvBA,GAAUnP,EAAQiE,MAAMuL,QAAQ,oBAAqB,SAErD,OADAuE,GAAW,gBACJ,GAKTC,GAAM,uCAAG,WAAOC,GAAP,SAAAlS,EAAA,yDAEXkS,EAAOpL,kBAEJ+K,EAJQ,oDAKXyD,IAAc,IAEiB,IAA5BpB,KAPQ,uBAQP5V,GAAQ,GARD,0BAYX,GAAIL,EAAS,CACT6V,GAAS,GACThC,GAAgB,GAChB,IAGIuC,GAAa,kDACf,MAAOwB,GACLvS,QAAQC,IAAI,eAAgBsS,GAC5B/B,GAAS,GACThC,GAAgB,SAGpBgC,GAAS,GACThC,GAAgB,GA1BT,2CAAH,sDA8BNuC,GAAY,uCAAG,WAAOM,GAAP,mBAAA3U,EAAA,sDACb/B,IACAK,GAAQ,GACK,EAEPkW,EAAM9O,KAAKuG,UAAU,CAAC5K,EAAKsS,YAAaE,IACxCe,EAASvT,EAAKuS,QAEhB9R,EAAS,EACTT,EAAKkD,QACLzC,EAASiO,SAAO7N,MAAM8N,YAAYD,SAAO7N,MAAM2S,WAAWxT,EAAKkD,MAAMiM,WAAY,IAAK,IAE1FrS,EAAY8C,QAAQ6T,UAAU3T,KAAK,CAAEK,KAAM3D,IAC1CuD,KADD,uCACM,WAAOsB,GAAP,mBAAA1C,EAAA,6DACE8U,EAAUpS,EACdoS,EAAU/E,SAAO7N,MAAM8N,YAAY+E,IAAUvT,KAAKsT,GAAU,GAExDE,EAAe3S,WAAWyS,GAAWF,EACzCI,EAAejF,SAAO7N,MAAM8N,YAAYD,SAAO7N,MAAM2S,WAAWG,EAAaxE,WAAY,GAAI,GAL3F,SAO2BzO,cAP3B,OAOIC,EAPJ,OASF7D,EAAY8C,QAAQgU,YAAY,IAAKpX,EAAgB8W,EAAUtT,EAAKoS,QAASpS,EAAKqS,UAnBzE,EAmB4Fc,EAAKI,EAAQ9S,GAAQW,KAAK,CAAEjB,KAAM3D,EAAgB6E,MAAOsS,EAAcrS,SAAUX,IACrLZ,MAAK,SAAC+B,IACmB,IAAlBA,EAAOuB,QAEP0Q,GAAUjS,EAAO2S,iBAEjBxX,GAAQ,GACRwT,GAAgB,GAChBwD,IAAc,KAEd3Q,MAAM,UACNmN,GAAgB,OAErBxQ,OAAM,SAACuB,GACNS,QAAQC,IAAIV,GACZvE,GAAQ,GACRwT,GAAgB,MAzBlB,2CADN,uDA4BGxQ,OAAM,SAACuB,GACNS,QAAQC,IAAIV,GACZiP,GAAgB,OA1CP,2CAAH,sDA+ClB,OACI,qCACI,cAAC,IAAD,CAAQxM,WA/IG,SAACC,GAChBzH,EAAkByH,IA8IkBrH,WAAYA,EAAYF,WAAYA,IACpE,yBAASoH,UAAU,gBAAnB,SACI,sBAAKA,UAAU,gBAAf,UACA,qBAAKA,UAAU,WAAf,SACI,sBAAMA,UAAU,WAEpB,qBAAKA,UAAU,cAAf,SACI,sBAAKA,UAAU,sBAAf,UACA,yEACA,sBAAKA,UAAU,qBAAf,UACI,qBAAKY,IAAI,qCAAqCJ,IAAI,KAClD,4BAEJ,qHAIA,kDAEI,mBACA2D,KAAK,uBACLnE,UAAU,oBACVkC,OAAO,SAHP,sBAFJ,kGAWA,sBAAKlC,UAAU,4BAAf,UACI,yBAAQA,UAAU,6BAAlB,UACI,sBAAMA,UAAU,WAAhB,iCACA,qBAAKY,IAAI,2CAEb,0EAMZ,yBAASZ,UAAU,OAAnB,SACI,qBAAKA,UAAU,gBAAf,SACI,sBAAKA,UAAU,cAAf,UACI,qBAAKA,UAAU,oBAAf,SACA,qBAAIA,UAAU,KAAd,qBACY,qCAAO,0BADnB,gBAIA,sBAAKA,UAAU,mBAAf,UACA,oBAAGA,UAAU,KAAb,6EAEI,wBAAQA,UAAU,UAAlB,yDAIJ,oBAAGA,UAAU,KAAb,6FAGI,sBAAMA,UAAU,UAAhB,8DAMhB,yBAASA,UAAU,MAAnB,SACI,qBAAKA,UAAU,gBAAf,SACI,sBAAKA,UAAU,aAAf,UACI,qBAAKA,UAAU,UAAf,SACA,sBAAMA,UAAU,WAEhB,qBAAKA,UAAU,oBAAf,SACA,qBAAKA,UAAU,aAAagB,MAAO,CAACuM,cAAc,GAAlD,SAEI,uBAAO/M,IAAI,GAAGC,OAAK,EAACC,UAAQ,EAACC,MAAI,EAACK,MAAO,CAACsM,UAAU,UAAWnM,aAAa,UAAW2O,aAAa,GAApG,SACI,wBAAQlP,IAAI,yCAIpB,sBAAKZ,UAAU,oBAAf,UACA,oDACA,sBAAMA,UAAU,QAAhB,oBACA,eAAC,IAAD,CAAM0D,GAAG,IAAI1D,UAAU,QAAvB,UACI,qBAAKY,IAAI,8BAA8BJ,IAAI,KAD/C,UAIA,mBAAGR,UAAU,MAAb,sFAKA,qBAAIA,UAAU,kBAAd,UACA,qBAAIA,UAAU,uBAAd,UACI,yCACA,6CAEJ,qBAAIA,UAAU,uBAAd,UACI,4CACA,sBAAKA,UAAU,6BAAf,UACA,iDACA,kDAGJ,qBAAIA,UAAU,+BAAd,UACI,4CACA,sBAAKA,UAAU,6BAAf,UACA,iDACA,qDAIJ,sBAAKA,UAAU,oBAAf,UACA,oBAAIA,UAAU,gBAAd,SAA+B2M,KAC/B,sBAAK3M,UAAU,4BAAf,UACI,yBAAQA,UAAU,qBAAqBoB,QAAS,SAACK,GAAOoL,GAAOpL,IAA/D,UACKgL,EAAe,2CAAuB,wCACtCA,GAAgB,sBAAMzM,UAAU,eAErC,sBAAKA,UAAU,gCAAf,UACA,sBAAKA,UAAU,0CAAf,oBACW,uBACP,gDAEJ,sBAAKA,UAAU,0CAAf,mBACU,uBACN,kDAGHiQ,IACG,oBAAGjQ,UAAU,6BAA6BmE,KAAM6F,IAAWrR,GAAS2R,kBAAoB,OAASyF,GAAQ7N,OAAO,SAAhH,UACI,iCACI,sBAAMlC,UAAU,WAAhB,mCADJ,uBAIA,qBAAKY,IAAI,2CAGjB,wBAAQZ,UAAU,sBAAlB,wCAMhB,cAAC,IAAD,U,2IC3LGwC,IA7HA,WAEX,IAyCA,EAAkChK,oBAAS,GAA3C,mBAAkBmY,GAAlB,WAwBA,OAfAhW,qBAAU,WACR,IAAMiW,EAAmB,WACnBxS,OAAOyS,YAAc,IACvBF,GAAa,GAEbA,GAAa,IAMjB,OAFAvS,OAAO0S,iBAAiB,SAAUF,GAE3B,kBAAMxS,OAAO2S,oBAAoB,SAAUH,MACjD,IAIC,qBAAK5P,MAAO,CAACsB,UAAU,IAAvB,SACI,wBAAQ1G,GAAG,SAASoE,UAAU,uCAA9B,SACI,qBAAKA,UAAU,uBAAf,SACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,4BAAf,SACI,sBAAKA,UAAU,qBAAf,UACI,qBAAKA,UAAU,cAAcpE,GAAG,cAAhC,SACI,eAAC,IAAD,CAAM8H,GAAG,IAAT,UACI,qBAAK1D,UAAU,YAAYgB,MAAO,CAACgQ,OAAO,IAAKpQ,IAAKqQ,IAAUzQ,IAAI,eAClE,qBAAKR,UAAU,aAAagB,MAAO,CAACgQ,OAAO,IAAKpQ,IAAKsQ,IAAY1Q,IAAI,oBAI7E,mBAAGR,UAAU,kBAAb,8CAIR,qBAAKA,UAAU,mCAAf,SACI,sBAAKA,UAAU,6BAAf,UACI,oBAAIA,UAAU,eAAd,wBACA,oBAAIgB,MAAO,CAACiN,MAAM,SAAlB,SAtFN,CAClB,CACIkD,MAAO,cACPC,KAAM,KAEV,CACID,MAAO,kBACPC,KAAM,MAiFoC7N,KAAI,SAACC,EAAK4B,GAAN,OACd,6BAAgB,cAAC,IAAD,CAAM1B,GAAIF,EAAK4N,KAAf,SAAqB,4BAAI5N,EAAK2N,WAArC/L,aAM7B,qBAAKpF,UAAU,oCAAf,SACI,sBAAKA,UAAU,yBAAf,UACI,oBAAIA,UAAU,eAAd,6BACA,qBAAKA,UAAU,gBAAf,SACI,uBAAMpE,GAAG,iBAAiByV,OAAO,IAAIhB,OAAO,MAAMiB,cAAc,QAAQtR,UAAU,cAAlF,UACI,uBAAOoE,KAAK,QAASpE,UAAU,QAAQ6B,KAAK,QAAQC,YAAY,gBAAgBK,UAAQ,IACxF,wBAAQvG,GAAG,SAASwI,KAAK,SAASvC,KAAK,SAAvC,SAAgD,mBAAG7B,UAAU,wBAGrE,qBAAKA,UAAU,+BAAf,SACI,6BA7Fb,CACf,CACIuR,KAAM,iBACNH,KAAM,KAMV,CACIG,KAAM,wBACNH,KAAM,MAoFqC7N,KAAI,SAACC,EAAK4B,GAAN,OACX,6BAAgB,cAAC,IAAD,CAAM1B,GAAIF,EAAK4N,KAAf,SAAqB,mBAAGpR,UAAWwD,EAAK+N,UAA/CnM,0B,oCCjGrDoM,EACAhH,EACAiH,EACAC,E,qHCQWC,EA5BD,CACV,CACI/V,GAAI,EACJwI,KAAM,OACNwN,MAAO,SAEX,CACIhW,GAAI,EACJwI,KAAM,UACNwN,MAAO,YAEX,CACIhW,GAAI,EACJwI,KAAM,SACNwN,MAAO,WAEX,CACIhW,GAAI,EACJwI,KAAM,cACNwN,MAAO,gBAEX,CACIhW,GAAI,EACJwI,KAAM,iBACNwN,MAAO,oB,WCjBE/H,IAMQD,IAMAE,IAMAC,IAMAF,I,MCgBVgI,EA3CE,WACb,IACMC,EAAOpI,SAASoI,KAEhBC,EAAY,UAWlBD,EAAKE,UAAUjF,IAAIgF,GAenB,OASI,aARA,CAQA,gB,QHpBR,SAASE,IACDtL,mBAEoBuL,IADpBR,EAAe/K,aAAaM,QAAQ,sBACa,aAAhByK,IAIjCA,EAAe7H,KAGnB,IAAIsI,EAAY,GAEhB,OAAQT,GACJ,KAAK5H,IACDqI,EAAY,CACR,GAAGnI,IAAWF,KAAWO,SAE7B,MACJ,KAAKT,IACDuI,EAAY,CACR,IAAInI,IAAWJ,KAAcS,SAEjC,MACJ,KAAKN,IACDoI,EAAY,CACR,MAAMnI,IAAWD,KAAgBM,SAErC,MAEJ,QACI8H,EAAY,CACR,IAAInI,IAAWH,KAAcQ,SAKzC,IAAM+H,EAAkB,CACpBC,cAAe,CACfC,QAASC,IACTC,QAAS,CACLC,QAAQ,UACRC,IAAKP,EACLxZ,QAAQ+Y,KAKhBF,EAAY,IAAImB,IAAU,CACtBF,QAAS,UACTG,eAAe,EACfR,oBAGJhU,OAAOyU,IAAMrB,E,SAGFsB,I,2EAAf,8BAAAlY,EAAA,6DACUmY,EAAe,IAAIpI,SAAOI,UAAUiI,aAAaxI,GACjDyI,EAASF,EAAaG,YAFhC,SAG4BD,EAAOE,aAHnC,cAGI1B,EAHJ,OAIIvT,QAAQC,IAAIsT,GAJhB,kBAKWA,GALX,4C,+BAQe2B,I,2EAAf,sBAAAxY,EAAA,sEACUkY,EAAiBtI,GAD3B,OAEIpM,OAAOC,SAASC,SAFpB,4C,kEAKA,sBAAA1D,EAAA,yDACIsD,QAAQC,IAAI,mBAAoBqT,IAC5BpT,OAAOiV,SAFf,0CAI6B7B,EAAU8B,QAAQ,CAAEV,eAAe,IAJhE,OAIYpI,EAJZ,8DAMYtM,QAAQC,IAAI,oCAAZ,MANZ,kCAUQqM,EAAS+I,GAAG,mBAAmB,SAACvP,GAC5B9F,QAAQC,IAAI,kBAAkB6F,GAC9B8O,IACA1U,OAAOC,SAASC,YAGpBkM,EAAS+I,GAAG,gBAAgB,SAAC5a,GACzBma,OAIJtI,EAAS+I,GAAG,kBAAkB,SAACC,GAC3BV,OAtBZ,UA2BcM,IA3Bd,gCA6BQ7T,MAAM,iCA7Bd,0D,kEAkCA,sBAAA3E,EAAA,6DACIsD,QAAQC,IAAI,mBAAoBqT,GADpC,kBAIcA,EAAUiC,sBAJxB,OAMQrV,OAAOC,SAASC,SANxB,uDAQQJ,QAAQC,IAAI,oCAAZ,MARR,6E,sBAkRe8B,IArQA,SAACyC,GAEZ,MAAkClK,oBAAS,GAA3C,mBAAOkb,EAAP,KAAkBC,EAAlB,KAEA,EAAqBnb,qBAArB,mBAAOob,EAAP,KAAWC,EAAX,KACA,EAAkCrb,qBAAlC,mBAAOsb,EAAP,KAAkBC,EAAlB,KACA,EAAwBvb,qBAAxB,mBAAawb,GAAb,WA4BA,SAASC,IACLzJ,EAAS+I,GAAG,mBAAmB,SAACvP,GAC5B9F,QAAQC,IAAI,kBAAkB6F,GAC9B8O,IACA1U,OAAOC,SAASC,YAGpBkM,EAAS+I,GAAG,gBAAgB,SAAC5a,GACzBma,OAIJtI,EAAS+I,GAAG,kBAAkB,SAACC,GAC3BV,OA/Cc,SAmDPoB,IAnDO,2EAmDtB,4BAAAtZ,EAAA,0DAEQwD,OAAOiV,SAFf,wBAGQnV,QAAQC,IAAI6L,IAAW0H,GAAc/Y,SAH7C,kBAMkByF,OAAOiV,SAASc,QAAQ,CAC1B9D,OAAQ,6BACR+D,OAAQ,CAAC,CAAEzb,QAASqR,IAAW0H,GAAc/Y,YAR7D,0DAWYuF,QAAQC,IAAR,MAEyB,OAArB,KAAYkW,KAb5B,kCAe0BpY,EAAO,CAAC+N,IAAW0H,IAf7C,UAiB0BtT,OAAOiV,SAASc,QAAQ,CAC1B9D,OAAQ,0BACR+D,OAAQnY,IAnBhC,6HAnDsB,sBAStBtB,oBAAS,sBAAC,8BAAAC,EAAA,0DACFgZ,EADE,iCAIepC,EAAU8B,UAJzB,cAIF9I,EAJE,OAKE8J,EAAS,IAAIxJ,IAAKN,GALpB,SAMqB8J,EAAOpZ,IAAI6I,cANhC,OAMIC,EANJ,OAOFgQ,EAAQM,GACR5R,EAAM5J,WAAWwb,GACjBP,EAAa/P,EAAS,IACtBtB,EAAMxC,WAAW8D,EAAS,IAC1BiQ,IAXE,4CAcP,CAACL,IAEJjZ,qBAAU,WACNsX,IACAvP,EAAM9J,WAAW8Y,GACjBwC,IACI1C,EAAU+C,gBACVV,GAAO,KAEZ,IAkDH,IAaQvK,EAAaC,cAAbD,SACFkL,EAAYC,iBAAQ,MAC1B9Z,qBAAU,WAEN,OADAyD,OAAO0S,iBAAiB,SAAU4D,GAC3B,WACHtW,OAAO2S,oBAAoB,SAAU2D,OAI7C,IAAMA,EAAW,SAACjT,GACd,IAAMkT,EAASjL,SAASkL,cAAc,cAChCC,EAAYzW,OAAO0W,QACzBD,GAAa,IAAMF,EAAO3C,UAAUjF,IAAI,YAAc4H,EAAO3C,UAAU+C,OAAO,YAC9EF,GAAa,IAAMF,EAAO3C,UAAUjF,IAAI,YAAc4H,EAAO3C,UAAU+C,OAAO,aAG5EC,EAAWP,iBAAO,MAClBQ,EAAYR,iBAAO,MAQzB,GAPkBA,iBAAO,MAOajc,mBAAS,OAA/C,mBAAO0c,EAAP,KAAoBC,EAApB,KASA,OACI,yBAAQvZ,GAAG,cAAcoE,UAAU,qBAAqBoV,IAAKZ,EAA7D,UACI,qBAAKxU,UAAU,uBAAf,SACI,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,YAAf,SACI,qBAAKpE,GAAG,oBAAR,SACI,sBAAKoE,UAAU,gBAAf,UACI,qBAAKpE,GAAG,YAAYoE,UAAU,WAA9B,SACI,qBAAKpE,GAAG,kBAAR,SACI,eAAC,IAAD,CAAM8H,GAAG,IAAI2R,IAAI,OAAOrV,UAAU,YAAlC,UACI,qBAAKA,UAAU,YAAapE,GAAG,cAAcgF,IAAKqQ,IAAUqE,OAAM,UAAKC,KAAc/U,IAAI,eACzF,qBAAKR,UAAU,aAAcpE,GAAG,cAAcgF,IAAK4U,IAAYF,OAAM,UAAKG,KAAgBjV,IAAI,sBAI1G,qBAAKR,UAAU,gBAAgBoV,IAAKH,EAAW7T,QA7BxD,WACf4T,EAASU,QAAQ1D,UAAU2D,OAAO,UAClCV,EAAUS,QAAQ1D,UAAU2D,OAAO,WA2BX,SAAoE,2BACpE,qBAAK/Z,GAAG,WAAWoE,UAAU,WAAWoV,IAAKJ,EAA7C,SACI,oBAAIpZ,GAAG,oBAAoBoE,UAAU,OAArC,SAEQ2R,EAAMpO,KAAI,SAACtH,EAAKmJ,GAAN,OACN,qBAAgBhE,QAAS,kBA5B/C,SAAAgE,GAClB+P,EAAe/P,GA2BuDwQ,CAAcxQ,IAAQpF,UAAS,oBAAe/D,EAAK4Z,QAAU,yBAA2B,GAAzD,YAAgEX,IAAgB9P,EAAQ,SAAW,GAAnG,KAA7D,UACI,cAAC,IAAD,CAAM1B,GAAIzH,EAAK2V,MAAf,SAAuB3V,EAAKmI,OAEvBnI,EAAK4Z,SACL,oBAAI7V,UAAU,WAAd,SAEO/D,EAAK4Z,QAAQtS,KAAI,SAACuS,GAAD,OACb,oBAAqB9V,UACjBsJ,IAAawM,EAAQlE,MACnB,yBACA,YAHN,SAIE,cAAC,IAAD,CAAMlO,GAAIoS,EAAQlE,MAAlB,SAA0BkE,EAAQC,OAJ3BD,EAAQla,WAP5BwJ,UAiDzB,qBAAKpF,UAAU,uBAAf,SAEI8T,EACA,8BACI,mBAAG1S,QAAS,kBAAKuS,GAAa,IAA9B,SACI,uBAAM3T,UAAU,kBAAhB,WACc,OAAT8T,QAAS,IAATA,OAAA,EAAAA,EAAWkC,OAAO,EAAG,IAAK,QAA1B,OAAmClC,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAWkC,QAAgB,OAATlC,QAAS,IAATA,OAAA,EAAAA,EAAWzX,QAAS,EAAtC,OAAyCyX,QAAzC,IAAyCA,OAAzC,EAAyCA,EAAWzX,SACxF,qBAAK2D,UAAU,uBAAuBY,IAAI,2BAA2BJ,IAAI,YAKrF,qBAAKR,UAAU,qBAAqBpE,GAAG,cAAvC,SACI,wBAAQwF,QAAS,kB,0CAAK6U,IAAajW,UAAU,qEAA7C,SACI,mEAUhC,cAAC,EAAD,IACA,eAACkW,EAAA,EAAD,CACIC,KAAMzC,EACN0C,OApGQ,WAChBzC,GAAa,IAiGT,UAII,cAACuC,EAAA,EAAMjW,OAAP,CAAcoW,aAAW,IAEzB,sBAAKrW,UAAU,8BAAf,UACA,4CACI,qBAAKA,UAAU,GAAGpE,GAAG,eAArB,SAEI,sBAAKoE,UAAU,gBAAf,UACI,sBAAKA,UAAU,+BAAf,UACI,uBAAMA,UAAU,QAAhB,eAAmC,OAAT8T,QAAS,IAATA,OAAA,EAAAA,EAAWkC,OAAO,EAAG,IAAK,QAA1B,OAAmClC,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAWkC,QAAgB,OAATlC,QAAS,IAATA,OAAA,EAAAA,EAAWzX,QAAS,EAAtC,OAAyCyX,QAAzC,IAAyCA,OAAzC,EAAyCA,EAAWzX,YACjH,mBAAG2D,UAAU,yBAEjB,sBAAKA,UAAU,qBAAf,UACI,qBAAKA,UAAU,gEAIf,qBAAKA,UAAU,OACf,qBAAKA,UAAU,0CAAf,SAII,yBAAQoB,QAAS,kB,0CAAKkV,IAAa1a,GAAG,SAASoE,UAAU,QAAzD,UACI,mBAAGA,UAAU,oBADjB,IACwC,iCAAO,KAAP,qC,oSIpY7D,QAA0B,kC","file":"static/js/main.63c4c046.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useParams, useNavigate } from 'react-router-dom';\nimport fromExponential from 'from-exponential';\n\nimport Header from '../components/header/Header';\nimport Footer from '../components/footer/Footer';\nimport { NFTAddr, DevWallet, IPFS_BASE_URL, VIDEO_TYPE, IMAGE_TYPE, AUDIO_TYPE } from '../config/constants'\nimport { getGasPrice } from '../utils/utils';\n\nconst NftDetails = () => {\n    const { nftid } = useParams()\n\n    const [currentAccount, setCurrentAccount] = useState(null);\n    const [chainId, setChainId] = useState();\n    const setAccount = (_account) => {\n        setCurrentAccount(_account);\n    }\n    const [web3Api, setWeb3Api] = useState(null);\n    const [nftContract, setNftContract] = useState();\n    const [colData, setColData] = useState();\n    const [show, setShow] = useState();\n    const [buyPrice, setBuyPrice] = useState();\n    const [aucBuyPrice, setAucBuyPrice] = useState();\n    const [aucOwner, setAucOwner] = useState();\n    const [aucStat, setAucStat] = useState();\n    const [openBid, setOpenBid] = useState();\n    const [nOwner, setNOwner] = useState();\n    const [aucTime, setAucTime] = useState();\n    const [hour, setHour] = useState()\n    const [days, setDays] = useState()\n    const [saleval, setSaleVal] = useState()\n    const [auctionval, setAuctionValue] = useState()\n    const [nftData, setNftData] = useState();\n\n    const navigate = useNavigate();\n\n    useEffect(async () => {\n        if (chainId, web3Api) {\n            const nftContratFile = await fetch(\"/abis/ZkSeaNFT.json\");\n            const convertNftContratFileToJson = await nftContratFile.json();\n            const nFTAbi = convertNftContratFileToJson;\n\n            let nftContract = new web3Api.eth.Contract(nFTAbi, NFTAddr[chainId]);\n            setNftContract(nftContract);\n        }\n    }, [chainId, web3Api])\n\n    useEffect(async () => {\n        if (web3Api && nftContract) {\n            if (nftid) {\n                saleNft(nftid)\n                auctionDetail(nftid)\n                timer(nftid)\n                nftInfo(nftid)\n                auctionState(nftid)\n                owner(nftid)\n            }\n        }\n    }, [web3Api, nftContract])\n\n    const getCollectionDetails = async (id) => {\n        if (web3Api) {\n            nftContract.methods.collectiondetails(id).call()\n                .then((data) => {\n                    setColData(data)\n                }).catch()\n        }\n    }\n\n    const saleNft = async (id) => {\n        if (web3Api) {\n            nftContract.methods.listofsalenft(id).call({ from: currentAccount })\n                .then((length) => {\n                    setBuyPrice((Number(length[3])) / 1000000000000000000)\n                    setAucBuyPrice(((Number(length[2])) / 1000000000000000000))\n                })\n                .catch()\n        }\n    }\n\n    const buyFixedNft = async (collectionid, tokenid, amount) => {\n        if (web3Api) {\n            setShow(true);\n            const gasPriceNumber = await getGasPrice();\n            let amountIn = web3Api.utils.toBN(fromExponential(((parseFloat(amount)) * Math.pow(10, 18))));\n\n            nftContract.methods.buynft(collectionid, tokenid).send({ from: currentAccount, value: amountIn, gasPrice: gasPriceNumber})\n                .then((recipt) => {\n                    setShow(false);\n                    // history.push('/mynfts');\n                })\n                .catch((err) => {\n                    setShow(false)\n                })\n        }\n    }\n\n    const auctionDetail = async (id) => {\n        if (web3Api) {\n            nftContract.methods.auctiondetail(id).call({ from: currentAccount })\n                .then((value) => {\n                    var aucde = {\n                        id: value[1],\n                        val: (Number(value[0]))?.length > 21 ? Number(value[0]) / 1000000000000000000000000000000000000 : Number(value[0]) / 1000000000000000000,\n                        userid: id\n                    }\n                    setAucOwner(aucde)\n                }).catch()\n\n        }\n    }\n\n    const auctionState = async (tokenid) => {\n        if (web3Api) {\n            nftContract.methods.nftauctionend(tokenid).call({ from: currentAccount })\n                .then((result) => {\n                    setAucStat(result)\n                })\n                .catch()\n        }\n    }\n\n    const removeAuction = async (tokenid) => {\n        if (web3Api) {\n            setShow(true)\n\n            const gasPriceNumber = await getGasPrice();\n\n            nftContract.methods.removesfromauction(tokenid).send({ from: currentAccount, gasPrice: gasPriceNumber })\n                .then((result) => {\n                    console.log(result);\n                    window.location.reload()\n                })\n                .catch()\n        }\n    }\n\n    const removeSale = async (collectionid, tokenid) => {\n        if (web3Api) {\n            setShow(true)\n\n            const gasPriceNumber = await getGasPrice();\n\n            nftContract.methods.cancelfixedsale(tokenid).send({ from: currentAccount, gasPrice: gasPriceNumber})\n                .then((result) => {\n                    console.log(result);\n                    window.location.reload()\n                })\n                .catch()\n\n        }\n    }\n\n    const owner = async (tokenid) => {\n        if (web3Api) {\n            nftContract.methods.originalowner(tokenid).call({ from: currentAccount })\n                .then((result) => {\n                    setNOwner(result)\n                })\n                .catch()\n        }\n    }\n\n    const buyAuctionNft = async (tokenid, amount) => {\n        if (web3Api) {\n            setShow(true)\n\n            const gasPriceNumber = await getGasPrice();\n            let amountIn = web3Api.utils.toBN(fromExponential(((parseFloat(amount)) * Math.pow(10, 18))));\n\n            nftContract.methods.buyauction(tokenid).send({ from: currentAccount, value: amountIn, gasPrice: gasPriceNumber })\n                .then((recipt) => {\n                    setShow(false);\n                    window.location.reload();\n                })\n                .catch((err) => {\n                    setShow(false)\n                })\n        }\n    }\n\n    const timer = async (id) => {\n        if (web3Api) {\n            nftContract.methods.timing(id).call({ from: currentAccount })\n                .then((result) => {\n                    var day = Math.floor(result / 86400)\n                    var hr = Math.floor((result - day * 86400) / 3600)\n                    var minutesout = Math.floor((result - day * 86400 - hr * 3600) / 60);\n                }).catch()\n        }\n    }\n\n    const timer1 = async (id) => {\n        if (web3Api) {\n            nftContract.methods.timing(id).call({ from: currentAccount })\n                .then((result) => {\n                    var day = Math.floor(result / 86400)\n                    var hr = Math.floor((result - day * 86400) / 3600)\n                    var minutesout = Math.floor((result - day * 86400 - hr * 3600) / 60);\n                    setAucTime({ id: id, d: day, h: hr, m: minutesout })\n                }).catch()\n        }\n    }\n\n    const claimAuctionNft = async (collectionid, tokenid) => {\n        if (web3Api) {\n            setShow(true)\n            const gasPriceNumber = await getGasPrice();\n\n            nftContract.methods.claim(collectionid, tokenid).send({ from: currentAccount, gasPrice: gasPriceNumber })\n                .then((recipt) => {\n                    setShow(false)\n                    // history.push('/mycollection')\n                })\n                .catch((err) => {\n                    setShow(false)\n                })\n        }\n    }\n\n    const fixedSale = async (tokenid, price) => {\n        setShow(true)\n        if (web3Api) {\n\n            const gasPriceNumber = await getGasPrice();\n            let priceIn = web3Api.utils.toBN(fromExponential(((parseFloat(price)) * Math.pow(10, 18))));   \n\n            nftContract.methods.fixedsales(tokenid, priceIn).send({ from: currentAccount, gasPrice: gasPriceNumber})\n                .then((result) => {\n                    if (result.status === true) {\n                        setShow(false);\n                        // history.push('/mycollection');\n                    } else {\n                        alert('failed');\n                    }\n                })\n                .catch((err) => {\n                    setShow(false);\n                })\n        }\n    }\n\n    const nftInfo = async (id) => {\n        if (web3Api) {\n            nftContract.methods.nftinformation(id).call({ from: currentAccount })\n                .then((result) => {\n                    // console.log('NFT data -- ', result);\n                    setNftData(result);\n                    getCollectionDetails(result[7]);\n                }).catch()\n\n        }\n    }\n\n    const auction = async (tokenid, price, endday, endhours) => {\n        if (web3Api) {\n            setShow(true)\n            const gasPriceNumber = await getGasPrice();\n            let priceIn = web3Api.utils.toBN(fromExponential(((parseFloat(price)) * Math.pow(10, 18))));\n\n            nftContract.methods.startauction(tokenid, priceIn, endday, endhours).send({ from: currentAccount, gasPrice: gasPriceNumber})\n                .then((recipt) => {\n                    if (recipt.status === true) {\n                        setShow(false)\n                        // history.push('/mycollection')\n                    } else {\n                        alert('failed')\n                    }\n                })\n                .catch(err => {\n                    setShow(false)\n                })\n        }\n    }\n\n    const burnMain = async (tokenid) => {\n        setShow(true)\n        if (web3Api) {\n            const gasPriceNumber = await getGasPrice();\n\n            const colId = nftData[7];\n            nftContract.methods.burnorinalnft(colId, tokenid).send({ from: currentAccount, gasPrice: gasPriceNumber})\n                .then((result) => {\n                    console.log(result);\n                    setShow(false)\n                    // history.goBack()\n                })\n                .catch((err) => {\n                    setShow(false)\n                    console.log(err);\n                })\n        }\n    }\n\n    return (\n        <div className='item-details'>\n            <Header setAccount={setAccount} setWeb3Api={setWeb3Api} setChainId={setChainId}/>\n            <section className=\"first-section productDetails\">\n                <div className=\"autoContainer\">\n                    <div className=\"productDetails__inner\">\n                        <div className=\"productDetails__inner-image\">\n                            {nftData && (VIDEO_TYPE.includes(JSON.parse(nftData[5])[1]) ?\n                                <video alt=\"\" muted autoPlay loop>\n                                    <source src={IPFS_BASE_URL + nftData[6]} />\n                                </video> \n                                : IMAGE_TYPE.includes(JSON.parse(nftData[5])[1]) ?\n                                <img src={IPFS_BASE_URL + nftData[6]} alt=\"\"/>\n                                : AUDIO_TYPE.includes(JSON.parse(nftData[5])[1]) ?\n                                <audio style={{ width: '90%' }} src={IPFS_BASE_URL + nftData[6]} />\n                                : null)\n                            }\n                        </div>\n                        <div className=\"productDetails__inner-info\">\n                            <h2>\n                                {nftData && nftData[1]}\n                            </h2>\n                            <div className=\"productDetails__inner-info-tools\">\n                                <h5>\n                                    <p>\n                                        {nftData && nftData[3]}\n                                    </p>\n                                    <div>\n                                        <span>\n                                            <img src=\"/assets/images/zk/share.svg\" alt=\"\" />\n                                        </span>\n                                        <small>\n                                            Share\n                                        </small>\n                                    </div>\n                                </h5>\n                                <button className=\"refresh\">\n                                    <img src=\"/assets/images/zk/refreshGradient.svg\" alt=\"\" />\n                                </button>\n                            </div>\n                            <div className=\"productDetails__inner-info-text\">\n                                <h5>\n                                    List Price\n                                </h5>\n                                <p>\n                                    <span>\n                                        <img src=\"/assets/images/zk/eth.svg\" alt=\"\" />\n                                    </span>\n                                    0.5\n                                </p>\n                            </div>\n                            <div className=\"productDetails__inner-info-text\">\n                                <h5>\n                                    Taker Fee\n                                </h5>\n                                <p>\n                                    (1.5%)\n                                    <span>\n                                        <img src=\"/assets/images/zk/eth.svg\" alt=\"\" />\n                                    </span>\n                                    0.0075\n                                </p>\n                            </div>\n                            <div className=\"productDetails__inner-info-text\">\n                                <h5>\n                                    Royalty\n                                </h5>\n                                <p>\n                                    Full (5%)\n                                    <span>\n                                        <img src=\"/assets/images/zk/eth.svg\" alt=\"\" />\n                                    </span>\n                                    0.025\n                                </p>\n                            </div>\n                            <div className=\"productDetails__inner-info-total\">\n                                <h5>\n                                    Total\n                                </h5>\n                                <p>\n                                    <span>\n                                        <img src=\"/assets/images/zk/eth.svg\" alt=\"\" />\n                                    </span>\n                                    0.5325\n                                </p>\n                            </div>\n                            <div className=\"productDetails__inner-info-pay\">\n                                <div className=\"productDetails__inner-info-pay-text\">\n                                    <span>\n                                        <img src=\"/assets/images/zk/eth.svg\" alt=\"\" />\n                                    </span>\n                                    <h5>\n                                        Pay in ETH\n                                    </h5>\n                                </div>\n                                <p>\n                                    Connect supported wallet • Fastest\n                                </p>\n                                <div className=\"arrow\">\n                                    <img src=\"/assets/images/zk/arrow-down.svg\" alt=\"\" />\n                                </div>\n                            </div>\n                            <p>\n                                <span>\n                                    <img src=\"/assets/images/zk/infoYellow.svg\" alt=\"\" />\n                                </span>\n                                Not enough funds in your wallet\n                            </p>\n                            {/* <div className=\"productDetails__inner-info-text\">\n                                <h6>\n                                    Add funds with:\n                                </h6>\n                                <p>\n                                    <span>\n                                        <img src=\"/assets/images/zk/stripe.svg\" alt=\"\" />\n                                    </span>\n                                    Stripe\n                                </p>\n                            </div> */}\n                            {nOwner?.toLowerCase() !== currentAccount?.toLowerCase() && \n                                <div className=\"productDetails__inner-info-text\">\n                                    <button className=\"button--primary\" style={{width:\"100%\", borderRadius:8}} onClick={() => navigate('/bid/' + nftData[0])} >Make Offer</button>\n                                </div>\n                            }  \n                            {buyPrice > 0 && nOwner?.toLowerCase() === currentAccount?.toLowerCase() ? null :\n                                buyPrice > 0 ? \n                                <div className=\"productDetails__inner-info-text\">\n                                    <button className=\"button--primary\" style={{width:\"100%\", borderRadius:8}} onClick={() => buyFixedNft(nftData[7], nftData[0], buyPrice)} >Buy now</button>\n                                </div>\n                                 : null\n                            }                          \n\n                            {aucTime?.d === 0 && aucTime?.h === 0 && aucTime?.m === 0 && aucOwner?.id.toLowerCase() === currentAccount?.toLowerCase() ?\n                                (aucBuyPrice > 0 && aucOwner?.val >= aucBuyPrice) ? \n                                <div className=\"productDetails__inner-info-text\">\n                                    <button style={{width:\"100%\", borderRadius:8}}  className=\"button--primary\" onClick={() => claimAuctionNft(nftData[7], nftData[0])}  >CLAIM</button>\n                                </div>\n                                 : \n                                Number(aucBuyPrice) > 0 && Number(aucBuyPrice) > aucOwner?.val && nOwner?.toLowerCase() === currentAccount?.toLowerCase() ? \n                                <div className=\"productDetails__inner-info-text\">\n                                    <button style={{width:\"100%\", borderRadius:8}}  className=\"button--primary\" onClick={() => removeAuction(nftData[0])} >Cancel Auction</button>\n                                </div>\n                                 : null\n                                : null\n                            }\n\n                            {aucTime?.d === 0 && aucTime?.h === 0 && aucTime?.m === 0 && Number(aucBuyPrice) > 0 && Number(aucBuyPrice) > aucOwner?.val && nOwner?.toLowerCase() === currentAccount?.toLowerCase() ? \n                                <div className=\"productDetails__inner-info-text\">\n                                    <button style={{width:\"100%\", borderRadius:8}}  className=\"button--primary\" onClick={() => removeAuction(nftData[0])} >Cancel Auction</button>\n                                </div>: null\n                            }\n\n                            {\n                                nOwner?.toLowerCase() === currentAccount?.toLowerCase() ? null :\n                                    openBid ? null :\n                                    aucBuyPrice > 0 ?\n                                    aucTime?.d === 0 && aucTime?.h === 0 && aucTime?.m === 0 ? null :\n                                    <div className=\"productDetails__inner-info-text\">\n                                        <button style={{width:\"100%\", borderRadius:8}} className=\"button--primary\"  onClick={() => setOpenBid(true)} >BID</button>\n                                    </div>\n                                    : null\n                            }\n\n                            <form onSubmit={(e) => { e.preventDefault() ; buyAuctionNft(nftData[0], aucBuyPrice); }}>\n                                {openBid ?\n                                    <div className=\"productDetails__inner-info-text\">\n                                        <input style={{ border: 'none', outline: 'none' }} type=\"Number\" placeholder=\"Enter bid value\" step=\"any\" min={aucBuyPrice > aucOwner?.val ? aucBuyPrice : aucOwner?.val} onChange={(e) => setAucBuyPrice(e.target.value)} required /> \n                                    </div>: null\n                                }\n                                {openBid ?\n                                    aucBuyPrice > 0 ?\n                                    <div className=\"productDetails__inner-info-text\">\n                                        <button style={{width:\"100%\", borderRadius:8}} className=\"button--primary\" >BID</button>\n                                    </div> : null\n                                    : null\n                                }                                  \n                            </form>\n                            \n                            {\n                                nftData && nftData[8].toLowerCase() === currentAccount?.toLowerCase() ?\n                                <form onSubmit={(e) => {\n                                    e.preventDefault();\n                                    auction(nftData[0], auctionval, days, hour)\n                                }}>\n                                    <div className=\"productDetails__inner-info-text\">\n                                        <h3 style={{ fontSize: '25px', textTransform: 'capitalize' }}>Auction</h3>\n                                    </div>\n                                    <div className=\"productDetails__inner-info-text\">\n                                        <input type=\"Number\" placeholder=\"Enter Min Bid Value in ETH\" step=\"any\" min={aucBuyPrice > aucOwner?.val ? aucBuyPrice : aucOwner?.val} onChange={(e) => setAuctionValue(e.target.value)} required />\n                                    </div>\n                                    <div className=\"productDetails__inner-info-text\">\n                                        <input type=\"Number\" placeholder=\"Enter Days\" min=\"0\" onChange={(e) => setDays(e.target.value)} required />\n                                    </div>\n                                    <div className=\"productDetails__inner-info-text\">\n                                        <input type=\"Number\" placeholder=\"Enter Hours\" min=\"0\" onChange={(e) => setHour(e.target.value)} required />\n                                    </div>\n                                    <button style={{width:\"100%\", borderRadius:8}} className=\"button--primary\" >Auction</button>\n                                </form> : null\n                            }\n\n                            {\n                                nftData && nftData[8].toLowerCase() === currentAccount?.toLowerCase() ?\n                                <form onSubmit={(e) => {\n                                        e.preventDefault()\n                                        fixedSale(nftData[7], nftData[0], saleval)\n\n                                    }} style={{marginTop:8}}>\n                                    <div className=\"productDetails__inner-info-text\">\n                                        <h3 style={{ fontSize: '25px', textTransform: 'capitalize' }}>Set Sale Price</h3>\n                                    </div>\n                                    <div className=\"productDetails__inner-info-text\">\n                                        <input type=\"Number\" placeholder=\"Enter Sale Price in ETH\" step=\"any\" min={aucBuyPrice > aucOwner?.val ? aucBuyPrice : aucOwner?.val} onChange={(e) => setSaleVal(e.target.value)} required />\n                                    </div>\n                                    <div className=\"productDetails__inner-info-text\">\n                                        <button className=\"button--primary\" style={{width:\"100%\", borderRadius:8}} >Set Sale Price</button>  \n                                    </div>\n                                </form>: null\n                            }\n                            \n                            {\n                                buyPrice > 0 && nOwner?.toLowerCase() === currentAccount?.toLowerCase() ? \n                                <div className=\"productDetails__inner-info-text\">\n                                    <button className=\"button--primary\" style={{width:\"100%\", borderRadius:8}} onClick={() => removeSale(nftData[7], nftData[0])} >Cancel</button> \n                                </div>                                \n                                : null\n                            }\n\n                            {\n                                DevWallet.toLowerCase() == currentAccount?.toLowerCase() ?\n                                <div className=\"productDetails__inner-info-text\">\n                                    <button className=\"button--primary\" style={{width:\"100%\", borderRadius:8}} onClick={() => burnMain(nftid)} >Burn NFT</button>\n                                </div>\n                                : null\n                            }\n\n                        </div>\n                    </div>\n                </div>\n            </section>\n            {/* <section className=\"tab\">\n                <div className=\"autoContainer\">\n                    <div className=\"tab__inner\">\n                    <div className=\"tab__inner-column\">\n                        <div className=\"tabItem\">\n                        <div className=\"tabItem__buttons\">\n                            <div className=\"tabItem__buttons-body tabBtn wow fadeInUp\" data-tab=\"#tab-1\" data-wow-duration=\".3s\"\n                            data-wow-delay=\".1s\">\n                            <span className=\"icon\">\n                                <img src=\"/assets/images/zk/pulse.svg\" alt=\"\" />\n                            </span>\n                            <h5>\n                                Price history\n                            </h5>\n                            <span className=\"icon arrow\">\n                                <img src=\"/assets/images/zk/arrow-down.svg\" alt=\"\" />\n                            </span>\n                            </div>\n                            <div className=\"tabItem__buttons-body tabBtn wow fadeInUp\" data-tab=\"#tab-2\" data-wow-duration=\".3s\"\n                            data-wow-delay=\".14s\">\n                            <span className=\"icon\">\n                                <img src=\"/assets/images/zk/flash.svg\" alt=\"\" />\n                            </span>\n                            <h5>\n                                No offer yet\n                            </h5>\n                            <span className=\"icon arrow\">\n                                <img src=\"/assets/images/zk/arrow-down.svg\" alt=\"\" />\n                            </span>\n                            </div>\n                            <div className=\"tabItem__buttons-body tabBtn wow fadeInUp\" data-tab=\"#tab-3\" data-wow-duration=\".3s\"\n                            data-wow-delay=\".17s\">\n                            <span className=\"icon\">\n                                <img src=\"/assets/images/zk/pulse.svg\" alt=\"\" />\n                            </span>\n                            <h5>\n                                Activities\n                            </h5>\n                            <span className=\"icon arrow\">\n                                <img src=\"/assets/images/zk/arrow-down.svg\" alt=\"\" />\n                            </span>\n                            </div>\n                        </div>\n                        <div className=\"tabItem__contents\">\n                            <div className=\"tabItem__contents-item tabEvent\" id=\"tab-1\">\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Mint Address\n                                </h6>\n                                <div className=\"tabItem__contents-item-text\">\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/solanafm.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/selonasarch.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/eth.svg\" alt=\"\" />\n                                </span>\n                                <p>\n                                    JBscG ... xgc\n                                </p>\n                                </div>\n                            </div>\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Token Address\n                                </h6>\n                                <div className=\"tabItem__contents-item-text\">\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/solanafm.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/selonasarch.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/eth.svg\" alt=\"\" />\n                                </span>\n                                <p>\n                                    9p2yG ... zdf\n                                </p>\n                                </div>\n                            </div>\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Owner\n                                </h6>\n                                <div className=\"tabItem__contents-item-text\">\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/solanafm.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/selonasarch.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/eth.svg\" alt=\"\" />\n                                </span>\n                                <p>\n                                    Nsge5 ... g6n\n                                </p>\n                                </div>\n                            </div>\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Creator Royalties\n                                </h6>\n                                <p>\n                                5%\n                                </p>\n                            </div>\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Taker Fee\n                                </h6>\n                                <p>\n                                1.5%\n                                </p>\n                            </div>\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Listing/Bidding/Cancel\n                                </h6>\n                                <p>\n                                Free\n                                </p>\n                            </div>\n                            </div>\n                            <div className=\"tabItem__contents-item tabEvent\" id=\"tab-2\">\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Mint Address\n                                </h6>\n                                <div className=\"tabItem__contents-item-text\">\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/solanafm.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/selonasarch.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/eth.svg\" alt=\"\" />\n                                </span>\n                                <p>\n                                    JBscG ... xgc\n                                </p>\n                                </div>\n                            </div>\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Token Address\n                                </h6>\n                                <div className=\"tabItem__contents-item-text\">\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/solanafm.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/selonasarch.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/eth.svg\" alt=\"\" />\n                                </span>\n                                <p>\n                                    9p2yG ... zdf\n                                </p>\n                                </div>\n                            </div>\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Owner\n                                </h6>\n                                <div className=\"tabItem__contents-item-text\">\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/solanafm.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/selonasarch.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/eth.svg\" alt=\"\" />\n                                </span>\n                                <p>\n                                    Nsge5 ... g6n\n                                </p>\n                                </div>\n                            </div>\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Creator Royalties\n                                </h6>\n                                <p>\n                                5%\n                                </p>\n                            </div>\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Taker Fee\n                                </h6>\n                                <p>\n                                1.5%\n                                </p>\n                            </div>\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Listing/Bidding/Cancel\n                                </h6>\n                                <p>\n                                Free\n                                </p>\n                            </div>\n                            </div>\n                            <div className=\"tabItem__contents-item tabEvent\" id=\"tab-3\">\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Mint Address\n                                </h6>\n                                <div className=\"tabItem__contents-item-text\">\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/solanafm.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/selonasarch.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/eth.svg\" alt=\"\" />\n                                </span>\n                                <p>\n                                    JBscG ... xgc\n                                </p>\n                                </div>\n                            </div>\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Token Address\n                                </h6>\n                                <div className=\"tabItem__contents-item-text\">\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/solanafm.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/selonasarch.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/eth.svg\" alt=\"\" />\n                                </span>\n                                <p>\n                                    9p2yG ... zdf\n                                </p>\n                                </div>\n                            </div>\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Owner\n                                </h6>\n                                <div className=\"tabItem__contents-item-text\">\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/solanafm.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/selonasarch.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/eth.svg\" alt=\"\" />\n                                </span>\n                                <p>\n                                    Nsge5 ... g6n\n                                </p>\n                                </div>\n                            </div>\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Creator Royalties\n                                </h6>\n                                <p>\n                                5%\n                                </p>\n                            </div>\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Taker Fee\n                                </h6>\n                                <p>\n                                1.5%\n                                </p>\n                            </div>\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Listing/Bidding/Cancel\n                                </h6>\n                                <p>\n                                Free\n                                </p>\n                            </div>\n                            </div>\n                        </div>\n                        </div>\n                    </div>\n                    <div className=\"tab__inner-column\">\n                        <div className=\"tabItem\">\n                        <div className=\"tabItem__buttons\">\n                            <div className=\"tabItem__buttons-body tabBtn wow fadeInUp\" data-tab=\"#tab-4\" data-wow-duration=\".3s\"\n                            data-wow-delay=\".2s\">\n                            <span className=\"icon\">\n                                <img src=\"/assets/images/zk/user.svg\" alt=\"\" />\n                            </span>\n                            <h5>\n                                Price historyAbout Doodle Soda\n                            </h5>\n                            <span className=\"icon arrow\">\n                                <img src=\"/assets/images/zk/arrow-down.svg\" alt=\"\" />\n                            </span>\n                            </div>\n                            <div className=\"tabItem__buttons-body tabBtn wow fadeInUp\" data-tab=\"#tab-5\" data-wow-duration=\".3s\"\n                            data-wow-delay=\".24s\">\n                            <span className=\"icon\">\n                                <img src=\"/assets/images/zk/shield.svg\" alt=\"\" />\n                            </span>\n                            <h5>\n                                Attributes\n                            </h5>\n                            <span className=\"icon arrow\">\n                                <img src=\"/assets/images/zk/arrow-down.svg\" alt=\"\" />\n                            </span>\n                            </div>\n                            <div className=\"tabItem__buttons-body tabBtn wow fadeInUp active\" data-tab=\"#tab-6\" data-wow-duration=\".3s\"\n                            data-wow-delay=\".27s\">\n                            <span className=\"icon\">\n                                <img src=\"/assets/images/zk/details.svg\" alt=\"\" />\n                            </span>\n                            <h5>\n                                Details\n                            </h5>\n                            <span className=\"icon arrow\">\n                                <img src=\"/assets/images/zk/arrow-down.svg\" alt=\"\" />\n                            </span>\n                            </div>\n                        </div>\n                        <div className=\"tabItem__contents\">\n                            <div className=\"tabItem__contents-item tabEvent\" id=\"tab-4\">\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Mint Address\n                                </h6>\n                                <div className=\"tabItem__contents-item-text\">\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/solanafm.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/selonasarch.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/eth.svg\" alt=\"\" />\n                                </span>\n                                <p>\n                                    JBscG ... xgc\n                                </p>\n                                </div>\n                            </div>\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Token Address\n                                </h6>\n                                <div className=\"tabItem__contents-item-text\">\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/solanafm.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/selonasarch.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/eth.svg\" alt=\"\" />\n                                </span>\n                                <p>\n                                    9p2yG ... zdf\n                                </p>\n                                </div>\n                            </div>\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Owner\n                                </h6>\n                                <div className=\"tabItem__contents-item-text\">\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/solanafm.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/selonasarch.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/eth.svg\" alt=\"\" />\n                                </span>\n                                <p>\n                                    Nsge5 ... g6n\n                                </p>\n                                </div>\n                            </div>\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Creator Royalties\n                                </h6>\n                                <p>\n                                5%\n                                </p>\n                            </div>\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Taker Fee\n                                </h6>\n                                <p>\n                                1.5%\n                                </p>\n                            </div>\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Listing/Bidding/Cancel\n                                </h6>\n                                <p>\n                                Free\n                                </p>\n                            </div>\n                            </div>\n                            <div className=\"tabItem__contents-item tabEvent\" id=\"tab-5\">\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Mint Address\n                                </h6>\n                                <div className=\"tabItem__contents-item-text\">\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/solanafm.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/selonasarch.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/eth.svg\" alt=\"\" />\n                                </span>\n                                <p>\n                                    JBscG ... xgc\n                                </p>\n                                </div>\n                            </div>\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Token Address\n                                </h6>\n                                <div className=\"tabItem__contents-item-text\">\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/solanafm.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/selonasarch.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/eth.svg\" alt=\"\" />\n                                </span>\n                                <p>\n                                    9p2yG ... zdf\n                                </p>\n                                </div>\n                            </div>\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Owner\n                                </h6>\n                                <div className=\"tabItem__contents-item-text\">\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/solanafm.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/selonasarch.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/eth.svg\" alt=\"\" />\n                                </span>\n                                <p>\n                                    Nsge5 ... g6n\n                                </p>\n                                </div>\n                            </div>\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Creator Royalties\n                                </h6>\n                                <p>\n                                5%\n                                </p>\n                            </div>\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Taker Fee\n                                </h6>\n                                <p>\n                                1.5%\n                                </p>\n                            </div>\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Listing/Bidding/Cancel\n                                </h6>\n                                <p>\n                                Free\n                                </p>\n                            </div>\n                            </div>\n                            <div className=\"tabItem__contents-item tabEvent active\" id=\"tab-6\">\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Mint Address\n                                </h6>\n                                <div className=\"tabItem__contents-item-text\">\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/solanafm.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/selonasarch.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/eth.svg\" alt=\"\" />\n                                </span>\n                                <p>\n                                    JBscG ... xgc\n                                </p>\n                                </div>\n                            </div>\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Token Address\n                                </h6>\n                                <div className=\"tabItem__contents-item-text\">\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/solanafm.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/selonasarch.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/eth.svg\" alt=\"\" />\n                                </span>\n                                <p>\n                                    9p2yG ... zdf\n                                </p>\n                                </div>\n                            </div>\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Owner\n                                </h6>\n                                <div className=\"tabItem__contents-item-text\">\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/solanafm.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/selonasarch.svg\" alt=\"\" />\n                                </span>\n                                <span className=\"icon\">\n                                    <img src=\"/assets/images/zk/eth.svg\" alt=\"\" />\n                                </span>\n                                <p>\n                                    Nsge5 ... g6n\n                                </p>\n                                </div>\n                            </div>\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Creator Royalties\n                                </h6>\n                                <p>\n                                5%\n                                </p>\n                            </div>\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Taker Fee\n                                </h6>\n                                <p>\n                                1.5%\n                                </p>\n                            </div>\n                            <div className=\"tabItem__contents-item-body tabEvent\">\n                                <h6>\n                                Listing/Bidding/Cancel\n                                </h6>\n                                <p>\n                                Free\n                                </p>\n                            </div>\n                            </div>\n                        </div>\n                        </div>\n                    </div>\n                    </div>\n                </div>\n                </section> */}\n            <Footer />\n        </div>\n    );\n}\n\nexport default NftDetails;\n","import React , { useState , useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport {NFTAddr, DevWallet} from '../../../config/constants'\n\nconst IPFS_BASE_URL = \"https://ipfs.io/ipfs/\";\n\nconst NFTs = props => {\n\n    const [web3Api, setWeb3Api] = useState(null);\n    const [allNftData, setAllNftData] = useState([]);\n    const [show, setShow] = useState(false);\n    const [nftContract, setNftContract] = useState(); \n    \n    useEffect(async () => {\n        if(props.chainId, props.web3Api){\n\n            const nftContratFile = await fetch(\"/abis/ZkSeaNFT.json\");\n            const convertNftContratFileToJson = await nftContratFile.json();\n            const nFTAbi = convertNftContratFileToJson;\n\n            let nftContract = new props.web3Api.eth.Contract(nFTAbi, NFTAddr[props.chainId]);\n            setNftContract(nftContract);\n            getNftsIndexFromCol(props.colId, nftContract);\n        }\n    }, [props.chainId, props.web3Api])\n\n    const getNftsIndexFromCol = async (_colId, _nftContract) => {\n        if (props.web3Api) {\n            _nftContract.methods.collectionnft(_colId).call()\n            .then((colItemIndex) => {\n                for (let i = 0; i < colItemIndex?.length; i++) {\n                    getNftDetails(colItemIndex[i], _nftContract)\n                }\n            }).catch()\n        }\n    }\n\n    const getNftDetails = async (id, _nftContract) => {\n        if (props.web3Api) {\n            _nftContract.methods.nftinformation(id).call()\n            .then((nftDetail) => {\n                console.log(' -- nft info -- ', nftDetail);\n                makeAllNftData({...nftDetail, 12:JSON.parse(nftDetail[5])[1] })\n            }).catch()\n        }\n    }\n\n    const makeAllNftData = (data) => {\n        setAllNftData((old) => [\n            ...old, data\n        ])\n    }    \n\n    return (\n        <div className=\"grid__inner\">\n            { \n                allNftData.map((item, idx) => {\n                    return(\n                        <Link to={`/nft/${item[0]}`} className=\"cartProduct\">\n                            <div className=\"cartProduct__image\">\n                                <img src={IPFS_BASE_URL + item[6]} alt=\"\" />\n                            </div>\n                            <div className=\"cartProduct__info\">\n                            <h6>\n                                {item[1]}\n                                <small>\n                                {item[3]}\n                                </small>\n                            </h6>\n                            <div className=\"cartProduct__info-text\">\n                                <div className=\"cartProduct__info-text-icons\">\n                                <span>\n                                    <img src=\"/assets/images/zk/eth.svg\" alt=\"\" />\n                                </span>\n                                <p>\n                                    0.5\n                                </p>\n                                <span>\n                                    <img src=\"/assets/images/zk/info-circle.svg\" alt=\"\" />\n                                </span>\n                                <span>\n                                    <img src=\"/assets/images/zk/crown.svg\" alt=\"\" />\n                                </span>\n                                </div>\n                                <Link className=\"button--border\" to={\"/nft/\" + item[0]}>\n                                    <span>\n                                        Details\n                                    </span>\n                                </Link>\n                            </div>\n                            </div>\n                        </Link>\n                        \n                    )\n                })\n            }\n        </div>\n    );\n}\n\nexport default NFTs;\n","import React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport 'react-tabs/style/react-tabs.css';\n\nimport Header from '../components/header/Header';\nimport Footer from '../components/footer/Footer';\nimport NftItems from '../components/layouts/nfts/NftItems';\nimport {NFTAddr, DevWallet} from '../config/constants'\nimport { getGasPrice } from '../utils/utils';\n\nconst IPFS_BASE_URL = \"https://ipfs.io/ipfs/\";\n\nconst CollectionDetails = () => {\n    const { colId } = useParams();\n    const [chainId, setChainId] = useState();\n    const [currentAccount, setCurrentAccount] = useState(null);    \n    const setAccount = (_account) => {\n        setCurrentAccount(_account);\n    }\n    const [web3Api, setWeb3Api] = useState(null);    \n    const [searchWord, setSearchWord] = useState(\"\");    \n    const [nftContract, setNftContract] = useState(); \n    const [colData, setColData] = useState(); \n    const [show, setShow] = useState(); \n    const navigate = useNavigate();\n\n    useEffect(async () => {\n        if (chainId && web3Api) {\n            const nftContratFile = await fetch(\"/abis/ZkSeaNFT.json\");\n            const convertNftContratFileToJson = await nftContratFile.json();\n            const nFTAbi = convertNftContratFileToJson;\n\n            let nftContract = new web3Api.eth.Contract(nFTAbi, NFTAddr[chainId]);\n            setNftContract(nftContract);\n            getCollectionDetails(colId, nftContract)\n        }\n    }, [chainId, web3Api])\n\n    const getCollectionDetails = async (id, _nftContract) => {\n        if (web3Api) {\n            _nftContract.methods.collectiondetails(id).call()\n            .then((data) => {\n                setColData(data)\n            }).catch()\n        }\n    }\n\n    const deleteCollection = async (id) => {\n        if (web3Api) {\n            setShow(true)\n            const accounts = await web3Api.eth.getAccounts();\n            let usrWallet = accounts[0];\n\n            const gasPriceNumber = await getGasPrice();\n\n            nftContract.methods.deletecollection(id).send({ from: usrWallet , gasPrice: gasPriceNumber})\n            .then((result) => {\n                console.log(result);\n                // history.push('/mycollection');\n                setShow(false)\n            }).catch((err) => {\n                console.log()\n                setShow(false)\n            })\n        }\n    }\n\n    return (\n        <div className='item-details'>\n            <Header setAccount={setAccount} setWeb3Api={setWeb3Api} setChainId={setChainId}/>\n            <section className=\"first-section productInfo\">\n                <div className=\"autoContainer\">\n                    <div className=\"productInfo__inner\">\n                    <div className=\"productInfo__inner-image\">\n                        <div className=\"ratioImage\">\n                            <img src={colData && (IPFS_BASE_URL + colData[6])} alt=\"\" />\n                        </div>\n                    </div>\n                    <div className=\"productInfo__inner-details\">\n                        <div className=\"productInfo__inner-details-text\">\n                        <h2>\n                            {colData && colData[2]}\n                        </h2>\n                        <p>\n                            By:\n                            <span>\n                            {colData && colData[3]}\n                            </span>\n                        </p>\n                        </div>\n                        <div className=\"productInfo__inner-details-wrapper\">\n                            <div className=\"productInfo__inner-details-items\">\n                                <div className=\"productInfoItem\">\n                                <h6>\n                                    FLOOR\n                                </h6>\n                                <p>\n                                    <span>\n                                    <img src=\"/assets/images/zk/eth.svg\" alt=\"\" />\n                                    </span>\n                                    0.5\n                                </p>\n                                </div>\n                                <div className=\"productInfoItem\">\n                                <h6>\n                                    TOTAL VOL\n                                </h6>\n                                <p>\n                                    <span>\n                                    <img src=\"/assets/images/zk/eth.svg\" alt=\"\" />\n                                    </span>\n                                    0.5\n                                </p>\n                                </div>\n                                <div className=\"productInfoItem\">\n                                <h6>\n                                    AVG. SALE 24H\n                                </h6>\n                                <p>\n                                    <span>\n                                    <img src=\"/assets/images/zk/eth.svg\" alt=\"\" />\n                                    </span>\n                                    _ _\n                                </p>\n                                </div>\n                                <div className=\"productInfoItem\">\n                                <h6>\n                                    OWNERS\n                                    <span>\n                                    <img src=\"/assets/images/zk/info-circle.svg\" alt=\"\" />\n                                    </span>\n                                </h6>\n                                <p>\n                                    16\n                                </p>\n                                </div>\n                                <div className=\"productInfoItem\">\n                                <h6>\n                                    LISTED\n                                </h6>\n                                <p>\n                                    10\n                                </p>\n                                </div>\n                                <div className=\"productInfoItem\">\n                                <h6>\n                                    TOTAL SUPPLY\n                                    <span>\n                                    <img src=\"/assets/images/zk/info-circle.svg\" alt=\"\" />\n                                    </span>\n                                </h6>\n                                <p>\n                                    66\n                                </p>\n                                </div>                            \n                            </div>\n                            <div className=\"productInfo__inner-details-social\">\n                                <div className=\"productInfoSocials\">\n                                <a href=\"#\" className=\"button--social\">\n                                    <span>\n                                        <img src=\"/assets/images/zk/discord.svg\" alt=\"\" />\n                                    </span>\n                                </a>\n                                <a href=\"#\" className=\"button--social\">\n                                    <span>\n                                        <img src=\"/assets/images/zk/twitter.svg\" alt=\"\" />\n                                    </span>\n                                </a>\n                                <a href=\"#\" className=\"button--social\">\n                                    <span>\n                                        <img src=\"/assets/images/zk/globus.svg\" alt=\"\" />\n                                    </span>\n                                </a>\n                                <a href=\"#\" className=\"productInfoSocials__button\">\n                                    <span>\n                                    <img src=\"/assets/images/zk/telescope.svg\" alt=\"\" />\n                                    </span>\n                                    <p>\n                                    Watch\n                                    </p>\n                                </a>\n                                <a href=\"#\" className=\"button--social\">\n                                    <svg>\n                                    <span>more</span>\n                                    </svg>\n                                </a>\n                                </div>\n                                <h6>\n                                {colData && colData[5]}\n                                </h6>\n                                <h6>\n                                <span>\n                                    <img src=\"/assets/images/zk/crown.svg\" alt=\"\" />\n                                </span>\n                                <p>\n                                    Royalties enforced.\n                                </p>\n                                </h6>\n                            </div>                                                        \n                        </div>\n                        <div className=\"productInfo__inner-details-items\">\n                            <button onClick={() => {navigate(\"/mint/\" + colData[0]);}} className=\"button--primary\" style={{borderRadius:8, width:\"100%\", marginTop:5}}>Create a new NFT</button>                            \n                        </div>   \n                        {(currentAccount == DevWallet) &&\n                            <div className=\"productInfo__inner-details-items\">\n                                <button onClick={() => {deleteCollection(colId);}} className=\"button--primary\" style={{borderRadius:8, width:\"100%\", marginTop:5}}>Delete Collection</button>                            \n                            </div> \n                        }                     \n                    </div>\n                    </div>\n                </div>\n                </section>\n                <section className=\"controls\">\n                <div className=\"autoContainer\">\n                    <div className=\"controls__inner\">\n                    <div className=\"controls__inner-tabs\">\n                        <span className=\"controls__inner-tabs-button active\">\n                        Items\n                        </span>\n                        <span className=\"controls__inner-tabs-button\">\n                        Activity\n                        </span>\n                        <span className=\"controls__inner-tabs-button\">\n                        Analytics\n                        </span>\n                        <span className=\"controls__inner-tabs-button\">\n                        Announcements\n                        </span>\n                    </div>\n                    <div className=\"controls__inner-tools\">\n                        <div className=\"controls__inner-tools-search\">\n                        <span className=\"button--tool\">\n                            <img src=\"/assets/images/zk/filter.svg\" alt=\"\" />\n                        </span>\n                        <span className=\"button--tool\">\n                            <img src=\"/assets/images/zk/refresh.svg\" alt=\"\" />                           \n                        </span>\n                        <div className=\"input input--search\">\n                            <input type=\"text\" placeholder=\"Search items\"/>\n                            <span>\n                                <img src=\"/assets/images/zk/search.svg\" alt=\"\" />\n                            </span>\n                        </div>\n                        </div>\n                        <div className=\"controls__inner-tools-filter\">\n                        <div className=\"dropdown bg\">\n                            <div className=\"dropdown__button \">\n                            Price: Low to High\n                            <span className=\"arrow\">\n                                <img src=\"/assets/images/zk/arrow-down.svg\" alt=\"\" />\n                            </span>\n                            </div>\n                            <div className=\"dropdown__content\">\n                            <div className=\"dropdown__content-item\">\n                                <div className=\"input--radio\">\n                                <input type=\"radio\" value=\"price-1\" name=\"dropdown-1\" checked />\n                                <label className=\"tick\" for=\"price-1\">\n                                    <span className=\"checkbox__text\">\n                                    <img src=\"/assets/images/zk/tick-circle.svg\" alt=\"\" />\n                                    </span>\n                                    <p>\n                                    Price: Low to High\n                                    </p>\n                                </label>\n                                </div>\n                                <div className=\"input--radio\">\n                                <input type=\"radio\" value=\"price-2\" name=\"dropdown-1\" />\n                                <label className=\"tick\" for=\"price-2\">\n                                    <span className=\"checkbox__text\">\n                                    <img src=\"/assets/images/zk/tick-circle.svg\" alt=\"\" />\n                                    </span>\n                                    <p>\n                                    Price: Low to High\n                                    </p>\n                                </label>\n                                </div>\n                                <div className=\"input--radio\">\n                                <input type=\"radio\" value=\"price-3\" name=\"dropdown-1\" />\n                                <label className=\"tick\" for=\"price-3\">\n                                    <span className=\"checkbox__text\">\n                                    <img src=\"/assets/images/zk/tick-circle.svg\" alt=\"\" />\n                                    </span>\n                                    <p>\n                                    Price: Low to High\n                                    </p>\n                                </label>\n                                </div>\n                            </div>\n                            </div>\n                        </div>\n                        <div className=\"dropdown bg\">\n                            <div className=\"dropdown__button\">\n                            Price: Low to High\n                            <span className=\"arrow\">\n                                <img src=\"/assets/images/zk/arrow-down.svg\" alt=\"\" />\n                            </span>\n                            </div>\n                            <div className=\"dropdown__content\">\n                            <div className=\"dropdown__content-item\">\n                                <div className=\"input--radio\">\n                                <input type=\"radio\" value=\"price-4\" name=\"dropdown-2\" checked />\n                                <label className=\"tick\" for=\"price-4\">\n                                    <span className=\"checkbox__text\">\n                                    <img src=\"/assets/images/zk/tick-circle.svg\" alt=\"\" />\n                                    </span>\n                                    <p>\n                                    Price: Low to High\n                                    </p>\n                                </label>\n                                </div>\n                                <div className=\"input--radio\">\n                                <input type=\"radio\" value=\"price-5\" name=\"dropdown-2\" />\n                                <label className=\"tick\" for=\"price-5\">\n                                    <span className=\"checkbox__text\">\n                                    <img src=\"/assets/images/zk/tick-circle.svg\" alt=\"\" />\n                                    </span>\n                                    <p>\n                                    Price: Low to High\n                                    </p>\n                                </label>\n                                </div>\n                                <div className=\"input--radio\">\n                                <input type=\"radio\" value=\"price-6\" name=\"dropdown-2\" />\n                                <label className=\"tick\" for=\"price-6\">\n                                    <span className=\"checkbox__text\">\n                                    <img src=\"/assets/images/zk/tick-circle.svg\" alt=\"\" />\n                                    </span>\n                                    <p>\n                                    Price: Low to High\n                                    </p>\n                                </label>\n                                </div>\n\n                            </div>\n                            </div>\n                        </div>\n                        <span className=\"button--tool filter active\">\n                            <img src=\"/assets/images/zk/filterIcon1.svg\" alt=\"\" />\n                        </span>\n                        \n                        <span className=\"button--tool filter active\">\n                            <img src=\"/assets/images/zk/filterIcon2.svg\" alt=\"\" />\n                        </span>\n                        </div>\n                    </div>\n                    </div>\n                </div>\n                </section>\n                <section className=\"grid\">\n                <div className=\"autoContainer\">\n                    <NftItems colId={colId} web3Api={web3Api} searchWord={searchWord} chainId={chainId}></NftItems>\n                </div>\n                </section>            \n            <Footer />\n        </div>\n    );\n}\n\nexport default CollectionDetails;\n","import React , { useState , useEffect } from 'react';\n\nimport Header from '../components/header/Header';\nimport Footer from '../components/footer/Footer';\nimport { NFTAddr, IPFS_BASE_URL, VIDEO_TYPE, IMAGE_TYPE, AUDIO_TYPE} from '../config/constants'\nimport { Link , useNavigate} from 'react-router-dom';\n\nconst NFTs = () => {\n    const [currentAccount, setCurrentAccount] = useState(null);   \n    const [chainId, setChainId] = useState(); \n    const setAccount = (_account) => {\n        setCurrentAccount(_account);\n    }\n\n    const [web3Api, setWeb3Api] = useState(null);\n    const [curTab, setCurTab] = useState(\"nft\"); \n    const [nftContract, setNftContract] = useState(); \n\n    const [saleList, setSaleList] = useState([]);\n    const [aucList, setAucList] = useState([]);\n    const [arr, setArr] = useState([]);\n    const [price, setprice] = useState([]);\n    const [pricearr, setpricearr] = useState();\n    const [allFixedSale, setAllFixedSale] = useState([]);\n    const [allp, setallp] = useState([]);\n    const [allprice, setallprice] = useState();\n    const [colllist, setcolllist] = useState();\n    const [alldata, setalldata] = useState([]);\n    const [newlist, setnewlist] = useState([]);\n\n    const navigate = useNavigate();\n    \n    useEffect(async () => {\n        if (chainId, web3Api && currentAccount) {\n            const nftContratFile = await fetch(\"/abis/ZkSeaNFT.json\");\n            const convertNftContratFileToJson = await nftContratFile.json();\n            const nFTAbi = convertNftContratFileToJson;\n    \n            let nftContract = new web3Api.eth.Contract(nFTAbi, NFTAddr[chainId]);\n            setNftContract(nftContract);\n        }        \n    }, [chainId, web3Api, currentAccount])\n\n    useEffect(async () => {\n        if (nftContract) {\n            // saleNft(0);\n            totalcolection();\n        }\n    }, [nftContract])\n\n    // const saleNft = async (id) => {\n    //     if (web3Api) {\n    //         nftContract.methods.listofsalenft(id).call({ from: currentAccount })\n    //             .then((result) => {\n    //                 setSaleList(result[0]);\n    //                 setAucList(result[1]);\n    //                 var listlen = result[0]?.length\n    //                 for (let i = 0; i < listlen; i++) {\n    //                     const ll = result[0][i];\n    //                     if (ll == \"0\") continue;\n    //                     getNftInfo(ll);\n    //                 }\n    //             })\n    //             .catch()\n    //     }\n    // }\n\n    // const getNftInfo = async (id) => {\n    //     // console.log(id)\n    //     if (web3Api) {\n    //         await nftContract.methods.nftinformation(id).call({ from: currentAccount })\n    //         .then((result) => {\n    //             saveAllFixedSaleList({ ...result, 12: JSON.parse(result[5])[1] })\n    //             localStorage.setItem(`buylist${id}`, JSON.stringify(result))\n    //             setArr(id)\n    //             getListOfSaleNft(result[0])\n    //         }).catch()\n    //     }\n    // }\n\n    // const saveAllFixedSaleList = (data) => {\n    //     setAllFixedSale((old) => [\n    //         ...old, data\n    //     ])\n    // }    \n\n    // const getListOfSaleNft = async (id) => {\n    //     if (web3Api) {\n    //         nftContract.methods.listofsalenft(id).call({ from: currentAccount })\n    //         .then((result) => {\n    //             const val = {\n    //                 id: id, value: result[3]\n    //             }\n    //             localStorage.setItem(`normasale${id}`, (result[3]))\n    //             setpricearr(id)\n    //             getallprice(val)\n    //         })\n    //         .catch()\n    //     }\n    // }\n\n    // const getallprice = (data) => {\n    //     if (data.id === \"0\") {\n\n    //     } else {\n    //         setallp((old) => [\n    //             ...old, data\n    //         ])\n    //         setallprice(allp)\n    //     }\n    // }\n\n    // useEffect(() => {\n    //     newlist.map((val, i) => {\n    //         const pist = localStorage.getItem(`normalsale${val}`)\n    //         setprice((old) => {\n    //             return [...old, pist]\n    //         })\n    //     })\n    // }, [arr, pricearr]);\n\n    // const buyNft = (collectionid, tokenid) => {\n    //     buyfixednft(collectionid, tokenid);\n    // }\n\n    // const buyfixednft = async (collectionid, tokenid) => {\n\n    //     let amount = Number((allp.find(p => p.id === tokenid ? allp : null)).value)\n    //     let ckamout = amount / 1000000000000000000\n    //     // console.log(collectionid, tokenid, ckamout) \n\n    //     if (web3Api && ckamout) {\n    //         const accounts = await web3Api.eth.getAccounts();\n    //         setShow(true)\n    //         settokenid(accounts)\n\n    //         let amountIn = web3Api.utils.toBN(fromExponential((ckamout) * Math.pow(10, 18)));\n    //         let address = '0x0000000000000000000000000000000000000000'\n    //         const gasPriceNumber = await getGasPriceZk();\n\n    //         nftContract.methods.buynft(collectionid, tokenid, address).send({ from: currentAccount, value: amountIn , gasPrice: gasPriceNumber})\n    //             .then((recipt) => {\n    //                 setShow(false)\n    //                 // history.push('/mycollection')\n    //             })\n    //             .catch((err) => {\n    //                 setShow(false)\n    //                 settokenid('')\n    //             })\n    //     }\n    // }\n    \n    const totalcolection = async () => {\n        if (web3Api) {\n            nftContract.methods.collectionform().call({ from: currentAccount })\n            .then((length) => {\n                setcolllist(length)\n            })\n            .catch()\n        }\n    }\n\n    useEffect(() => {\n        for (let i = 1; i <= colllist; i++) {\n            // collectiondetails(i);\n            getAllNFTsByCol(i);\n        }\n    }, [colllist]);\n\n    // const collectiondetails = async (id) => {\n    //     if (web3Api) {\n    //         nftContract.methods.collectiondetails(id).call({ from: currentAccount })\n    //             .then((fees) => {\n    //                 getalllist(fees)\n    //             }).catch()\n    //     }\n    // }\n\n    // const getalllist = (data) => {\n    //     setalldata((old) => [\n    //         ...old, data\n    //     ])\n    // }\n\n    const getAllNFTsByCol = async (id) => {\n        if (web3Api) {\n            nftContract.methods.totalnft(id).call()\n            .then((nftcount) => {\n                for (let i = 0; i < nftcount; i++) {\n                    // collectiondetails(i);\n                    getAllNFTs(id, i);\n                }\n            }).catch()\n        }\n    }\n\n    const getAllNFTs = async (id, index) => {\n        if (web3Api) {\n            nftContract.methods.collectionstored(id, index).call({ from: currentAccount })\n                .then((nftId) => {\n                    getNftInfo(nftId);\n                }).catch()\n        }\n    }\n\n    const getNftInfo = async (id) => {\n        // console.log(id)\n        if (web3Api) {\n            await nftContract.methods.nftinformation(id).call({ from: currentAccount })\n            .then((result) => {\n                saveAllFixedSaleList({ ...result, 12: JSON.parse(result[5])[1] })\n            }).catch()\n        }\n    }\n\n    const saveAllFixedSaleList = (data) => {\n        console.log(data)\n        setAllFixedSale((old) => [\n            ...old, data\n        ])\n    }\n    \n    return (\n        <div className='nfts'>\n            <Header setAccount={setAccount} setWeb3Api={setWeb3Api} setChainId={setChainId}/>\n            <section className=\"first-section controls\">\n                <div className=\"autoContainer\">\n                    <div className=\"controls__inner filter\">\n                    <div className=\"controls__inner-filter\">\n                        <div className=\"controls__inner-filter-body\">\n                        <button className={`button--primary ${curTab === \"col\" ? 'active' : ''}`} onClick={() => {setCurTab(\"col\"); navigate(\"/collections\");}}>\n                            Collection\n                        </button>\n                        <button className={`ml-3 button--primary ${curTab === \"nft\" ? 'active' : ''}`} onClick={() => {setCurTab(\"nft\")}}>\n                            NFTs\n                        </button>\n                        </div>\n                        <button className=\"button--secondary\">\n                        View All\n                        </button>\n                    </div>\n                    </div>\n                </div>\n            </section>\n            <section className=\"grid nft\">\n                <div className=\"autoContainer\">\n                    <div className=\"grid__inner\">\n                        {   allFixedSale.map((item, idx) => {\n                                return(\n                                    <div className=\"cartNft\" key={idx}>\n                                        <Link to={`/nft/${item[0]}`}>\n                                            <div className=\"cartNft__image\">\n                                                {VIDEO_TYPE.includes(JSON.parse(item[5])[1]) ?\n                                                    <video alt=\"\" muted autoPlay loop>\n                                                        <source src={IPFS_BASE_URL + item[6]} />\n                                                    </video> \n                                                    : IMAGE_TYPE.includes(JSON.parse(item[5])[1]) ?\n                                                    <img src={IPFS_BASE_URL + item[6]} alt=\"\"/>\n                                                    : AUDIO_TYPE.includes(JSON.parse(item[5])[1]) ?\n                                                    <audio style={{ width: '90%' }} src={IPFS_BASE_URL + item[6]} />\n                                                    : null\n                                                }\n                                                \n                                            </div>\n                                            <div className=\"cartNft__info\">\n                                                <p>{item[1]}</p>\n                                                <span><img src=\"/assets/images/zk/verify.svg\" alt=\"\"/></span>\n                                            </div>\n                                        </Link>                                        \n                                    </div>\n                                )\n                            })\n                        }\n                    </div>\n                </div>\n            </section>\n            <Footer />\n        </div>\n    );\n}\n\nexport default NFTs;\n","import React , { useState , useEffect } from 'react';\nimport fromExponential from 'from-exponential';\n\nimport Header from '../components/header/Header';\nimport Footer from '../components/footer/Footer';\nimport {NFTAddr, IPFS_BASE_URL, VIDEO_TYPE, IMAGE_TYPE, AUDIO_TYPE} from '../config/constants'\nimport { Link, useNavigate } from 'react-router-dom';\nimport { getGasPrice } from '../utils/utils';\n\nconst MyNFTs = () => {\n    const [chainId, setChainId] = useState();\n    const [currentAccount, setCurrentAccount] = useState(null);    \n    const setAccount = (_account) => {\n        setCurrentAccount(_account);\n    }\n\n    const [web3Api, setWeb3Api] = useState(null);\n    const [curTab, setCurTab] = useState(\"nft\"); \n    const [show, setShow] = useState(false); \n    const [nftContract, setNftContract] = useState(); \n\n    const [arr, setArr] = useState([]);\n    const [price, setprice] = useState([]);\n    const [pricearr, setpricearr] = useState();\n    const [allFixedSale, setAllFixedSale] = useState([]);\n    const [allp, setallp] = useState([]);\n    const [tokenid, settokenid] = useState();\n    const [allprice, setallprice] = useState();\n    const [colllist, setcolllist] = useState();\n    const [alldata, setalldata] = useState([]);\n    const [newlist, setnewlist] = useState([])\n\n    const navigate = useNavigate();\n    \n    useEffect(async () => {\n        if (chainId, web3Api && currentAccount) {\n            const nftContratFile = await fetch(\"/abis/ZkSeaNFT.json\");\n            const convertNftContratFileToJson = await nftContratFile.json();\n            const nFTAbi = convertNftContratFileToJson;\n    \n            let nftContract = new web3Api.eth.Contract(nFTAbi, NFTAddr[chainId]);\n            setNftContract(nftContract);\n        }        \n    }, [chainId, web3Api, currentAccount])\n\n    useEffect(async () => {\n        if (nftContract) {\n            saleNft(0);\n            totalcolection();\n        }\n    }, [nftContract])\n\n    const saleNft = async (id) => {\n        if (web3Api) {\n            await nftContract.methods.balanceOf(currentAccount).call({ from: currentAccount })\n            .then((bal) => {\n                if (parseInt(bal) > 0) {\n                    getMyNfts(bal);\n                }                \n            })\n            .catch();\n        }\n    }\n\n    const getMyNfts = async (_balance) => {\n        if (web3Api) {\n            for (let i = 0; i < parseInt(_balance); i++) {\n                let nftId = await nftContract.methods.tokenOfOwnerByIndex(currentAccount, i).call({ from: currentAccount });\n                console.log(' -- nftId -- ', nftId);\n                if (nftId) {\n                    nftInfo(nftId);\n                }\n            }\n        }\n    }\n\n    const nftInfo = async (id) => {\n        if (web3Api) {\n            nftContract.methods.nftinformation(id).call({ from: currentAccount })\n                .then((result) => {\n                    saveFixedSaleList({ ...result, 12: JSON.parse(result[5])[1] });\n                    localStorage.setItem(`buylist${id}`, JSON.stringify(result));\n                    setArr(id);\n                    saleNftPrie(result[0]);\n                }).catch()\n        }\n    }\n\n    const saveFixedSaleList = (data) => {\n        setAllFixedSale((old) => [\n            ...old, data\n        ])\n    }\n\n    const saleNftPrie = async (id) => {\n        if (web3Api) {\n            nftContract.methods.listofsalenft(id).call({ from: currentAccount })\n                .then((length) => {\n                    const val = {\n                        id: id, value: length[3]\n                    }\n                    localStorage.setItem(`normasale${id}`, (length[3]))\n                    setpricearr(id)\n                    getallprice(val)\n                })\n                .catch()\n        }\n    }\n\n    const getallprice = (data) => {\n        if (data.id === \"0\") {\n\n        } else {\n            setallp((old) => [\n                ...old, data\n            ])\n            setallprice(allp)\n        }\n    }\n\n    useEffect(() => {\n        newlist.map((val, i) => {\n            const pist = localStorage.getItem(`normalsale${val}`)\n            setprice((old) => {\n                return [...old, pist]\n            })\n        })\n    }, [arr, pricearr]);\n\n    const buyNft = (collectionid, tokenid) => {\n        buyFixedNft(collectionid, tokenid);\n    }\n\n    const buyFixedNft = async (collectionid, tokenid) => {\n\n        let amount = Number((allp.find(p => p.id === tokenid ? allp : null)).value)\n        let ckamout = amount / 1000000000000000000\n        if (web3Api && ckamout) {\n            const accounts = await web3Api.eth.getAccounts();\n            setShow(true)\n            settokenid(accounts)\n\n            const gasPriceNumber = await getGasPrice();\n\n            let amountIn = web3Api.utils.toBN(fromExponential((ckamout) * Math.pow(10, 18)));\n            let address = '0x0000000000000000000000000000000000000000'\n            nftContract.methods.buynft(collectionid, tokenid, address).send({ from: currentAccount, value: amountIn, gasPrice: gasPriceNumber })\n                .then((recipt) => {\n                    setShow(false)\n                    // history.push('/mycollection')\n                })\n                .catch((err) => {\n                    setShow(false)\n                    settokenid('')\n                })\n        }\n    }\n    \n    const totalcolection = async () => {\n        if (web3Api) {\n            nftContract.methods.collectionform().call({ from: currentAccount })\n                .then((result) => {\n                    setcolllist(result)\n                })\n                .catch()\n        }\n    }\n\n    useEffect(() => {\n        for (let i = 1; i <= colllist; i++) {\n            collectiondetails(i);\n        }\n    }, [colllist]);\n\n    const collectiondetails = async (id) => {\n        if (web3Api) {\n            nftContract.methods.collectiondetails(id).call({ from: currentAccount })\n                .then((fees) => {\n                    getalllist(fees)\n                }).catch()\n        }\n    }\n\n    const getalllist = (data) => {\n        setalldata((old) => [\n            ...old, data\n        ])\n    }\n    const handleClick = (Id) => {\n        // const col = alldata?.find(p => p[0] === Id);\n        localStorage.setItem('a', Id)\n    }\n    \n    return (\n        <div className='nfts'>\n            <Header setAccount={setAccount} setWeb3Api={setWeb3Api} setChainId={setChainId}/>\n            <section className=\"first-section controls\">\n                <div className=\"autoContainer\">\n                    <div className=\"controls__inner filter\">\n                    <div className=\"controls__inner-filter\">\n                        <div className=\"controls__inner-filter-body\">\n                        <button className={`button--primary ${curTab === \"col\" ? 'active' : ''}`} onClick={() => {setCurTab(\"col\"); navigate(\"/my-collections\");}}>\n                            Collection\n                        </button>\n                        <button className={`ml-3 button--primary ${curTab === \"nft\" ? 'active' : ''}`} onClick={() => {setCurTab(\"nft\")}}>\n                            NFTs\n                        </button>\n                        </div>\n                        <button className=\"button--secondary\">\n                        View All\n                        </button>\n                    </div>\n                    </div>\n                </div>\n            </section>\n            <section className=\"grid nft\">\n                <div className=\"autoContainer\">\n                    <div className=\"grid__inner\">\n                        {   allFixedSale.map((item, idx) => {\n                                return(\n                                    <div className=\"cartNft\" key={idx}>\n                                        <Link to={`/nft/${item[0]}`}>\n                                            <div className=\"cartNft__image\">\n                                                {VIDEO_TYPE.includes(JSON.parse(item[5])[1]) ?\n                                                    <video alt=\"\" muted autoPlay loop>\n                                                        <source src={IPFS_BASE_URL + item[6]} />\n                                                    </video> \n                                                    : IMAGE_TYPE.includes(JSON.parse(item[5])[1]) ?\n                                                    <img src={IPFS_BASE_URL + item[6]} alt=\"\"/>\n                                                    : AUDIO_TYPE.includes(JSON.parse(item[5])[1]) ?\n                                                    <audio style={{ width: '90%' }} src={IPFS_BASE_URL + item[6]} />\n                                                    : null\n                                                }\n                                            </div>\n                                            <div className=\"cartNft__info\">\n                                                <p>{item[1]}</p>\n                                                <span><img src=\"/assets/images/zk/verify.svg\" alt=\"\"/></span>\n                                            </div>\n                                        </Link>                                        \n                                    </div>\n                                )\n                            })\n                        }\n                    </div>\n                </div>\n            </section>\n            <Footer />\n        </div>\n    );\n}\n\nexport default MyNFTs;\n","import React , { useState , useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\n\nimport Header from '../components/header/Header';\nimport Footer from '../components/footer/Footer';\nimport {NFTAddr, DevWallet} from '../config/constants'\n\nconst IPFS_BASE_URL = \"https://ipfs.io/ipfs/\";\n\nconst Collections = () => {\n    const [chainId, setChainId] = useState();\n    const [currentAccount, setCurrentAccount] = useState(null);\n    const setAccount = (_account) => {\n        setCurrentAccount(_account);\n    }\n\n    const [web3Api, setWeb3Api] = useState(null);\n    const [colList, setColList] = useState([]);\n    const [allColData, setAllColData] = useState([]);\n    const [curTab, setCurTab] = useState(\"col\"); \n    const [show, setShow] = useState(false); \n    const [nftContract, setNftContract] = useState(); \n    const navigate = useNavigate();\n    \n    useEffect(async () => {\n        if (chainId && web3Api) {\n            getAllCollections();\n        }\n    }, [chainId, web3Api])\n\n    const getAllCollections = async () => {\n\n        if (web3Api) {\n            setShow(true);\n\n            const accounts = await web3Api.eth.getAccounts();\n            let usrWallet = accounts[0];\n            const nftContratFile = await fetch(\"/abis/ZkSeaNFT.json\");\n            const convertNftContratFileToJson = await nftContratFile.json();\n            const nFTAbi = convertNftContratFileToJson;\n\n            let nftContract = new web3Api.eth.Contract(nFTAbi, NFTAddr[chainId]);\n            setNftContract(nftContract);\n\n            nftContract.methods.collectionform().call({ from: usrWallet })\n            .then((result) => {\n                setColList(result)\n                // console.log('result', result)\n            })\n            .catch();\n        }\n    }\n\n    useEffect(() => {\n        if (web3Api) {\n            for (let i = 1; i <= colList; i++) {\n                getCollectionDetails(i);\n            }\n        }\n\n    }, [colList, web3Api])\n\n    const getCollectionDetails = async (id) => {\n        if (web3Api) {\n            nftContract.methods.collectiondetails(id).call()\n            .then((_details) => {\n                if (_details[1] === '0x0000000000000000000000000000000000000000') {\n\n                } else {\n                    makeAllColList(_details)\n                }\n            }).catch()\n        }\n    }\n\n    const makeAllColList = (data) => {\n        setAllColData((old) => [\n            ...old, data\n        ])\n    }\n\n    return (\n        <div className='nfts'>\n            <Header setAccount={setAccount} setWeb3Api={setWeb3Api} setChainId={setChainId} />\n            <section className=\"first-section controls\">\n                <div className=\"autoContainer\">\n                    <div className=\"controls__inner filter\">\n                    <div className=\"controls__inner-filter\">\n                        <div className=\"controls__inner-filter-body\">\n                        <button className={`button--primary ${curTab === \"col\" ? 'active' : ''}`} onClick={() => {setCurTab(\"col\")}}>\n                            Collection\n                        </button>\n                        <button className={`ml-3 button--primary ${curTab === \"nft\" ? 'active' : ''}`} onClick={() => {setCurTab(\"nft\"); navigate(\"/nfts\");}}>\n                            NFTs\n                        </button>\n                        </div>\n                        <button className=\"button--secondary\">\n                        View All\n                        </button>\n                    </div>\n                    </div>\n                </div>\n            </section>\n            <section className=\"grid nft\">\n                <div className=\"autoContainer\">\n                    <div className=\"grid__inner\">\n                        { \n                            allColData.map((item, idx) => {\n                                return(\n                                    <div className=\"cartNft\" key={idx}>\n                                        <Link to={`/collection/${item[0]}`}>\n                                            <div className=\"cartNft__image\">\n                                                <img src={IPFS_BASE_URL + item[6]} alt=\"\"/>\n                                            </div>\n                                            <div className=\"cartNft__info\">\n                                                <p>{item[2]}</p>\n                                                <span><img src=\"/assets/images/zk/verify.svg\" alt=\"\"/></span>\n                                            </div>\n                                        </Link>                                        \n                                    </div>\n                                )\n                            })\n                        }\n                    </div>\n                </div>\n            </section>\n            <Footer />\n        </div>\n    );\n}\n\nexport default Collections;\n","import React , { useState , useEffect } from 'react';\nimport { Link, useParams, useNavigate } from 'react-router-dom';\n\nimport Header from '../components/header/Header';\nimport Footer from '../components/footer/Footer';\nimport {NFTAddr, DevWallet, IPFS_BASE_URL, VIDEO_TYPE, IMAGE_TYPE, AUDIO_TYPE} from '../config/constants'\n\nconst MyCollections = () => {\n    const [chainId, setChainId] = useState();\n    const [currentAccount, setCurrentAccount] = useState(null);\n    const setAccount = (_account) => {\n        setCurrentAccount(_account);\n    }\n\n    const [web3Api, setWeb3Api] = useState(null);\n    const [allColData, setAllColData] = useState([]);\n    const [curTab, setCurTab] = useState(\"col\"); \n    const [show, setShow] = useState(false); \n    const [nftContract, setNftContract] = useState(); \n\n    const navigate = useNavigate();\n    \n    useEffect(async () => {\n        if (chainId, web3Api && currentAccount) {\n            const nftContratFile = await fetch(\"/abis/ZkSeaNFT.json\");\n            const convertNftContratFileToJson = await nftContratFile.json();\n            const nFTAbi = convertNftContratFileToJson;\n    \n            let nftContract = new web3Api.eth.Contract(nFTAbi, NFTAddr[chainId]);\n            setNftContract(nftContract);\n        }        \n    }, [chainId, web3Api, currentAccount])\n\n    useEffect(async () => {\n        if (nftContract) {\n            getMyCollections();\n        }\n    }, [nftContract])\n\n    const getMyCollections = async () => {\n        if (web3Api) {\n            nftContract.methods.totalcollectiondetails().call({ from: currentAccount })\n                .then((result) => {\n                    console.log(\"fees\", result);\n                    for (let i = 0; i < result?.length; i++) {\n                        getCollectionDetails(result[i]);\n                    }\n                })\n                .catch((err) => {\n                    console.log('ererr', err)\n                })\n\n        }\n    }\n\n    const getCollectionDetails = async (id) => {\n        if (web3Api) {\n            nftContract.methods.collectiondetails(id).call()\n            .then((_details) => {\n                if (_details[1] === '0x0000000000000000000000000000000000000000') {\n\n                } else {\n                    makeAllColList(_details)\n                }\n            }).catch()\n        }\n    }\n\n    const makeAllColList = (data) => {\n        setAllColData((old) => [\n            ...old, data\n        ])\n    }\n\n    return (\n        <div className='nfts'>\n            <Header setAccount={setAccount} setWeb3Api={setWeb3Api} setChainId={setChainId} />\n            <section className=\"first-section controls\">\n                <div className=\"autoContainer\">\n                    <div className=\"controls__inner filter\">\n                    <div className=\"controls__inner-filter\">\n                        <div className=\"controls__inner-filter-body\">\n                        <button className={`button--primary ${curTab === \"col\" ? 'active' : ''}`} onClick={() => {setCurTab(\"col\");}}>\n                            Collection\n                        </button>\n                        <button className={`ml-3 button--primary ${curTab === \"nft\" ? 'active' : ''}`} onClick={() => {setCurTab(\"nft\"); navigate(\"/my-nfts\");}}>\n                            NFTs\n                        </button>\n                        </div>\n                        <button className=\"button--secondary\">\n                        View All\n                        </button>\n                    </div>\n                    </div>\n                </div>\n            </section>\n            <section className=\"grid nft\">\n                <div className=\"autoContainer\">\n                    <div className=\"grid__inner\">\n                        { \n                            allColData.map((item, idx) => {\n                                return(\n                                    <div className=\"cartNft\" key={idx}>\n                                        <Link to={`/collection/${item[0]}`}>\n                                            <div className=\"cartNft__image\">\n                                                <img src={IPFS_BASE_URL + item[6]} alt=\"\"/>\n                                            </div>\n                                            <div className=\"cartNft__info\">\n                                                <p>{item[2]}</p>\n                                                <span><img src=\"/assets/images/zk/verify.svg\" alt=\"\"/></span>\n                                            </div>\n                                        </Link>                                        \n                                    </div>\n                                )\n                            })\n                        }\n                    </div>\n                </div>\n            </section>\n            <Footer />\n        </div>\n    );\n}\n\nexport default MyCollections;\n","import React, { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport fromExponential from 'from-exponential';\n\nimport Header from '../components/header/Header';\nimport Footer from '../components/footer/Footer';\nimport { NFTAddr, DevWallet, IPFS_BASE_URL, VIDEO_TYPE, IMAGE_TYPE, AUDIO_TYPE } from '../config/constants'\nimport { getGasPriceZk } from '../utils/utils';\n\nconst AuctionDetails = () => {\n    const { nftid } = useParams()\n    const [chainId, setChainId] = useState();\n    const [currentAccount, setCurrentAccount] = useState(null);\n    const setAccount = (_account) => {\n        setCurrentAccount(_account);\n    }\n    const [web3Api, setWeb3Api] = useState(null);\n    const [nftContract, setNftContract] = useState();\n    const [colData, setColData] = useState();\n    const [show, setShow] = useState();\n    const [buyPrice, setBuyPrice] = useState();\n    const [balance, setBalance] = useState();\n    const [aucBuyPrice, setAucBuyPrice] = useState();\n    const [aucOwner, setAucOwner] = useState();\n    const [aucStat, setAucStat] = useState();\n    const [nOwner, setNOwner] = useState();\n    const [aucTime, setAucTime] = useState();\n    const [newBidPrice, setNewBidPrice] = useState();\n    const [nftData, setNftData] = useState();\n\n    useEffect(async () => {\n        if (chainId, web3Api && currentAccount) {\n            const nftContratFile = await fetch(\"/abis/ZkSeaNFT.json\");\n            const convertNftContratFileToJson = await nftContratFile.json();\n            const nFTAbi = convertNftContratFileToJson;\n\n            let nftContract = new web3Api.eth.Contract(nFTAbi, NFTAddr[chainId]);\n            setNftContract(nftContract);\n\n            const balance = await web3Api.eth.getBalance(currentAccount);\n            setBalance(web3Api.utils.fromWei(balance, 'ether'));\n        }\n    }, [chainId, web3Api, currentAccount])\n\n    useEffect(async () => {\n        if (web3Api && nftContract) {\n            if (nftid) {\n                saleNft(nftid)\n                auctionDetail(nftid)\n                timer1(nftid)\n                nftInfo(nftid)\n                auctionState(nftid)\n                owner(nftid)\n            }\n        }\n    }, [web3Api, nftContract])\n\n    const getCollectionDetails = async (id) => {\n        if (web3Api) {\n            nftContract.methods.collectiondetails(id).call()\n                .then((data) => {\n                    setColData(data)\n                }).catch()\n        }\n    }\n\n    const saleNft = async (id) => {\n        if (web3Api) {\n            nftContract.methods.listofsalenft(id).call({ from: currentAccount })\n                .then((length) => {\n                    console.log(length[3]);\n                    setBuyPrice((Number(length[3])) / 1000000000000000000)\n                    setAucBuyPrice(((Number(length[2])) / 1000000000000000000))\n                })\n                .catch()\n        }\n    }\n\n    const auctionDetail = async (id) => {\n        if (web3Api) {\n            nftContract.methods.auctiondetail(id).call({ from: currentAccount })\n                .then((value) => {\n                    var aucde = {\n                        id: value[1],\n                        val: (Number(value[0]))?.length > 21 ? Number(value[0]) / 1000000000000000000000000000000000000 : Number(value[0]) / 1000000000000000000,\n                        userid: id\n                    }\n                    setAucOwner(aucde)\n                }).catch()\n\n        }\n    }\n\n    const auctionState = async (tokenid) => {\n        if (web3Api) {\n            nftContract.methods.nftauctionend(tokenid).call({ from: currentAccount })\n                .then((result) => {\n                    setAucStat(result)\n                })\n                .catch()\n        }\n    }\n\n    const owner = async (tokenid) => {\n        if (web3Api) {\n            nftContract.methods.originalowner(tokenid).call({ from: currentAccount })\n                .then((result) => {\n                    setNOwner(result)\n                })\n                .catch()\n        }\n    }\n\n    // const timer = async (id) => {\n    //     if (web3Api) {\n    //         nftContract.methods.timing(id).call({ from: currentAccount })\n    //             .then((result) => {\n    //                 var day = Math.floor(result / 86400)\n    //                 var hr = Math.floor((result - day * 86400) / 3600)\n    //                 var minutesout = Math.floor((result - day * 86400 - hr * 3600) / 60);\n    //             }).catch()\n    //     }\n    // }\n\n    const timer1 = async (id) => {\n        if (web3Api) {\n            nftContract.methods.timing(id).call({ from: currentAccount })\n                .then((result) => {\n                    var day = Math.floor(result / 86400)\n                    var hr = Math.floor((result - day * 86400) / 3600)\n                    var minutesout = Math.floor((result - day * 86400 - hr * 3600) / 60);\n                    setAucTime({ id: id, d: day, h: hr, m: minutesout })\n                }).catch()\n        }\n    }    \n\n    const nftInfo = async (id) => {\n        if (web3Api) {\n            nftContract.methods.nftinformation(id).call({ from: currentAccount })\n                .then((result) => {\n                    setNftData(result);\n                    getCollectionDetails(result[7]);\n                }).catch()\n\n        }\n    }\n\n    const auction = async () => {\n        // if (web3Api) {\n        //     setShow(true)\n        //     const gasPriceNumber = await getGasPriceZk();\n\n        //     let priceIn = web3Api.utils.toBN(fromExponential(((parseFloat(newBidPrice)) * Math.pow(10, 18))));\n\n        //     nftContract.methods.startauction(nftid, priceIn, 0, 24).send({ from: currentAccount, gasPrice: gasPriceNumber})\n        //         .then((recipt) => {\n        //             if (recipt.status === true) {\n        //                 setShow(false)\n        //                 // history.push('/mycollection')\n        //             } else {\n        //                 alert('failed')\n        //             }\n        //         })\n        //         .catch(err => {\n        //             setShow(false)\n        //         })\n        // }\n    }\n\n    return (\n        <div className='item-details'>\n            <Header setAccount={setAccount} setWeb3Api={setWeb3Api} setChainId={setChainId}/>\n            <section className=\"first-section productDetails\">\n                <div className=\"autoContainer\">\n                    <div className=\"productDetails__inner\">\n                        <div className=\"productDetails__inner-image\">\n                            {nftData && (VIDEO_TYPE.includes(JSON.parse(nftData[5])[1]) ?\n                                <video alt=\"\" muted autoPlay loop>\n                                    <source src={IPFS_BASE_URL + nftData[6]} />\n                                </video> \n                                : IMAGE_TYPE.includes(JSON.parse(nftData[5])[1]) ?\n                                <img src={IPFS_BASE_URL + nftData[6]} alt=\"\"/>\n                                : AUDIO_TYPE.includes(JSON.parse(nftData[5])[1]) ?\n                                <audio style={{ width: '90%' }} src={IPFS_BASE_URL + nftData[6]} />\n                                : null)\n                            }\n                        </div>\n                        <div className=\"productDetails__inner-info\">\n                            <h2>Place a bid</h2>\n                            <p>Once your bid is placed, you will be the highest bidder in the auction. Learn more.</p>\n                            <div className=\"productDetails__inner-info-tools\">\n                                <h5>\n                                    <p>\n                                        {nftData && nftData[3]}\n                                    </p>\n                                    <div>\n                                        <span>\n                                            <img src=\"/assets/images/zk/share.svg\" alt=\"\" />\n                                        </span>\n                                        <small>\n                                            Share\n                                        </small>\n                                    </div>\n                                </h5>\n                                <button className=\"refresh\">\n                                    <img src=\"/assets/images/zk/refreshGradient.svg\" alt=\"\" />\n                                </button>\n                            </div>\n                            <div className=\"productDetails__inner-info-text\">\n                                <input onChange={(e) => setNewBidPrice(e.target.value)} type=\"text\" name=\"text\" placeholder=\"0\" />\n                            </div>\n                            \n                            <div className=\"productDetails__inner-info-text\">\n                                <h5>\n                                    Market Place Price\n                                </h5>\n                                <p>\n                                    <span>\n                                        <img src=\"/assets/images/zk/eth.svg\" alt=\"\" />\n                                    </span>\n                                    {buyPrice}\n                                </p>\n                            </div>\n                            <div className=\"productDetails__inner-info-text\">\n                                <h5>\n                                    Wallet Balance\n                                </h5>\n                                <p>\n                                    <span>\n                                        <img src=\"/assets/images/zk/eth.svg\" alt=\"\" />\n                                    </span>\n                                    {balance}\n                                </p>\n                            </div>\n\n                            <button className=\"button--primary\" style={{borderRadius:8, width:\"100%\"}} onClick={() => {auction();}}>Place a Bid</button>\n                            \n                            {/* <button className=\"button--primary\" onClick={ nOwner == currentAccount }>Buy NFT</button>\n                            <button className=\"button--primary\">Set Sale Price</button>\n                            <button className=\"button--primary\">Cancel</button>\n                            <button className=\"button--primary\">Auction</button> */}\n\n                        </div>\n                    </div>\n                </div>\n            </section>\n            <Footer />\n        </div>\n    );\n}\n\nexport default AuctionDetails;\n","import NftDetails from \"./NftDetails\";\nimport CollectionDetails from \"./CollectionDetails\";\nimport CreateCollection from \"./CreateCollection\";\nimport CreateNFT from \"./CreateNFT\";\nimport Nfts from \"./Nfts\";\nimport MyNfts from \"./MyNfts\";\nimport Collections from \"./Collections\";\nimport MyCollections from \"./MyCollections\";\nimport AuctionDetails from \"./AuctionDetails\";\nimport FreeMint from \"./FreeMint\";\n\nconst routes = [\n  { path: '/', component: <Collections />},\n  { path: '/create', component: <CreateCollection />},\n  { path: '/mint/:colId', component: <CreateNFT />},\n  { path: '/nfts', component: <Nfts />},\n  { path: '/my-nfts', component: <MyNfts />},\n  { path: '/nft/:nftid', component: <NftDetails />},\n  { path: '/bid/:nftid', component: <AuctionDetails />},\n  { path: '/collections', component: <Collections />},\n  { path: '/my-collections', component: <MyCollections />},\n  { path: '/collection/:colId', component: <CollectionDetails />},\n  { path: '/freemint', component: <FreeMint />},\n]\n\nexport default routes;","import './App.css';\nimport 'maptalks/dist/maptalks.css';\nimport {   Routes , Route } from 'react-router-dom';\nimport routes from './pages/index'\n\n\nfunction App() {\n\n    return (\n        <Routes >\n            {\n            routes.map((data,index) => (\n                <Route onUpdate={() => window.scrollTo(0, 0)} exact={true} path={data.path} element={data.component} key={index} />\n            ))\n            }\n      </Routes>\n    );\n}\n\nexport default App;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom'\nimport ScrollToTop from './ScrollToTop';\n\nReactDOM.render(\n  <BrowserRouter >\n    <ScrollToTop />\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n","export const DevWallet=\"0x99E877887Dc1fE2Bf960FE5fe24C5C5808609F59\"\r\nexport const IPFS_BASE_URL = \"https://ipfs.io/ipfs\";\r\nexport const VIDEO_TYPE = [\"video/mp4\", \"video/mov\", \"video/webm\"];\r\nexport const IMAGE_TYPE = [\"image/jpeg\", \"image/png\", \"image/gif\", \"image/svg\", \"image/jpg\"];\r\nexport const AUDIO_TYPE = [\"audio/mpeg\"];\r\n\r\nexport const NFTAddr = {\r\n    56: \"0x6BDB4Eff77dcBB4a4E9D39cA99B5e7c0e315e7c2\",\r\n    324: \"0x6BDB4Eff77dcBB4a4E9D39cA99B5e7c0e315e7c2\",\r\n    42161: \"0x6BDB4Eff77dcBB4a4E9D39cA99B5e7c0e315e7c2\",\r\n    280: \"0x6BDB4Eff77dcBB4a4E9D39cA99B5e7c0e315e7c2\",\r\n}\r\n\r\nexport const CHAIN_ZKMAIN = 324;\r\nexport const CHAIN_ZKTEST = 280;\r\nexport const CHAIN_BSC = 56;\r\nexport const CHAIN_ARBI_ONE = 42161;\r\n\r\nexport const CHAIN_INFO = {\r\n    56: {\r\n        chainId: '0x38',\r\n        chainName: 'Binace Smart Chain',\r\n        nativeCurrency: {\r\n            name: 'BNB',\r\n            symbol: 'BNB',\r\n            decimals: 18,\r\n        },\r\n        rpcUrls: ['https://bsc-dataseed.binance.org/'],\r\n        blockExplorerUrls: ['https://bscscan.com/'],\r\n    },\r\n\r\n    324: {\r\n        chainId: '0x144',\r\n        chainName: 'Zksync Main Net',\r\n        nativeCurrency: {\r\n            name: 'ETH',\r\n            symbol: 'ETH',\r\n            decimals: 18,\r\n        },\r\n        rpcUrls: ['https://mainnet.era.zksync.io'],\r\n        blockExplorerUrls: ['https://explorer.zksync.io/'],\r\n    },\r\n\r\n    42161: {\r\n        chainId: '0xA4B1',\r\n        chainName: 'Arbitrum One',\r\n        nativeCurrency: {\r\n            name: 'ETH',\r\n            symbol: 'ETH',\r\n            decimals: 18,\r\n        },\r\n        rpcUrls: [''],\r\n        blockExplorerUrls: ['https://arbiscan.io/'],\r\n    },\r\n\r\n    280: {\r\n        chainId: '0x118',\r\n        chainName: 'Zksync Test Net',\r\n        nativeCurrency: {\r\n            name: 'ETH',\r\n            symbol: 'ETH',\r\n            decimals: 18,\r\n        },\r\n        rpcUrls: ['https://zksync2-testnet.zksync.dev'],\r\n        blockExplorerUrls: ['https://goerli.explorer.zksync.io/'],\r\n    },\r\n}","import { ethers } from \"ethers\";\r\nimport Web3 from \"web3\"\r\nimport fromExponential from \"from-exponential\";\r\nimport { Provider } from \"zksync-web3\";\r\nimport { CHAIN_ARBI_ONE, CHAIN_BSC, CHAIN_INFO, CHAIN_ZKMAIN, CHAIN_ZKTEST } from \"../config/constants\";\r\n\r\nexport const getGasPrice = async () => {\r\n\r\n    const chainSavedId = localStorage.getItem('nftzksea-chainId'); \r\n    let gasPriceNumber;\r\n    let provider;\r\n    let gasPriceInUnits;\r\n    let web3;\r\n\r\n    switch (chainSavedId) {\r\n        case CHAIN_ZKTEST:\r\n            // const signer = (new Web3Provider(window.ethereum)).getSigner();\r\n            provider = new Provider('https://testnet.era.zksync.dev');\r\n            gasPriceInUnits = await provider.getGasPrice();\r\n            gasPriceNumber = fromExponential(parseFloat(ethers.utils.formatUnits(gasPriceInUnits, 9)) * Math.pow(10, 9));\r\n            break;\r\n            \r\n        case CHAIN_ZKMAIN:\r\n            // const signer = (new Web3Provider(window.ethereum)).getSigner();\r\n            provider = new Provider('https://mainnet.era.zksync.io');\r\n            gasPriceInUnits = await provider.getGasPrice();\r\n            gasPriceNumber = fromExponential(parseFloat(ethers.utils.formatUnits(gasPriceInUnits, 9)) * Math.pow(10, 9));\r\n            break;\r\n            \r\n        case CHAIN_ARBI_ONE:\r\n            web3 = new Web3(new Web3.providers.HttpProvider(CHAIN_INFO[CHAIN_ARBI_ONE].rpcUrls));\r\n            gasPriceInUnits = await web3.eth.getGasPrice();\r\n            gasPriceNumber = fromExponential(parseFloat(ethers.utils.formatUnits(gasPriceInUnits, 9)) * Math.pow(10, 9));\r\n            break;\r\n        \r\n        case CHAIN_BSC:\r\n            web3 = new Web3(new Web3.providers.HttpProvider(CHAIN_INFO[CHAIN_BSC].rpcUrls));\r\n            gasPriceInUnits = await web3.eth.getGasPrice();\r\n            gasPriceNumber = fromExponential(parseFloat(ethers.utils.formatUnits(gasPriceInUnits, 9)) * Math.pow(10, 9));\r\n            break;            \r\n    \r\n        default:\r\n            // const signer = (new Web3Provider(window.ethereum)).getSigner();\r\n            provider = new Provider('https://testnet.era.zksync.dev');\r\n            gasPriceInUnits = await provider.getGasPrice();\r\n            gasPriceNumber = fromExponential(parseFloat(ethers.utils.formatUnits(gasPriceInUnits, 9)) * Math.pow(10, 9));\r\n            break;\r\n    }\r\n    \r\n};","import React , { useState, useEffect } from 'react';\nimport { create } from 'ipfs-http-client'\nimport { useNavigate } from 'react-router-dom';\n\nimport Header from '../components/header/Header';\nimport Footer from '../components/footer/Footer';\nimport {NFTAddr, DevWallet} from '../config/constants'\nimport { getGasPrice } from '../utils/utils';\n\nconst projectId = '2El2aEUHT8Nd5OYGu6J4aH52G8u';   // <---------- your Infura Project ID\nconst projectSecret = '2fe6b07c9760882f34bd4965e0841ac0';  // <---------- your Infura Secret\n// (for security concerns, consider saving these values in .env files)\n\nconst auth = 'Basic ' + Buffer.from(projectId + ':' + projectSecret).toString('base64');\n\nconst ipfsClient = create({\n    host: 'ipfs.infura.io',\n    port: 5001,\n    protocol: 'https',\n    headers: {\n        authorization: auth,\n    },\n    timeout:'2m'\n});\n\nconst CreateCollection = () => {\n    const [chainId, setChainId] = useState();\n    const [currentAccount, setCurrentAccount] = useState(null);    \n    const [image, setImage] = useState(); \n    const setAccount = (_account) => {\n        setCurrentAccount(_account);\n    }\n    const [web3Api, setWeb3Api] = useState(null);\n\n    const [buffer, setBuffer] = useState();\n    const [displayImage, setDisplayImage] = useState();\n    const [data, setData] = useState({\n        collectionName: \"\", displayName: \"\", websiteUrl: \"\", collectionDescription: \"\", marketFee: \"0\"\n    })\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const [dataType, setDataType] = useState();\n    const [errStr, setError] = useState(false);\n    const [underminting, setUnderminting] = useState(false);\n    const [nftContract, setNftContract] = useState();\n    const [errText, setErrText] = useState(\"\");\n\n    const navigate = useNavigate();\n\n    useEffect(async () => {\n        if (chainId && web3Api && currentAccount) {\n            const nftContratFile = await fetch(\"/abis/ZkSeaNFT.json\");\n            const convertNftContratFileToJson = await nftContratFile.json();\n            const nFTAbi = convertNftContratFileToJson;\n    \n            let nftContract = new web3Api.eth.Contract(nFTAbi, NFTAddr[chainId]);\n            setNftContract(nftContract);\n        }        \n    }, [chainId, web3Api, currentAccount])\n\n    const selectImage = (e) => {\n        setErrText(\"\");\n        if (e.target.files[0]?.type === \"image/jpeg\" || e.target.files[0]?.type === \"image/png\" || e.target.files[0]?.type === \"image/gif\" || e.target.files[0]?.type === \"image/svg\" || e.target.files[0]?.type === \"image/jpg\") {\n            setDataType(e.target.files[0]?.type)\n            setImage(e.target.files[0])\n            const file = e.target.files[0];\n            const render = new FileReader()\n            render.onload = () => {\n                if (render.readyState === 2) {\n                    setDisplayImage(render.result)\n                }\n                const reader = new window.FileReader()\n                reader.readAsArrayBuffer(file)\n                reader.onloadend = () => {\n                    const buffer = Buffer.from(reader.result);\n                    setBuffer(buffer);\n                }\n            }\n            if (e.target.files[0]) {\n                render.readAsDataURL(e.target.files[0]);\n            }\n        } else {\n            alert('Choose the supported file')\n        }\n    }\n\n    const submit = async (_event) => {\n\n        _event.preventDefault();\n        // back if under minting\n        if(underminting) return;\n        \n        if (web3Api) {\n            setErrText(\"\");\n            setUnderminting(true);\n            try {\n                const uploadResult = await ipfsClient.add(buffer);\n                createCollection(uploadResult.path)\n            } catch (error) {\n                console.log('error - IPFS', error);\n                setErrText(\"Error from IPFS\")\n                setUnderminting(false)\n            }\n            \n        } else {\n            setErrText(\"Connect to wallet\")\n            setUnderminting(false)\n        }\n    }\n\n    const checkDuplicatedImage = async (_imgPath) => {        \n        return await nftContract.methods.stopduplicate(_imgPath).call();\n    }\n\n    const createCollection = async (_imgPath) => {\n        if (web3Api) {\n\n            const duplicatedImage = await checkDuplicatedImage(_imgPath);\n            if (duplicatedImage == true) {\n                setUnderminting(false);\n                setErrText(\"Collection image already used.\");\n                return false;\n            }  \n\n            setUnderminting(true);\n            const gasPriceNumber = await getGasPrice();\n\n            nftContract.methods.createcollection(data.collectionName, data.displayName, data.websiteUrl, data.collectionDescription, _imgPath, parseInt(data.marketFee)).send({ from: currentAccount, gasPrice: gasPriceNumber })\n            .then((result) => {                \n                console.log(result);\n                setErrText(\"\");\n                setUnderminting(false);\n                navigate(\"/my-collections\");\n            }).catch((err) => {\n                setErrText(\"\");\n                setUnderminting(false)\n            })\n        }\n    }\n\n    return (\n        <div className='nftland'>\n            <Header setAccount={setAccount} setWeb3Api={setWeb3Api} setChainId={setChainId}/>\n            <section className=\"main-section creatCollection\">\n                <div className=\"autoContainer\">\n                    <div className=\"creatCollection__inner\">\n                        <div className=\"creatCollection__inner-image\">\n                            <div className=\"ratioImage\">\n                                {displayImage ? <img src={displayImage} alt=\"\" /> : <img src=\"/assets/images/default.jpg\" style={{ objectFit: 'contain', width: '100%' }} />}\n                            </div>\n                        </div>\n                        <form className=\"creatCollection__inner-form\" onSubmit={submit} style={{paddingBottom: 60}}>\n                            <div className=\"creatCollection__form-buttons\">\n                                <button className=\"button--primary\">Create Collection</button>\n                                <button className=\"button--border\">\n                                    <span> Collection Details </span>\n                                </button>\n                            </div>\n                            <div className=\"creatCollection__form-file\">\n                                <h5>File type supported: JPG,JPEG,PNG,GIF</h5>\n                                <div className=\"creatCollection__form-file-input\">\n                                <input type=\"file\" name=\"sd\" id=\"\" onChange={selectImage}/>\n                                <span><img src=\"/assets/images/zk/document-upload.svg\" alt=\"\" /></span>\n                                <p>Choose a file</p>\n                                </div>\n                            </div>\n                            <div className=\"creatCollection__form-inputs\">\n                                <input type=\"text\" placeholder=\"Collection Name\" onChange={(e) => setData({ ...data, collectionName: e.target.value })}/>\n                                <textarea placeholder=\"Description\" onChange={(e) => setData({ ...data, collectionDescription: e.target.value })}></textarea>\n                                <div className=\"creatCollection__form-inputs-body\">\n                                    <input type=\"text\" placeholder=\"Display Name\" onChange={(e) => setData({ ...data, displayName: e.target.value })}/>\n                                    <input type=\"text\" placeholder=\"Website\" onChange={(e) => setData({ ...data, websiteUrl: e.target.value })}/>\n                                </div>\n                            </div>\n                            <button className=\"button--primary\">Create Collection {underminting && <i className='fas fa-spinner fa-pulse fa-1x ml-3'></i>}</button>\n                            <p style={{color:\"red\", position:\"absolute\", bottom:10}}>{errText}</p>\n                        </form>\n                    </div>                    \n                </div>\n            </section>\n            <Footer />\n        </div>\n    );\n}\n\nexport default CreateCollection;\n","import React , { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport {ethers, BigNumber} from \"ethers\"\nimport { create } from 'ipfs-http-client'\n\nimport Header from '../components/header/Header';\nimport Footer from '../components/footer/Footer';\nimport {NFTAddr, DevWallet} from '../config/constants'\nimport { getGasPrice } from '../utils/utils';\n\nconst projectId = '2El2aEUHT8Nd5OYGu6J4aH52G8u';   // <---------- your Infura Project ID\nconst projectSecret = '2fe6b07c9760882f34bd4965e0841ac0';  // <---------- your Infura Secret\n// (for security concerns, consider saving these values in .env files)\n\nconst auth = 'Basic ' + Buffer.from(projectId + ':' + projectSecret).toString('base64');\n\nconst ipfsClient = create({\n    host: 'ipfs.infura.io',\n    port: 5001,\n    protocol: 'https',\n    headers: {\n        authorization: auth,\n    },\n    timeout:'2m'\n});\n\nconst CreateNFT = () => {\n    \n    const { colId } = useParams();\n    const [chainId, setChainId] = useState();\n    const [currentAccount, setCurrentAccount] = useState(null);\n    const [image, setImage] = useState(); \n    const setAccount = (_account) => {\n        setCurrentAccount(_account);\n    }\n    const [web3Api, setWeb3Api] = useState(null);\n\n    const [buffer, setBuffer] = useState();\n    const [displayImage, setDisplayImage] = useState();\n    const [data, setData] = useState({\n        nftName: \"\", ownerName: \"\", description: \"\", price: \"\",  numMint: \"0\"\n    })\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const [dataType, setDataType] = useState();\n    const [errStr, setError] = useState(false);\n    const [underminting, setUnderminting] = useState(false);\n    const [mintMulti, setMintMulti] = useState(false);\n    const [nftContract, setNftContract] = useState();\n    const [errText, setErrText] = useState(\"\");\n\n    let clickedMultiYN = false;\n\n    useEffect(async () => {\n        if (chainId && web3Api && currentAccount) {\n            const nftContratFile = await fetch(\"/abis/ZkSeaNFT.json\");\n            const convertNftContratFileToJson = await nftContratFile.json();\n            const nFTAbi = convertNftContratFileToJson;\n    \n            let nftContract = new web3Api.eth.Contract(nFTAbi, NFTAddr[chainId]);\n            setNftContract(nftContract);\n        }        \n    }, [chainId, web3Api, currentAccount])\n\n    const selectImage = (e) => {\n        setErrText(\"\");\n        if (e.target.files[0]?.type === \"video/mp4\" || e.target.files[0]?.type === \"video/webm\" || e.target.files[0]?.type === \"audio/mpeg\" || e.target.files[0]?.type === \"image/jpeg\" || e.target.files[0]?.type === \"image/png\" || e.target.files[0]?.type === \"image/gif\" || e.target.files[0]?.type === \"image/svg\" || e.target.files[0]?.type === \"image/jpg\") {\n            setDataType(e.target.files[0]?.type)\n            setImage(e.target.files[0])\n            const file = e.target.files[0];\n            const render = new FileReader()\n            render.onload = () => {\n                if (render.readyState === 2) {\n                    setDisplayImage(render.result)\n                }\n                const reader = new window.FileReader()\n                reader.readAsArrayBuffer(file)\n                reader.onloadend = () => {\n                    const buffer = Buffer.from(reader.result);\n                    setBuffer(buffer);\n                }\n            }\n            if (e.target.files[0]) {\n                render.readAsDataURL(e.target.files[0]);\n            }\n        } else {\n            alert('Choose the supported file')\n        }\n    }\n\n    const checkSubmitValidation = () => {\n\n        if (!data.nftName) {\n            setErrText('Please input NFT name');\n            return false;\n        } else {\n            setErrText('');\n        }\n\n        if (!data.ownerName) {\n            setErrText('Please input Owner name');\n            return false;\n        } else {\n            setErrText('');\n        }\n\n        if (!data.description) {\n            setErrText('Please input NFT description');\n            return false;\n        } else {\n            setErrText('');\n        }\n\n        if (!image) {\n            setErrText('Please choose NFT image');\n            return false;\n        } else {\n            setErrText('');\n        }\n\n        let validPrice = true;    \n        let validCopies = true; \n\n        if (clickedMultiYN) {\n            if (data.price && Number(data.price) > 0) {\n                validPrice = true;\n            } else {\n                validPrice = false;\n            }\n\n            if (data.numMint && Number(data.numMint) > 0) {\n                validCopies = true;\n            } else {\n                validCopies = false;\n            }\n        } else {\n            setErrText('');\n        }\n\n        if (!validPrice) {\n            setErrText('Please input NFT price');\n            return false;\n        }\n\n        if (!validCopies) {\n            setErrText('Please input number of NFTs');\n            return false;\n        }\n    }\n\n    const submit = async (_event) => {\n\n        _event.preventDefault();\n        // back if under minting\n        if(underminting) return;\n        \n        if(checkSubmitValidation() === false) {\n            setShow(false);\n            return;\n        }\n\n        if (clickedMultiYN) {\n            setMintMulti(true);\n        } else {\n            setMintMulti(false);\n        } \n\n        if (web3Api) {\n            setError(false);\n            setUnderminting(true);\n            try {\n                const uploadResult = await ipfsClient.add(buffer);\n                if (clickedMultiYN) {\n                    setMintMulti(true);\n                    mintMultiple(uploadResult.path);\n                } else {\n                    setMintMulti(false);\n                    mintNft(uploadResult.path);\n                }                \n            } catch (error) {\n                console.log('error - IPFS', error);\n                setError(true)\n                setUnderminting(false);\n            }            \n        } else {\n            setError(true)\n            setUnderminting(false);\n        }\n    }\n\n    const checkDuplicatedImage = async (_imgPath) => {        \n        return await nftContract.methods.stopduplicate(_imgPath).call();\n    }\n\n    const mintNft = async (_imgPath) => {\n        \n        if (web3Api) {\n            const duplicatedImage = await checkDuplicatedImage(_imgPath);\n            console.log(duplicatedImage);\n            if (duplicatedImage == true) {\n                setUnderminting(false);\n                setErrText(\"NFT image already used.\");\n                return false;\n            }           \n            \n            setUnderminting(true);\n            const des = JSON.stringify([data.description, dataType])\n            const gasPriceNumber = await getGasPrice();\n\n            nftContract.methods.create(colId, currentAccount, _imgPath, data.nftName, data.ownerName, 1, des).send({ from: currentAccount, gasPrice: gasPriceNumber })\n            .then((result) => {\n                console.log(result);\n                if(data.price != \"0\") {\n                    nftIndex();\n                } else {\n                    setUnderminting(false);\n                }\n            }).catch((err) => {\n                setUnderminting(false)\n            })\n        }\n    }\n\n    const nftIndex = async () => {\n        if (web3Api) {\n            nftContract.methods.tokenidmint().call()\n            .then((id) => {\n                fixedSale(id)\n            })\n            .catch(() => {\n                setUnderminting(false);\n            })\n        }\n    }\n\n    const fixedSale = async (tokenid) => {\n        if (web3Api) {\n            let amount = parseFloat(data.price) * 1e18;\n            const gasPriceNumber = await getGasPrice();\n            nftContract.methods.fixedsales(tokenid, amount).send({ from: currentAccount, gasPrice: gasPriceNumber })\n            .then((length) => {\n                if (length.status === true) {\n                    setUnderminting(false)\n                    // history.push('/mycollection')\n                } else {\n                    alert('failed');\n                    setUnderminting(false);\n                }\n            })\n            .catch((err) => {\n                setUnderminting(false)\n            })\n        }\n    }\n\n    const mintMultiple = async (nftImage) => {\n        if (web3Api) {\n            setShow(true)\n            let copies = 1;\n\n            const des = JSON.stringify([data.description, dataType])\n            const _times = data.numMint;\n\n            let amount = 0;\n            if (data.price)\n                amount = ethers.utils.formatUnits(ethers.utils.parseUnits(data.price.toString(), 18), 0);\n\n            nftContract.methods.mintfee().call({ from: currentAccount })\n            .then(async (value) => {\n                let mintfee = value;                \n                mintfee = ethers.utils.formatUnits(BigNumber.from(mintfee), 9);\n\n                let mintfeeTotal = parseFloat(mintfee) * _times;\n                mintfeeTotal = ethers.utils.formatUnits(ethers.utils.parseUnits(mintfeeTotal.toString(), 9), 0);\n\n                const gasPriceNumber = await getGasPrice();\n\n                nftContract.methods.createMulti(colId, currentAccount, nftImage, data.nftName, data.ownerName, copies, des, _times, amount).send({ from: currentAccount, value: mintfeeTotal, gasPrice: gasPriceNumber})\n                .then((result) => {\n                    if (result.status === true) { \n                        // history.goBack();\n                        setShow(false);\n                        setUnderminting(false)\n                    } else {\n                        alert('failed');\n                        setUnderminting(false)\n                    }\n                }).catch((err) => {\n                    setShow(false);\n                    setUnderminting(false)\n                })\n            }).catch(() => {\n                setUnderminting(false);\n            })\n        }\n    }\n\n    return (\n        <div className='nftland'>\n            <Header setAccount={setAccount} setWeb3Api={setWeb3Api} setChainId={setChainId}/>\n            <section className=\"main-section creatCollection\">\n                <div className=\"autoContainer\">\n                    <div className=\"creatCollection__inner\">\n                        <div className=\"creatCollection__inner-image\">\n                            <div className=\"ratioImage\">\n                                {displayImage ? <img src={displayImage} alt=\"\" /> : <img src=\"/assets/images/default.jpg\" style={{ objectFit: 'contain', width: '100%' }} />}\n                            </div>\n                        </div>\n                        <div className=\"creatCollection__inner-form\" >\n                            <div className=\"creatCollection__form-buttons\">\n                                <button className=\"button--primary\">Create NFT</button>\n                                <button className=\"button--border\">\n                                    <span> NFT Details </span>\n                                </button>\n                            </div>\n                            <div className=\"creatCollection__form-file\">\n                                <h5>File type supported: JPG,JPEG,PNG,GIF</h5>\n                                <div className=\"creatCollection__form-file-input\">\n                                <input type=\"file\" name=\"sd\" id=\"\" onChange={selectImage}/>\n                                <span><img src=\"/assets/images/zk/document-upload.svg\" alt=\"\" /></span>\n                                <p>Choose a file</p>\n                                </div>\n                            </div>\n                            <div className=\"creatCollection__form-inputs\" style={{marginBottom:0}}>\n                                <div className=\"creatCollection__form-inputs-body\">\n                                    <input type=\"text\" placeholder=\"NFT Name\" onChange={(e) => setData({ ...data, nftName: e.target.value })}/>\n                                    <input type=\"text\" placeholder=\"Owner Name\" onChange={(e) => setData({ ...data, ownerName: e.target.value })}/>\n                                </div>\n                                <textarea placeholder=\"Description\" onChange={(e) => setData({ ...data, description: e.target.value })} style={{marginTop:8}}></textarea>\n                                <input type=\"number\" placeholder=\"Leave Price Empty To Auction Your NFT\" onChange={(e) => setData({ ...data, price: e.target.value })}/>\n                            </div>\n                            <button className=\"button--primary\" onClick={(e)=> {clickedMultiYN = false; submit(e);}}>Mint {!mintMulti && underminting && <i className='fas fa-spinner fa-pulse fa-1x ml-3'></i>}</button>\n                            \n                            <div className=\"creatCollection__form-inputs\" style={{marginTop:8}}>                                \n                                <div className=\"creatCollection__form-inputs-body\">\n                                    <input type=\"text\" placeholder=\"Number of NFTs\" onChange={(e) => setData({ ...data, numMint: e.target.value })}/>\n                                    <button className=\"button--primary\"  onClick={(e)=> {clickedMultiYN = true; submit(e);}}>Mint(Multiple) {mintMulti && underminting && <i className='fas fa-spinner fa-pulse fa-1x ml-3'></i>}</button>\n                                </div>                                \n                            </div>                            \n                            <p style={{color:\"red\", position:\"absolute\", bottom:20}}>{errText}</p>\n                        </div>\n                    </div>                    \n                </div>\n            </section>\n            <Footer />\n        </div>\n    );\n}\n\nexport default CreateNFT;\n","import React , { useState, useEffect } from 'react';\nimport { Link, useParams ,} from 'react-router-dom';\nimport {ethers, BigNumber} from \"ethers\"\nimport { create } from 'ipfs-http-client'\n\nimport Header from '../components/header/Header';\nimport Footer from '../components/footer/Footer';\nimport {NFTAddr, CHAIN_INFO} from '../config/constants'\nimport { getGasPrice } from '../utils/utils';\n\nconst projectId = '2El2aEUHT8Nd5OYGu6J4aH52G8u';   // <---------- your Infura Project ID\nconst projectSecret = '2fe6b07c9760882f34bd4965e0841ac0';  // <---------- your Infura Secret\n// (for security concerns, consider saving these values in .env files)\n\nconst auth = 'Basic ' + Buffer.from(projectId + ':' + projectSecret).toString('base64');\n\nconst ipfsClient = create({\n    host: 'ipfs.infura.io',\n    port: 5001,\n    protocol: 'https',\n    headers: {\n        authorization: auth,\n    },\n    timeout:'2m'\n});\n\nconst FreeMint = () => {\n    \n    const { colId } = useParams();\n    const [chainId, setChainId] = useState();\n    const [currentAccount, setCurrentAccount] = useState(null);\n    const [image, setImage] = useState(); \n    const setAccount = (_account) => {\n        setCurrentAccount(_account);\n    }\n    const [web3Api, setWeb3Api] = useState(null);\n\n    const [buffer, setBuffer] = useState();\n    const [displayImage, setDisplayImage] = useState();\n    const [data, setData] = useState({\n        nftName: \"ZkSea - Spring Thaw\", ownerName: \"ZkSea\", description: \"ZkSea: Spring Thaw\", price: \"0\",  numMint: \"1\"\n    })\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const [dataType, setDataType] = useState();\n    const [errStr, setError] = useState(false);\n    const [underminting, setUnderminting] = useState(false);\n    const [nftContract, setNftContract] = useState();\n    const [balance, setBalance] = useState();\n    const [errText, setErrText] = useState(\"\");\n    const [txHash, setTxHash] = useState(\"\");\n    const [mintResult, setMintResult] = useState(false);\n\n    useEffect(async () => {\n        if (chainId, web3Api && currentAccount) {\n            const nftContratFile = await fetch(\"/abis/ZkSeaNFT.json\");\n            const convertNftContratFileToJson = await nftContratFile.json();\n            const nFTAbi = convertNftContratFileToJson;\n    \n            let nftContract = new web3Api.eth.Contract(nFTAbi, NFTAddr[chainId]);\n            setNftContract(nftContract);\n\n            const balance = await web3Api.eth.getBalance(currentAccount);\n            setBalance(web3Api.utils.fromWei(balance, 'ether'));\n        }        \n    }, [chainId, web3Api, currentAccount])\n\n    useEffect(async () => {\n        selectImage();\n    }, [])    \n\n    const freemintimageurl = \"/assets/images/zk/freemint.mp4\";\n    const selectImage = () => {\n        fetch(freemintimageurl, {\n            method: 'GET'\n          })\n        .then(async response => {\n            const blob = await response.blob();\n            const file = new File([blob], 'zkseafree.mp4', { type: 'video/mp4' });\n            console.log(\"Here is JavaScript File Object\",file);\n            setImage(file);\n            setDisplayImage(freemintimageurl);\n            setDataType('video/mp4');\n\n        })\n    }\n\n    const checkSubmitValidation = () => {\n        console.log('balalce == ', balance);\n        if (balance < web3Api.utils.fromWei(\"10000000000000000\", 'ether')) {\n            setErrText('Low balance');\n            return false;\n        }\n\n    }\n\n    const submit = async (_event) => {\n\n        _event.preventDefault();\n        // back if under minting\n        if(underminting) return;\n        setMintResult(false);\n        \n        if(checkSubmitValidation() === false) {\n            setShow(false);\n            return;\n        }\n\n        if (web3Api) {\n            setError(false);\n            setUnderminting(true);\n            try {\n                // const uploadResult = await ipfsClient.add(image);\n                // mintMultiple(uploadResult.path);\n                mintMultiple(\"QmZCtJkxtEg3E5Yn137KfpjggJToXCsYBf3X3RvvfbbCSf\");\n            } catch (error) {\n                console.log('error - IPFS', error);\n                setError(true)\n                setUnderminting(false);\n            }            \n        } else {\n            setError(true)\n            setUnderminting(false);\n        }\n    }\n\n    const mintMultiple = async (nftImage) => {\n        if (web3Api) {\n            setShow(true)\n            let copies = 1;\n\n            const des = JSON.stringify([data.description, dataType])\n            const _times = data.numMint;\n\n            let amount = 0;\n            if (data.price)\n                amount = ethers.utils.formatUnits(ethers.utils.parseUnits(data.price.toString(), 18), 0);\n\n            nftContract.methods.mintfee().call({ from: currentAccount })\n            .then(async (value) => {\n                let mintfee = value;                \n                mintfee = ethers.utils.formatUnits(BigNumber.from(mintfee), 9);\n\n                let mintfeeTotal = parseFloat(mintfee) * _times;\n                mintfeeTotal = ethers.utils.formatUnits(ethers.utils.parseUnits(mintfeeTotal.toString(), 9), 0);\n                \n                const gasPriceNumber = await getGasPrice();\n                \n                nftContract.methods.createMulti(\"1\", currentAccount, nftImage, data.nftName, data.ownerName, copies, des, _times, amount).send({ from: currentAccount, value: mintfeeTotal, gasPrice: gasPriceNumber})\n                .then((result) => {\n                    if (result.status === true) { \n                        // console.log(result.transactionHash);\n                        setTxHash(result.transactionHash);\n                        // history.goBack();\n                        setShow(false);\n                        setUnderminting(false);\n                        setMintResult(true);\n                    } else {\n                        alert('failed');\n                        setUnderminting(false)\n                    }\n                }).catch((err) => {\n                    console.log(err)\n                    setShow(false);\n                    setUnderminting(false)\n                })\n            }).catch((err) => {\n                console.log(err)\n                setUnderminting(false);\n            })\n        }\n    }\n\n    return (\n        <>\n            <Header setAccount={setAccount} setWeb3Api={setWeb3Api} setChainId={setChainId}/>\n            <section className=\"first-section\">\n                <div className=\"autoContainer\">\n                <div className=\"hero__bg\">\n                    <span className=\"blur\"></span>\n                </div>\n                <div className=\"hero__inner\">\n                    <div className=\"hero__inner-content\">\n                    <h1>CLAIM YOUR PIECE OF WEB3 HISTORY BELOW.</h1>\n                    <div className=\"hero__inner-banner\">\n                        <img src=\"/assets/images/zk/f-mint-intro.png\" alt=\"\" />\n                        <span></span>\n                    </div>\n                    <p>\n                        Begin the steps to connect your MetaMask wallet and claim your\n                        Shanghai/Capella NFT.\n                    </p>\n                    <p>\n                        If you don't have\n                        <a\n                        href=\"https://metamask.io/\"\n                        className=\"link link--inline\"\n                        target=\"_blank\"\n                        >MetaMask</a\n                        >\n                        we can help you install it and show you how to fund your account\n                        to pay the network gas fee.\n                    </p>\n                    <div className=\"hero__inner-content-group\">\n                        <button className=\"button button--primary _lg\">                            \n                            <span className=\"_hideMob\">Start you nft claim</span>\n                            <img src=\"/assets/images/zk/f-arrow-right.svg\"></img>                        \n                        </button>\n                        <small>Powered by ConsenSys NFT</small>\n                    </div>\n                    </div>\n                </div>\n                </div>\n            </section>\n            <section className=\"note\">\n                <div className=\"autoContainer\">\n                    <div className=\"note__inner\">\n                        <div className=\"note__inner-title\">\n                        <h2 className=\"lg\">\n                            SHANGHAI<span>/<br /></span> CAPELLA\n                        </h2>\n                        </div>\n                        <div className=\"note__inner-text\">\n                        <p className=\"sm\">\n                            A CELEBRATION OF THE NEXT MILESTONE IN THE EVOLUTION OF ETHEREUM\n                            <strong className=\"noBreak\"\n                            >OPEN EDITION - Available for 28h 40m 36s</strong\n                            >\n                        </p>\n                        <p className=\"sm\">\n                            Celebrate the Ethereum Shanghai/Capella upgrade with a limited\n                            availability NFT.\n                            <span className=\"noBreak\"> FREE - SUBJECT TO NETWORK GAS FEE </span>\n                        </p>\n                        </div>\n                    </div>\n                </div>\n            </section>\n            <section className=\"nft\">\n                <div className=\"autoContainer\">\n                    <div className=\"nft__inner\">\n                        <div className=\"nft__bg\">\n                        <span className=\"blur\"></span>\n                        </div>\n                        <div className=\"nft__inner-banner\">\n                        <div className=\"ratioImage\" style={{paddingBottom:0}}>\n                            {/* <img src={displayImage} alt=\"\" /> */}\n                            <video alt=\"\" muted autoPlay loop style={{objectFit:\"contain\", borderRadius:\"inherit\", marginBottom:0}}>\n                                <source src=\"/assets/images/zk/freemint.mp4\" />\n                            </video>\n                        </div>\n                        </div>\n                        <div className=\"nft__inner-header\">\n                        <h3>ZkSea: Spring Thaw</h3>\n                        <span className=\"badge\">0x864e</span>\n                        <Link to=\"#\" className=\"badge\">\n                            <img src=\"/assets/images/zk/chain.svg\" alt=\"\" />\n                            Link\n                        </Link>\n                        <p className=\"xlg\">\n                            A commemorative NFT to mark the Linea launch amidst the zkEVM\n                            spring.\n                        </p>\n                        </div>\n                        <ul className=\"nft__inner-list\">\n                        <li className=\"nft__inner-list-item\">\n                            <span>Price</span>\n                            <strong>Free</strong>\n                        </li>\n                        <li className=\"nft__inner-list-item\">\n                            <span>Mint fee</span>\n                            <div className=\"nft__inner-list-item-group\">\n                            <strong>0.00069 ETH</strong>\n                            <small>-$ 1.43</small>\n                            </div>\n                        </li>\n                        <li className=\"nft__inner-list-item _footer\">\n                            <span>Mint fee</span>\n                            <div className=\"nft__inner-list-item-group\">\n                            <strong>0.00069 ETH</strong>\n                            <small>-$ 1.43</small>\n                            </div>\n                        </li>\n                        </ul>\n                        <div className=\"nft__inner-footer\">\n                        <h3 className=\"color--danger\">{errText}</h3>\n                        <div className=\"nft__inner-footer-content\">\n                            <button className=\"badge badge--black\" onClick={(e) => {submit(e)}}>\n                                {underminting ? <span>Minting</span> : <span>Mint</span>}\n                                {underminting && <span className=\"spinner\"></span>}\n                            </button>\n                            <div className=\"nft__inner-footer-content-row\">\n                            <div className=\"badge badge--column badge--lightprimary\">\n                                Ends in<br />\n                                <strong>65 days</strong>\n                            </div>\n                            <div className=\"badge badge--column badge--lightprimary\">\n                                Minted<br />\n                                <strong>92,740</strong>\n                            </div>\n                            </div>\n                            {mintResult && \n                                <a className=\"button button--primary _lg\" href={CHAIN_INFO[chainId].blockExplorerUrls + \"/tx/\" + txHash} target=\"_blank\">\n                                    <span>\n                                        <span className=\"_hideMob\">Successfully minted -</span>\n                                        view on etherscan\n                                    </span>\n                                    <img src=\"/assets/images/zk/f-arrow-right.svg\"></img>\n                                </a>\n                            }\n                            <button className=\"button button--text\">Switch wallet</button>\n                        </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n            <Footer />\n        </>\n    );\n}\n\nexport default FreeMint;\n","import React, { useState ,useEffect } from 'react';\nimport { Link } from 'react-router-dom'\nimport logodark from '../../assets/images/logo/logo.svg'\nimport logofooter from '../../assets/images/logo/logo.svg'\nconst Footer = () => {\n\n    const resourcesList = [\n        {\n            title: \"White Paper\",\n            link: \"#\"\n        },\n        {\n            title: \"NFT MarketPlace\",\n            link: \"#\"\n        },\n        \n    ]\n\n    const socialList = [\n        {\n            icon: \"fab fa-twitter\",\n            link: \"#\"\n        },\n        // {\n        //     icon: \"fab fa-facebook\",\n        //     link: \"#\"\n        // },\n        {\n            icon: \"fab fa-telegram-plane\",\n            link: \"#\"\n        },\n        // {\n        //     icon: \"fab fa-youtube\",\n        //     link: \"#\"\n        // },\n        // {\n        //     icon: \"icon-fl-tik-tok-2\",\n        //     link: \"#\"\n        // },\n        // {\n        //     icon: \"icon-fl-vt\",\n        //     link: \"#\"\n        // },\n        \n\n    ]\n\n    const [isVisible, setIsVisible] = useState(false);\n\n    const scrollToTop = () => {\n      window.scrollTo({\n        top: 0,\n        behavior: \"smooth\"\n      });\n    };\n  \n    useEffect(() => {\n      const toggleVisibility = () => {\n        if (window.pageYOffset > 500) {\n          setIsVisible(true);\n        } else {\n          setIsVisible(false);\n        }\n      };\n  \n      window.addEventListener(\"scroll\", toggleVisibility);\n  \n      return () => window.removeEventListener(\"scroll\", toggleVisibility);\n    }, []);\n\n      \n    return (\n        <div style={{marginTop:30}}>\n            <footer id=\"footer\" className=\"footer-light-style clearfix bg-style\">\n                <div className=\"themesflat-container\">\n                    <div className=\"row\">\n                        <div className=\"col-lg-4 col-md-12 col-12\">\n                            <div className=\"widget widget-logo\">\n                                <div className=\"logo-footer\" id=\"logo-footer\">\n                                    <Link to=\"/\">\n                                        <img className='logo-dark' style={{height:72}} src={logodark} alt=\"nft-gaming\" />\n                                        <img className='logo-light' style={{height:72}} src={logofooter} alt=\"nft-gaming\" />\n                                        \n                                    </Link>\n                                </div>\n                                <p className=\"sub-widget-logo\">ZkSea Pro©Copyright 2023</p>\n                            </div>\n                        </div>\n                        \n                        <div className=\"col-lg-4 col-md-4 col-sm-5 col-5\">\n                            <div className=\"widget widget-menu fl-st-3\">\n                                <h3 className=\"title-widget\">ZK Sea Pro</h3>\n                                <ul style={{color:\"white\"}}>\n                                    {\n                                        resourcesList.map((item,index) =>(\n                                            <li key={index}><Link to={item.link}><p>{item.title}</p></Link></li>\n                                        ))\n                                    }\n                                </ul>\n                            </div>\n                        </div>\n                        <div className=\"col-lg-3 col-md-6 col-sm-7 col-12\">\n                            <div className=\"widget widget-subcribe\">\n                                <h3 className=\"title-widget\">Join Newsletter</h3>\n                                <div className=\"form-subcribe\">\n                                    <form id=\"subscribe-form\" action=\"#\" method=\"GET\" acceptCharset=\"utf-8\" className=\"form-submit\">\n                                        <input name=\"email\"  className=\"email\" type=\"email\" placeholder=\"your@mail.com\" required />\n                                        <button id=\"submit\" name=\"submit\" type=\"submit\"><i className=\"icon-fl-send\"></i></button>\n                                    </form>\n                                </div>\n                                <div className=\"widget-social style-1 mg-t32\">\n                                    <ul>\n                                        {\n                                            socialList.map((item,index) =>(\n                                                <li key={index}><Link to={item.link}><i className={item.icon}></i></Link></li>\n                                            ))\n                                        }\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </footer>\n        </div>\n\n    );\n}\n\nexport default Footer;\n","import React , { useRef , useState , useEffect } from 'react';\nimport { Link , useLocation } from \"react-router-dom\";\nimport { Modal } from \"react-bootstrap\";\nimport Web3Modal from \"web3modal\";\nimport { ethers } from \"ethers\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport Web3 from \"web3\"\n\nimport menus from \"../../pages/menu\";\nimport menuChains from \"../../pages/menuChains\";\nimport DarkMode from './DarkMode';\nimport logoheader from '../../assets/images/logo/logo.svg'\nimport logoheader2x from '../../assets/images/logo/logo.svg'\nimport logodark from '../../assets/images/logo/logo.svg'\nimport logodark2x from '../../assets/images/logo/logo.svg'\nimport { CHAIN_ARBI_ONE, CHAIN_BSC, CHAIN_INFO, CHAIN_ZKMAIN, CHAIN_ZKTEST } from '../../config/constants';\n\nlet web3Modal;\nlet provider;\nlet selectedAccount;\nlet chainIdSaved;\n\n// import Web3 from 'web3'\nfunction init() {    \n    if (localStorage) {\n        chainIdSaved = localStorage.getItem('nftzksea-chainId');\n        if (chainIdSaved == undefined || chainIdSaved == \"undefined\") {\n            chainIdSaved = CHAIN_ZKTEST;\n        }   \n    } else {\n        chainIdSaved = CHAIN_ZKTEST;\n    }\n    \n    let rpcOption = {};\n\n    switch (chainIdSaved) {\n        case CHAIN_BSC:\n            rpcOption = {\n                56:CHAIN_INFO[CHAIN_BSC].rpcUrls\n            }\n            break;\n        case CHAIN_ZKMAIN:\n            rpcOption = {\n                324:CHAIN_INFO[CHAIN_ZKMAIN].rpcUrls\n            }\n            break;\n        case CHAIN_ARBI_ONE:\n            rpcOption = {\n                42161:CHAIN_INFO[CHAIN_ARBI_ONE].rpcUrls\n            }\n            break;\n    \n        default:\n            rpcOption = {\n                280:CHAIN_INFO[CHAIN_ZKTEST].rpcUrls\n            }\n            break;\n    }\n\n    const providerOptions = {\n        walletconnect: {\n        package: WalletConnectProvider,\n        options: {\n            network:'mainnet',\n            rpc: rpcOption,\n            chainId:chainIdSaved\n        }\n        },           \n    };\n\n    web3Modal = new Web3Modal({\n        network: \"mainnet\", // optional\n        cacheProvider: true, // optional\n        providerOptions // required\n    });\n    \n    window.w3m = web3Modal;\n}\n\nasync function fetchAccountData() {\n    const web3Provider = new ethers.providers.Web3Provider(provider);\n    const signer = web3Provider.getSigner();\n    selectedAccount = await signer.getAddress();\n    console.log(selectedAccount);    \n    return selectedAccount;\n}\n\nasync function refreshAccountData() {\n    await fetchAccountData(provider);\n    window.location.reload();\n}\n\nasync function onConnect() {\n    console.log(\"Opening a dialog\", web3Modal);\n    if (window.ethereum) {\n        try {\n            provider = await web3Modal.connect({ cacheProvider: true });\n        } catch (e) {\n            console.log(\"Could not get a wallet connection\", e);\n            return;\n        }\n    \n        provider.on(\"accountsChanged\", (accounts) => {\n            console.log('accountsChanged',accounts);\n            fetchAccountData();\n            window.location.reload();\n        });\n    \n        provider.on(\"chainChanged\", (chainId) => {\n            fetchAccountData();\n            // window.location.reload();\n        });\n    \n        provider.on(\"networkChanged\", (networkId) => {\n            fetchAccountData();\n            // window.location.reload();\n        });\n        // window.location.reload()\n    \n        await refreshAccountData();\n    } else {\n        alert(\"Please install Crypto Walelt \");\n    }\n    \n}\n\nasync function disconnet() {\n    console.log(\"Opening a dialog\", web3Modal);\n    try {\n        // provider = await web3Modal.connect();\n        await web3Modal.clearCachedProvider();\n        // await window.ethereum.disable()\n        window.location.reload()\n    } catch (e) {\n        console.log(\"Could not get a wallet connection\", e);\n        return;\n    }   \n}\n\nconst Header = (props) => {   \n\n    const [modalShow, setModalShow] = useState(false);\n    /*****************************  wallet connection ***************************/\n    const [acc,setacc] = useState()\n    const [accountid, setaccountid] = useState();\n    const [web3, setWeb3] = useState();\n    \n    // iniit web3 provider\n    useEffect(async () => {\n        if (acc) {\n            // const accounts1 = await window.ethereum.request({ method: 'eth_requestAccounts' });\n            // setaccountid(accounts1[0])\n            provider = await web3Modal.connect();\n            let web3_2 = new Web3(provider);\n            const accounts = await web3_2.eth.getAccounts();\n            setWeb3(web3_2);\n            props.setWeb3Api(web3_2);\n            setaccountid(accounts[0]);\n            props.setAccount(accounts[0]);\n            setProviderEvent();\n        }\n\n    }, [acc]);\n\n    useEffect(() => {\n        init();\n        props.setChainId(chainIdSaved);\n        getAccount();\n        if (web3Modal.cachedProvider) {\n            setacc(true)\n        }\n    }, []); \n\n    function setProviderEvent() {\n        provider.on(\"accountsChanged\", (accounts) => {\n            console.log('accountsChanged',accounts)\n            fetchAccountData();\n            window.location.reload();\n        });\n    \n        provider.on(\"chainChanged\", (chainId) => {\n            fetchAccountData();\n            // window.location.reload();\n        });\n    \n        provider.on(\"networkChanged\", (networkId) => {\n            fetchAccountData();\n        });\n    }\n\n    async function getAccount() {\n        // const web3_2 = new Web3(window.ethereum, null, { transactionConfirmationBlocks: 1 })\n        if (window.ethereum) {\n            console.log(CHAIN_INFO[chainIdSaved].chainId);\n            // request change chain\n            try {\n                await window.ethereum.request({\n                    method: 'wallet_switchEthereumChain',\n                    params: [{ chainId: CHAIN_INFO[chainIdSaved].chainId}],\n                });\n            } catch (switchError) {\n                console.log(switchError);\n                // This error code indicates that the chain has not been added to MetaMask.\n                if (switchError.code === 4902) {\n                    try {\n                        const data = [CHAIN_INFO[chainIdSaved]]\n\n                        await window.ethereum.request({\n                            method: 'wallet_addEthereumChain',\n                            params: data,\n                        });\n                    } catch (addError) {\n                        \n                    }\n                }\n            }\n        } \n    }\n\n    /****************************  wallet connection end *************************/\n\n    const changeChain = (_chainId) => {\n        if (_chainId) {\n            if (_chainId == chainIdSaved) return;\n\n            localStorage.setItem('nftzksea-chainId', _chainId);\n            init();\n            props.setChainId(_chainId);\n            getAccount();\n            // window.location.reload();\n        }\n        \n    }\n    /****************************  wallet connection end *************************/\n    const { pathname } = useLocation();\n    const headerRef = useRef (null)\n    useEffect(() => {\n        window.addEventListener('scroll', isSticky);\n        return () => {\n            window.removeEventListener('scroll', isSticky);\n        };\n    });\n\n    const isSticky = (e) => {\n        const header = document.querySelector('.js-header');\n        const scrollTop = window.scrollY;\n        scrollTop >= 300 ? header.classList.add('is-fixed') : header.classList.remove('is-fixed');\n        scrollTop >= 400 ? header.classList.add('is-small') : header.classList.remove('is-small');\n    };\n\n    const menuLeft = useRef(null)\n    const btnToggle = useRef(null)\n    const btnSearch = useRef(null)\n\n    const menuToggle = () => {\n        menuLeft.current.classList.toggle('active');\n        btnToggle.current.classList.toggle('active');\n    }\n\n    const [activeIndex, setActiveIndex] = useState(null);\n    const handleOnClick = index => {\n        setActiveIndex(index); \n    };\n    \n    const onHideModal = () => {\n        setModalShow(false);\n    }\n\n    return (\n        <header id=\"header_main\" className=\"header_1 js-header\" ref={headerRef}>\n            <div className=\"themesflat-container\">\n                <div className=\"row\">\n                    <div className=\"col-md-12\">                              \n                        <div id=\"site-header-inner\"> \n                            <div className=\"wrap-box flex\">\n                                <div id=\"site-logo\" className=\"clearfix\">\n                                    <div id=\"site-logo-inner\">\n                                        <Link to=\"/\" rel=\"home\" className=\"main-logo\">\n                                            <img className='logo-dark'  id=\"logo_header\" src={logodark} srcSet={`${logodark2x}`} alt=\"nft-gaming\" />\n                                            <img className='logo-light'  id=\"logo_header\" src={logoheader} srcSet={`${logoheader2x}`} alt=\"nft-gaming\" />\n                                        </Link>\n                                    </div>\n                                </div>\n                                <div className=\"mobile-button\" ref={btnToggle} onClick={menuToggle}><span></span></div>\n                                <nav id=\"main-nav\" className=\"main-nav\" ref={menuLeft} >\n                                    <ul id=\"menu-primary-menu\" className=\"menu\">\n                                        {\n                                            menus.map((data,index) => (\n                                                <li key={index} onClick={()=> handleOnClick(index)} className={`menu-item ${data.namesub ? 'menu-item-has-children' : '' } ${activeIndex === index ? 'active' : ''} ` }   >\n                                                    <Link to={data.links}>{data.name}</Link>\n                                                    {\n                                                         data.namesub &&\n                                                         <ul className=\"sub-menu\" >\n                                                            {\n                                                                data.namesub.map((submenu) => (\n                                                                    <li key={submenu.id} className={\n                                                                        pathname === submenu.links\n                                                                        ? \"menu-item current-item\"\n                                                                        : \"menu-item\"\n                                                                    }><Link to={submenu.links}>{submenu.sub}</Link></li>\n                                                                ))\n                                                            }\n                                                        </ul>\n                                                    }\n                                                    \n                                                </li>\n                                            ))\n                                        }\n                                    </ul>                                    \n                                </nav>     \n                                {/* <nav id=\"chain-nav\" className=\"main-nav\" >\n                                    <ul id=\"menu-primary-menu\" className=\"menu\">\n                                        {\n                                            menuChains.map((data,index) => (\n                                                <li key={index} onClick={()=> handleOnClick(index)} className={`menu-item ${data.namesub ? 'menu-item-has-children' : '' } ${activeIndex === index ? 'active' : ''} ` }   >\n                                                    <Link to={data.links}>{data.name}</Link>\n                                                    {\n                                                         data.namesub &&\n                                                         <ul className=\"sub-menu\" >\n                                                            {\n                                                                data.namesub.map((submenu) => (\n                                                                    <li key={submenu.id} className={\n                                                                        pathname === submenu.links\n                                                                        ? \"menu-item current-item\"\n                                                                        : \"menu-item\"\n                                                                    }><Link to=\"#\" onClick={() => {changeChain(submenu.chainId);}}>{submenu.sub}</Link></li>\n                                                                ))\n                                                            }\n                                                        </ul>\n                                                    }\n                                                    \n                                                </li>\n                                            ))\n                                        }\n                                    </ul>                                    \n                                </nav>                              */}\n                         \n                                <div className=\"flat-search-btn flex\">\n                                {\n                                    accountid ?\n                                    <div>\n                                        <a onClick={()=> setModalShow(true)}>\n                                            <span className='fs-16 user-data'>\n                                                {accountid?.substr(0, 6) + '....' + accountid?.substr(accountid?.length - 4, accountid?.length)}\n                                                <img className='avatar-header mg-l-8' src=\"/assets/images/avt-4.jpg\" alt=\"\" />\n                                            </span>\n                                        </a>                                        \n                                    </div>\n                                    :\n                                    <div className=\"sc-btn-top mg-r-12\" id=\"site-header\">\n                                        <button onClick={()=> onConnect()} className=\"button--primary header-slider style style-1 wallet fl-button pri-1\">\n                                            <span>Wallet Connect</span>\n                                        </button>\n                                    </div>\n                                } \n                                </div>                                \n                            </div> \n                        </div>\n                    </div>\n                </div>\n            </div>\n            <DarkMode />\n            <Modal\n                show={modalShow}\n                onHide={onHideModal}\n            >\n                <Modal.Header closeButton></Modal.Header>\n\n                <div className=\"modal-body space-y-20 pd-40\">\n                <h2>My Account</h2>\n                    <div className=\"\" id=\"header_admin\">\n                        \n                        <div className=\"header_avatar\">\n                            <div className=\"flex justify-content-between\">\n                                <span className='fs-16'> {accountid?.substr(0, 6) + '....' + accountid?.substr(accountid?.length - 4, accountid?.length)}</span>\n                                <i className=\"fal fa-copy fs-16\"></i>\n                            </div>\n                            <div className=\"avatar_popup mt-20\">\n                                <div className=\"d-flex align-items-center copy-text justify-content-between\">\n                                    \n                                </div>\n                                \n                                <div className=\"hr\"></div>\n                                <div className='card-bottom flex justify-content-center'>                                    \n                                    {/* <button className=\"mt-10\" href=\"/edit-profile\">\n                                        <i className=\"fas fa-pencil-alt\"></i> <span> Edit Profile</span>\n                                    </button> */}\n                                    <button onClick={()=> disconnet()} id=\"logout\" className='mt-10'>\n                                        <i className=\"fal fa-sign-out\"></i> <span>{'  '} Logout</span>\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Modal>\n        </header>\n    );\n}\n\nexport default Header;\n","const menus = [\n    {\n        id: 1,\n        name: 'NFTs',\n        links: '/nfts',\n    },\n    {\n        id: 2,\n        name: 'My NFTs',\n        links: '/my-nfts'\n    },\n    {\n        id: 3,\n        name: 'Create',\n        links: '/create'\n    },\n    {\n        id: 4,\n        name: 'Collections',\n        links: '/collections'\n    },\n    {\n        id: 5,\n        name: 'My Collections',\n        links: '/my-collections'\n    }\n]\n\nexport default menus;","import { CHAIN_ARBI_ONE, CHAIN_BSC, CHAIN_ZKMAIN, CHAIN_ZKTEST } from \"../config/constants\";\n\nconst menuChains = [    \n    {\n        id: 1,\n        name: 'ZkSync Testnet',\n        links: '#',\n        chainId: CHAIN_ZKTEST,\n        namesub: [\n            {\n                id: 1,\n                sub: 'ZkSync Mainnet',\n                links: '#',\n                chainId: CHAIN_ZKMAIN,\n            },\n            {\n                id: 2,\n                sub: 'Bsc Mainnet',\n                links: '#',\n                chainId: CHAIN_BSC\n            },\n            {\n                id: 3,\n                sub: 'Arbitrum One',\n                links: '#',\n                chainId: CHAIN_ARBI_ONE\n            },\n            {\n                id: 4,\n                sub: 'ZkSync Testnet',\n                links: '#',\n                chainId: CHAIN_ZKTEST,\n            },\n        ],\n    } \n]\n\nexport default menuChains;","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport imgsun from '../../assets/images/icon/sun.png'\n\nconst DarkMode = () => {\n    let clickedClass = \"clicked\"\n    const body = document.body\n    const lightTheme = \"light\"\n    const darkTheme = \"is_dark\"\n    let theme\n\n    // if (localStorage) {\n    //     theme = localStorage.getItem(\"theme\")\n    // }\n    // if (theme === lightTheme || theme === darkTheme) {\n    //     body.classList.add(theme)\n    // } else {\n    //     body.classList.add(darkTheme)\n    // }\n    body.classList.add(darkTheme);\n\n    const switchTheme = e => {\n        if (theme === darkTheme) {\n            body.classList.replace(darkTheme, lightTheme)\n            e.target.classList.remove(clickedClass)\n            localStorage.setItem(\"theme\", \"light\")\n            theme = lightTheme\n        } else {\n            body.classList.replace(lightTheme, darkTheme)\n            e.target.classList.add(clickedClass)\n            localStorage.setItem(\"theme\", \"is_dark\")\n            theme = darkTheme\n        }\n    }\n    return (\n        // <div className=\"mode_switcher\">\n        //     {/* <h6>Dark mode <strong>Available</strong></h6> */}\n        //     <Link to=\"#\" \n        //         onClick={e => switchTheme(e)}  >\n        //         <img src={imgsun} alt=\"\" />\n        //     </Link>\n\n        // </div>\n        <></>\n    );\n}\n\nexport default DarkMode;\n","export default __webpack_public_path__ + \"static/media/logo.0677b593.svg\";"],"sourceRoot":""}